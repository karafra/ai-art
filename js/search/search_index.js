var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/injectables/AiArtCommand.html",[0,0.477,1,3.479]],["body/injectables/AiArtCommand.html",[0,0.794,1,5.791,2,1.545,3,0.259,4,0.214,5,0.192,6,2.485,7,3.913,8,5.448,9,1.048,10,0.014,11,2.908,12,1.794,13,2.097,14,1.066,15,5.215,16,3.633,17,3.633,18,5.448,19,5.215,20,3.024,21,3.338,22,3.024,23,5.448,24,5.215,25,2.869,26,3.199,27,5.448,28,0.649,29,2.278,30,1.727,31,1.383,32,2.278,33,2.378,34,2.278,35,1.435,36,3.913,37,0.236,38,0.029,39,0.012,40,0.012]],["title/injectables/AiArtLoggerService.html",[0,0.477,41,2.669]],["body/injectables/AiArtLoggerService.html",[0,0.541,2,0.876,3,0.3,4,0.121,5,0.109,9,0.862,10,0.015,14,0.604,28,0.789,29,1.291,30,2.309,37,0.134,38,0.016,39,0.008,40,0.008,41,3.028,42,7.162,43,3.088,44,0.4,45,0.646,46,1.743,47,1.614,48,2.457,49,5.386,50,1.241,51,1.32,52,7.018,53,3.314,54,7.611,55,5.938,56,6.617,57,0.677,58,0.619,59,3.088,60,4.412,61,1.224,62,4.541,63,1.295,64,0.518,65,3.088,66,7.668,67,3.088,68,7.282,69,5.957,70,3.332,71,1.607,72,4.544,73,4.541,74,3.088,75,4.541,76,3.088,77,3.088,78,3.088,79,4.541,80,3.088,81,4.541,82,1.927,83,1.098,84,0.876,85,4.541,86,2.833,87,2.833,88,2.391,89,3.554,90,4.541,91,4.541,92,4.541,93,3.088,94,4.541,95,5.16,96,4.541,97,2.683,98,1.547,99,5.386,100,2.683,101,3.591,102,1.142,103,1.626,104,3.088,105,3.088,106,3.088,107,3.088,108,3.088,109,1.645,110,3.088,111,3.088,112,3.088,113,3.088,114,3.088,115,3.088,116,3.088,117,2.683,118,3.088,119,2.683,120,3.088,121,3.088,122,3.088,123,4.541,124,3.088,125,3.088,126,3.088,127,3.088,128,3.088]],["title/injectables/AiArtModel.html",[0,0.477,129,2.669]],["body/injectables/AiArtModel.html",[0,0.659,2,1.157,3,0.194,4,0.16,5,0.144,7,4.829,9,0.916,10,0.014,14,0.799,28,0.748,30,1.989,31,1.036,32,2.312,33,2.413,34,2.312,35,1.952,37,0.177,38,0.021,39,0.01,40,0.01,44,0.359,47,0.962,50,1.511,51,1.137,57,0.894,58,1.027,61,1.094,63,1.228,64,0.463,71,1.784,103,2.148,129,3.687,130,5.843,131,4.08,132,2.386,133,3.247,134,4.909,135,2.93,136,4.831,137,4.08,138,4.805,139,1.027,140,4.08,141,5.53,142,5.843,143,5.263,144,3.687,145,3.687,146,3.247,147,3.971,148,2.487,149,5.53,150,2.413,151,4.805,152,3.193,153,4.08,154,2.396,155,2.93,156,2.72,157,3.193,158,3.545,159,2.93,160,1.457,161,1.821,162,2.93,163,4.08,164,2.93,165,3.193,166,3.193,167,1.636,168,1.396,169,1.948,170,3.193,171,4.08]],["title/interfaces/AiStoryChoices.html",[172,0.91,173,2.875]],["body/interfaces/AiStoryChoices.html",[3,0.223,4,0.184,5,0.165,10,0.014,35,1.236,37,0.308,39,0.011,40,0.011,44,0.648,45,0.863,64,0.543,82,2.927,139,1.07,172,1.528,173,4.828,174,1.806,175,3.37,176,3.37,177,5.562,178,5.562,179,3.934,180,2.758,181,2.587,182,2.517,183,3.944,184,2.927,185,2.927,186,4.433,187,2.755,188,2.927,189,2.927,190,2.927,191,3.128,192,3.37,193,3.37,194,3.37,195,3.37,196,3.37,197,3.37,198,3.128,199,2.048,200,3.128,201,3.37]],["title/injectables/AiStoryCommand.html",[0,0.477,202,3.479]],["body/injectables/AiStoryCommand.html",[0,0.816,2,1.616,3,0.271,4,0.224,5,0.201,6,2.6,9,1.001,10,0.014,11,2.989,12,1.877,13,2.194,14,1.116,28,0.679,29,2.863,31,1.447,32,2.383,34,2.383,36,4.094,37,0.247,38,0.03,39,0.012,40,0.012,202,5.951,203,3.556,204,5.7,205,5.36,206,4.094,207,3.801,208,5.7,209,3.802,210,5.7]],["title/injectables/AiStoryModel.html",[0,0.477,211,2.669]],["body/injectables/AiStoryModel.html",[0,0.61,2,1.034,3,0.173,4,0.143,5,0.129,9,0.92,10,0.015,14,0.714,28,0.705,31,0.926,32,2.14,35,1.778,37,0.158,38,0.019,39,0.009,40,0.009,44,0.321,46,1.348,47,1.207,50,1.399,51,1.072,57,1.121,58,1,60,4.793,61,1.031,63,1.157,64,0.436,71,1.501,87,2.275,89,2.854,98,1.827,101,3.412,130,5.571,132,2.305,134,4.628,135,2.619,136,4.667,139,0.954,147,3.676,148,1.893,152,2.854,154,2.141,155,2.619,156,2.432,159,2.619,160,1.348,161,1.201,162,2.619,164,2.619,165,2.854,166,2.854,167,2.052,168,2.023,169,1.742,170,2.854,179,1.827,182,2.739,183,2.024,187,2.141,191,3.412,192,2.619,193,2.619,194,2.619,195,2.619,196,2.619,197,2.619,198,2.432,201,2.619,203,3.999,209,3.99,211,3.412,212,3.647,213,5.118,214,3.647,215,3.647,216,3.193,217,5.118,218,3.647,219,5.118,220,4.006,221,5.118,222,3.193,223,3.676,224,4.447,225,5.118,226,3.193,227,3.169,228,5.118,229,5.118,230,3.647,231,3.647,232,3.647,233,3.647,234,3.647,235,3.169,236,3.169,237,3.647,238,3.647,239,3.647]],["title/interfaces/AiStoryRequest.html",[172,0.91,191,2.669]],["body/interfaces/AiStoryRequest.html",[3,0.211,4,0.175,5,0.157,10,0.014,35,1.834,37,0.302,39,0.01,40,0.01,44,0.516,45,0.834,64,0.574,82,2.778,139,1.032,172,1.49,173,4.21,174,1.714,175,3.198,176,3.198,177,3.485,178,3.485,179,3.721,180,2.81,181,1.714,182,2.685,183,3.866,184,2.778,185,2.778,186,4.345,187,2.615,188,2.778,189,2.778,190,2.778,191,3.909,192,5.002,193,5.002,194,5.002,195,5.002,196,5.002,197,5.002,198,2.969,199,1.943,200,2.969,201,3.198]],["title/interfaces/AiStoryResponse.html",[172,0.91,198,2.669]],["body/interfaces/AiStoryResponse.html",[3,0.221,4,0.183,5,0.164,10,0.014,35,1.228,37,0.307,39,0.011,40,0.011,44,0.532,45,0.859,64,0.555,82,4.422,139,1.069,172,1.523,173,5.091,174,1.794,175,3.347,176,3.347,177,3.648,178,3.648,179,3.768,180,2.726,181,1.794,182,2.707,183,3.934,184,2.908,185,2.908,186,4.422,187,2.737,188,2.908,189,2.908,190,2.908,191,3.107,192,3.347,193,3.347,194,3.347,195,3.347,196,3.347,197,3.347,198,4.027,199,3.093,200,4.726,201,5.091]],["title/injectables/AiStoryService.html",[0,0.477,240,2.669]],["body/injectables/AiStoryService.html",[0,0.702,2,1.271,3,0.213,4,0.176,5,0.158,9,0.951,10,0.014,14,0.877,28,0.702,37,0.194,38,0.024,39,0.01,40,0.01,44,0.395,45,0.837,46,1.732,47,1.647,48,3.185,50,1.609,51,1.067,57,0.982,58,0.988,61,1.146,63,1.152,64,0.434,71,1.138,83,1.594,84,1.271,103,2.36,109,2.008,132,2.165,139,0.951,148,2.177,159,3.219,160,1.18,161,1.476,182,2.688,203,4.524,209,2.487,211,4.963,216,2.796,226,4.102,240,3.925,241,6.982,242,4.481,243,4.607,244,4.481,245,5.887,246,5.887,247,4.481,248,5.887,249,3.925,250,3.507,251,3.894,252,3.894,253,3.894,254,1.225,255,2.487,256,4.481,257,2.487,258,2.487,259,2.631,260,4.481]],["title/injectables/AmqpService.html",[0,0.477,261,2.875]],["body/injectables/AmqpService.html",[0,0.593,2,0.994,3,0.166,4,0.138,5,0.124,9,0.678,10,0.015,14,0.686,28,0.824,31,0.89,37,0.152,38,0.018,39,0.009,40,0.009,44,0.309,45,0.708,46,1.659,47,0.827,50,1.36,51,1.142,57,1.091,58,1.033,61,1.16,63,1.353,64,0.525,70,1.846,71,1.469,83,1.247,84,0.994,88,1.846,109,1.071,132,2.433,139,1.007,148,2.556,160,1.311,161,2.496,167,1.406,168,2.485,169,1.675,180,1.703,261,3.575,262,3.507,263,5.787,264,4.978,265,4.978,266,4.978,267,3.507,268,6.911,269,4.978,270,4.978,271,3.507,272,5.781,273,5.474,274,4.978,275,6.653,276,3.507,277,4.978,278,3.507,279,4.978,280,4.978,281,7.109,282,4.978,283,6.3,284,4.978,285,2.744,286,2.338,287,5.787,288,5.787,289,3.507,290,3.507,291,4.978,292,3.507,293,5.787,294,5.787,295,5.787,296,4.326,297,3.047,298,4.978,299,4.978,300,3.507,301,3.507,302,3.507,303,3.507,304,3.507,305,1.675,306,3.507,307,3.507,308,3.507,309,2.338,310,3.507,311,3.507]],["title/modules/AppModule.html",[312,1.37,313,2.875]],["body/modules/AppModule.html",[3,0.169,4,0.14,5,0.125,9,1.079,10,0.015,12,1.17,13,1.368,14,0.696,37,0.154,38,0.019,39,0.009,40,0.009,60,5.01,64,0.262,98,1.78,285,2.782,286,2.37,305,3.027,312,1.994,313,5.712,314,1.621,315,1.621,316,1.78,317,1.78,318,1.697,319,2.784,320,1.78,321,3.088,322,3.088,323,3.088,324,4.628,325,3.853,326,4.076,327,4.331,328,4.331,329,4.331,330,4.628,331,2.517,332,1.78,333,1.697,334,3.554,335,3.712,336,3.088,337,3.554,338,5.026,339,3.088,340,4.226,341,3.554,342,2.782,343,3.088,344,2.553,345,5.026,346,1.78,347,3.554,348,5.026,349,3.554,350,2.553,351,3.135,352,3.554,353,3.554,354,3.088,355,3.088,356,3.088,357,2.782,358,5.026,359,3.554,360,5.83,361,3.933,362,3.554,363,5.83,364,3.554,365,1.78,366,3.554,367,3.554,368,3.554,369,3.554,370,3.554,371,3.554,372,3.554,373,3.554,374,2.782,375,3.554,376,2.553,377,3.554,378,3.088,379,3.554,380,3.554,381,5.026,382,3.554,383,3.554,384,3.554,385,3.554,386,3.554,387,2.553,388,3.554,389,3.554,390,3.554,391,3.554,392,3.554,393,3.554]],["title/injectables/AuthModel.html",[0,0.477,394,2.669]],["body/injectables/AuthModel.html",[0,0.607,2,1.027,3,0.172,4,0.142,5,0.128,9,0.952,10,0.015,14,0.709,25,4.017,28,0.432,30,2.36,31,0.92,37,0.157,38,0.019,39,0.009,40,0.009,44,0.319,45,0.724,46,1.774,47,1.589,48,2.915,50,1.392,51,0.657,57,1.116,58,0.998,60,4.784,61,1.114,63,0.709,64,0.267,71,1.71,83,1.288,84,1.027,98,1.814,109,1.799,132,2.3,135,2.601,136,4.657,148,2.364,150,2.223,154,2.127,155,4.231,156,3.927,160,1.552,161,1.677,168,1.742,182,1.742,222,4.476,255,2.01,257,2.01,258,2.01,259,2.127,365,3.669,394,3.396,395,5.852,396,5.852,397,3.622,398,6.556,399,3.459,400,2.323,401,2.827,402,6.391,403,6.391,404,5.093,405,3.622,406,5.093,407,3.986,408,3.622,409,5.093,410,2.01,411,2.415,412,2.835,413,3.622,414,2.26,415,1.652,416,1.581,417,3.622,418,3.622,419,3.622,420,3.622,421,3.622,422,3.622,423,3.147]],["title/injectables/BotGateway.html",[0,0.477,330,2.669]],["body/injectables/BotGateway.html",[0,0.584,2,0.973,3,0.163,4,0.135,5,0.121,9,0.85,10,0.015,12,1.13,13,1.321,14,0.672,28,0.682,33,1.498,37,0.149,38,0.018,39,0.009,40,0.009,44,0.302,45,0.697,46,1.738,47,1.557,48,3.13,50,1.34,51,1.037,53,3.437,57,1.074,58,1.029,61,1.15,63,1.119,64,0.46,70,1.807,71,1.452,72,4.107,83,1.22,84,0.973,109,2.015,132,1.883,143,2.686,148,1.813,150,2.139,160,1.506,161,1.883,168,1.956,181,1.321,255,1.905,257,1.905,258,3.174,259,2.015,330,3.268,346,1.719,424,3.432,425,4.902,426,5.719,427,6.239,428,3.432,429,4.481,430,4.97,431,3.463,432,4.902,433,4.902,434,4.902,435,2.864,436,4.902,437,3.432,438,3.432,439,6.862,440,6.138,441,4.902,442,3.432,443,4.902,444,3.432,445,4.902,446,4.902,447,3.432,448,4.902,449,2.982,450,3.837,451,4.26,452,2.465,453,2.465,454,3.432,455,3.432,456,3.432,457,2.982,458,3.432,459,3.432,460,3.432,461,3.432,462,3.432,463,3.432,464,3.432,465,2.141,466,2.686,467,3.432,468,2.982,469,3.432,470,3.432,471,3.432,472,2.982,473,3.432,474,4.107,475,3.432,476,3.432,477,3.432,478,3.432,479,3.432,480,2.141,481,2.465,482,4.902,483,3.432,484,3.432,485,3.432,486,3.432,487,3.432,488,2.015,489,3.432,490,2.982,491,3.432,492,3.432,493,2.982]],["title/injectables/CogView2Command.html",[0,0.477,19,3.133]],["body/injectables/CogView2Command.html",[0,0.496,2,0.779,3,0.13,4,0.108,5,0.097,6,2.557,9,0.897,10,0.014,11,3.088,12,1.37,13,1.058,14,0.815,19,3.258,20,3.763,21,3.843,22,3.343,28,0.755,29,2.101,30,2.009,31,1.721,32,1.149,33,2.193,34,2.343,35,1.669,37,0.119,38,0.014,39,0.007,40,0.007,44,0.242,45,0.592,46,1.586,47,1.421,48,2.557,50,1.137,51,0.755,57,0.912,58,0.821,61,0.876,63,1.179,64,0.307,69,2.151,70,1.447,71,0.698,83,0.977,84,0.779,88,3.466,102,1.016,109,1.271,132,1.654,144,1.832,145,1.832,146,2.444,148,1.539,150,2.193,161,2.086,167,2.247,168,1.424,182,2.06,254,1.137,255,2.31,257,1.525,258,1.525,400,2.292,401,3.517,407,3.258,415,1.253,416,1.199,431,3.853,452,1.974,453,1.974,474,1.974,480,2.597,488,1.614,494,4.387,495,2.748,496,2.989,497,3.617,498,3.35,499,2.388,500,4.52,501,4.162,502,3.757,503,2.989,504,2.989,505,3.617,506,2.444,507,3.258,508,3.617,509,2.989,510,3.497,511,4.162,512,1.974,513,4.387,514,4.87,515,4.025,516,2.748,517,4.162,518,4.162,519,3.757,520,4.162,521,3.932,522,4.162,523,4.162,524,1.974,525,3.258,526,2.989,527,2.989,528,1.974,529,2.775,530,1.832,531,2.748,532,2.388,533,2.748,534,1.832,535,2.151,536,2.388,537,1.714,538,3.258,539,2.151,540,1.525,541,1.447,542,1.714,543,2.085,544,2.444,545,1.614,546,2.748,547,2.748,548,2.748,549,2.748,550,2.748,551,2.388,552,1.832,553,1.974,554,4.162,555,1.832,556,2.388,557,2.775,558,2.748,559,3.932,560,2.748,561,2.388,562,2.388,563,1.832,564,2.388,565,2.151,566,2.388,567,2.388,568,2.388,569,2.388,570,2.748,571,1.974,572,2.151,573,1.312,574,1.974,575,1.974,576,2.388,577,1.974,578,1.832,579,1.832,580,1.974,581,2.151]],["title/classes/CogView2CommandDto.html",[38,0.021,513,3.133]],["body/classes/CogView2CommandDto.html",[3,0.197,4,0.163,5,0.147,6,2.89,9,0.567,10,0.014,11,2.445,12,1.37,13,1.602,20,3.517,21,3.73,22,3.517,28,0.668,30,2.149,31,1.796,32,2.343,35,1.962,37,0.243,38,0.022,39,0.01,40,0.01,44,0.366,45,0.797,58,0.993,61,0.977,64,0.5,88,2.191,139,0.764,167,2.54,254,2.138,305,3.48,309,3.736,415,2.556,416,2.445,435,2.807,494,4.959,513,4.386,519,3.496,538,4.386,582,1.668,583,3.616,584,2.988,585,2.774,586,4.229,587,4.868,588,4.161,589,4.161,590,4.161,591,3.257,592,3.616,593,4.386,594,3.257,595,4.024,596,3.11,597,2.951,598,3.11,599,3.11,600,3.11,601,3.11,602,3.11,603,3.11,604,3.11,605,3.11,606,3.616,607,4.161]],["title/injectables/CogView2Model.html",[0,0.477,608,2.669]],["body/injectables/CogView2Model.html",[0,0.628,2,1.079,3,0.181,4,0.149,5,0.134,9,0.89,10,0.015,14,0.745,21,3.714,22,3.625,28,0.721,35,1.806,37,0.165,38,0.02,39,0.009,40,0.009,44,0.335,47,0.898,50,1.441,51,1.097,57,0.834,58,1.011,61,1.055,63,1.184,64,0.446,71,1.339,86,2.374,88,2.776,103,2.004,109,1.61,132,2.336,133,3.552,134,4.734,135,2.733,136,4.73,138,3.307,139,0.967,148,2.415,152,2.979,154,2.235,155,4.345,156,2.537,160,1.389,161,2.15,162,3.787,164,2.733,165,2.979,166,2.979,168,2.069,169,1.817,170,2.979,216,3.289,222,4.074,254,2.174,305,1.817,309,2.537,542,2.374,597,2.004,608,3.515,609,6.53,610,3.806,611,3.806,612,3.806,613,3.806,614,2.235,615,3.096,616,2.235,617,2.235,618,3.307,619,5.272,620,3.806,621,2.374,622,3.806,623,3.806,624,2.374,625,2.374,626,2.374,627,3.806,628,3.806,629,3.289,630,3.806,631,3.806,632,3.806,633,2.235,634,3.806,635,3.307,636,3.806,637,3.806,638,3.806]],["title/classes/CogView2Response.html",[38,0.021,614,2.351]],["body/classes/CogView2Response.html",[3,0.182,4,0.15,5,0.135,10,0.015,28,0.456,37,0.322,38,0.02,39,0.009,40,0.009,44,0.337,45,0.753,50,1.446,51,0.694,57,0.838,58,1.074,61,1.198,63,0.749,64,0.524,71,0.972,102,1.957,133,3.843,139,1.104,160,1.394,169,3.644,172,1.488,180,2.492,181,1.473,254,1.446,582,1.534,596,2.124,597,2.015,598,2.124,599,2.124,600,2.124,601,2.124,602,2.124,603,2.124,604,2.124,605,2.124,614,3.107,615,2.247,616,4.035,617,2.247,621,2.387,624,2.387,625,2.387,626,2.387,629,3.302,633,3.107,639,2.387,640,4.942,641,4.364,642,3.528,643,4.545,644,5.292,645,3.827,646,3.827,647,3.827,648,2.857,649,1.746,650,2.015,651,2.551,652,2.551,653,3.528,654,2.551,655,3.528,656,2.551,657,2.551,658,3.302]],["title/injectables/CogView2Service.html",[0,0.477,500,2.669]],["body/injectables/CogView2Service.html",[0,0.55,2,0.895,3,0.15,4,0.124,5,0.111,9,0.962,10,0.015,14,0.618,21,3.667,22,3.544,28,0.55,31,1.385,33,1.378,34,1.32,35,1.954,37,0.137,38,0.029,39,0.008,40,0.008,44,0.278,45,0.657,46,1.682,47,1.506,48,2.738,50,1.261,51,0.837,57,1.315,58,0.87,61,0.951,63,0.904,64,0.341,71,0.802,83,1.123,84,0.895,109,1.833,132,1.796,139,0.818,147,3.315,148,1.707,150,3.144,160,0.832,161,1.52,167,2.407,168,1.579,182,2.184,216,1.97,222,2.88,223,3.315,243,4.27,249,3.078,250,2.472,253,2.744,254,2.117,255,1.753,257,1.753,258,1.753,259,1.854,400,2.913,401,3.028,415,1.44,416,1.378,435,1.582,500,3.078,502,4.297,503,3.315,504,3.315,506,2.71,510,3.404,534,2.105,536,2.744,537,2.88,539,2.472,540,2.562,541,3.951,543,3.34,555,3.078,557,2.105,608,4.593,618,2.744,650,1.663,659,6.002,660,3.158,661,3.158,662,4.616,663,3.315,664,4.011,665,4.011,666,2.744,667,4.616,668,3.158,669,4.011,670,3.613,671,2.88,672,3.158,673,4.011,674,4.011,675,3.158,676,4.616,677,2.744,678,3.158,679,2.744,680,2.105,681,2.744,682,2.744,683,1.854,684,2.744,685,2.105,686,3.078,687,4.616,688,3.158,689,2.744,690,3.158,691,3.158,692,3.158,693,3.158,694,3.158]],["title/injectables/Collage.html",[0,0.477,541,2.108]],["body/injectables/Collage.html",[0,0.611,2,1.038,3,0.174,4,0.144,5,0.129,9,0.875,10,0.015,12,2.114,14,0.716,28,0.835,30,1.16,31,1.504,37,0.159,38,0.036,39,0.009,40,0.009,44,0.322,45,0.73,46,1.56,47,1.397,50,1.402,51,0.93,58,0.955,61,1.119,63,1.004,64,0.474,71,1.63,83,1.824,84,1.455,89,5.025,109,1.118,132,1.95,139,0.875,142,5.579,143,5.291,148,1.897,151,5.579,157,5.025,159,2.628,160,1.351,161,1.205,167,2.057,168,1.755,346,1.833,415,1.669,416,1.597,450,4.636,490,3.18,541,4.061,557,4.281,695,3.66,696,5.13,697,5.13,698,4.636,699,3.478,700,6.42,701,5.13,702,5.13,703,5.13,704,3.66,705,5.13,706,5.13,707,5.13,708,3.66,709,5.13,710,6.42,711,5.13,712,3.66,713,5.13,714,5.13,715,5.13,716,6.42,717,5.13,718,5.13,719,4.458,720,5.13,721,3.66,722,3.66,723,3.18,724,3.66,725,3.66,726,3.66,727,3.66,728,3.66,729,3.66,730,3.66,731,3.66,732,3.66,733,3.66]],["title/modules/CommandsModule.html",[312,1.37,324,2.669]],["body/modules/CommandsModule.html",[3,0.237,4,0.196,5,0.176,9,1.06,10,0.014,12,1.644,13,1.922,14,0.978,37,0.216,38,0.026,39,0.011,40,0.011,98,2.501,312,2.368,314,2.278,315,2.278,316,2.501,317,2.501,318,2.385,319,3.014,320,2.501,324,5.336,325,4.252,326,4.498,328,4.779,331,3.162,332,2.501,333,2.385,335,3.504,336,4.34,340,4.209,350,3.587,355,4.34,357,3.909,734,4.994,735,4.994,736,4.994,737,4.994,738,3.587,739,4.34,740,4.994,741,4.994]],["title/classes/CouldNotGenerateArtException.html",[38,0.021,249,2.669]],["body/classes/CouldNotGenerateArtException.html",[3,0.256,4,0.212,5,0.19,10,0.014,28,0.643,30,1.71,32,2.254,34,2.254,35,1.969,37,0.234,38,0.028,39,0.012,40,0.012,51,0.978,53,3.317,57,1.181,58,0.902,61,0.94,63,1.055,64,0.398,139,1.097,216,3.364,249,4.415,254,2.134,582,2.162,742,5.392,743,4.756,744,6.622,745,5.392,746,6.622,747,5.392]],["title/classes/CouldNotGenerateWomboArtException.html",[38,0.021,748,3.133]],["body/classes/CouldNotGenerateWomboArtException.html",[3,0.273,4,0.226,5,0.203,10,0.014,25,3.026,28,0.685,30,1.822,31,1.459,37,0.249,38,0.03,39,0.012,40,0.012,51,1.042,53,3.447,57,1.259,58,0.938,61,1.002,63,1.125,64,0.424,70,3.026,139,1.004,400,2.622,574,4.128,582,2.304,743,4.943,748,5.387,749,5.747,750,4.498,751,4.498,752,5.981,753,5.747,754,4.994]],["title/classes/CreateJobInput.html",[38,0.021,683,2.351]],["body/classes/CreateJobInput.html",[3,0.259,4,0.214,5,0.192,10,0.014,33,3.142,37,0.236,38,0.029,39,0.012,40,0.012,44,0.48,45,0.948,51,1.419,61,1.308,64,0.553,139,1.091,481,5.17,582,2.185,683,3.913,755,7.693,756,4.735,757,5.17,758,4.8,759,5.448,760,4.735,761,5.448,762,5.448]],["title/injectables/DalleMiniCommand.html",[0,0.477,15,3.133]],["body/injectables/DalleMiniCommand.html",[0,0.549,2,0.893,3,0.149,4,0.124,5,0.111,6,2.484,9,0.962,10,0.014,11,2.907,12,1.517,13,1.212,14,0.902,15,3.605,16,4.877,17,4.252,28,0.76,29,2.277,30,2.237,31,1.619,32,1.316,33,1.374,34,1.316,35,1.68,37,0.136,38,0.024,39,0.008,40,0.008,41,3.996,44,0.277,46,1.435,47,1.285,48,2.101,50,1.259,51,0.835,57,1.009,58,0.869,61,0.803,63,1.066,64,0.34,69,2.464,70,1.658,71,0.799,102,1.164,132,1.793,144,3.071,145,3.071,146,4.446,148,1.703,150,2.01,161,2.194,168,1.863,182,1.863,255,2.557,257,1.748,258,1.748,400,2.484,415,1.436,416,1.374,430,4.733,431,3.327,452,2.261,453,2.261,474,2.261,488,1.849,498,3.631,502,3.398,506,1.849,512,2.261,514,4.733,515,4.304,519,2.874,521,2.464,524,2.261,525,3.605,526,3.308,527,3.308,528,2.261,529,3.071,530,2.099,534,2.099,535,2.464,537,2.874,540,1.748,541,1.658,542,1.964,543,2.307,544,3.198,545,1.849,552,2.099,553,2.261,555,2.099,556,2.736,559,4.263,561,2.736,562,2.736,563,2.099,564,2.736,565,2.464,566,2.736,567,2.736,568,2.736,569,2.736,571,2.261,572,2.464,573,1.503,574,2.261,575,2.261,576,2.736,577,2.261,578,2.099,579,2.099,580,3.308,581,2.464,595,2.261,673,2.736,674,2.736,680,3.071,686,2.099,689,2.736,763,4.733,764,3.148,765,4.606,766,4.002,767,3.148,768,4.588,769,3.148,770,4.691,771,3.148,772,3.148,773,2.736,774,3.148,775,3.148,776,2.736,777,2.736,778,2.736,779,3.148,780,3.148,781,3.148,782,3.148,783,3.148,784,3.148,785,4.606,786,3.148,787,3.148,788,3.148]],["title/classes/DalleMiniCommandDto.html",[38,0.021,770,3.133]],["body/classes/DalleMiniCommandDto.html",[3,0.258,4,0.213,5,0.192,6,3.035,9,0.741,10,0.014,12,1.789,13,2.092,17,4.436,28,0.648,31,1.689,32,2.782,35,2.087,37,0.235,38,0.029,39,0.012,40,0.012,44,0.478,45,0.946,58,0.98,61,0.947,64,0.401,139,0.907,150,2.903,167,2.668,305,3.578,435,2.722,582,2.179,584,3.903,586,4.151,587,4.778,763,5.781,770,5.207,789,5.434,790,5.434]],["title/injectables/DalleMiniService.html",[0,0.477,768,2.669]],["body/injectables/DalleMiniService.html",[0,0.586,2,0.976,3,0.163,4,0.135,5,0.121,7,2.473,9,0.964,10,0.015,14,0.674,16,3.82,17,4.58,28,0.586,30,1.816,31,1.455,34,1.44,35,1.99,37,0.149,38,0.033,39,0.009,40,0.009,44,0.303,45,0.699,46,1.74,47,1.559,48,2.85,50,1.343,51,0.891,57,1.369,58,0.9,61,0.999,63,0.962,64,0.363,71,0.874,83,1.224,84,0.976,86,2.148,109,1.75,129,4.166,132,1.886,139,0.781,146,3.879,148,1.817,150,2.883,161,1.618,167,2.297,182,2.26,243,4.484,249,2.296,250,2.695,251,2.992,259,2.022,297,2.992,400,3.014,401,3.18,415,1.571,416,1.503,435,1.725,502,4.411,503,3.529,504,3.529,510,3.066,534,2.296,537,3.066,540,2.727,541,3.874,543,3.129,595,2.473,635,2.992,650,1.813,663,3.529,664,4.27,665,4.27,666,2.992,670,3.846,671,3.066,677,2.992,680,2.296,681,2.992,682,2.992,683,2.022,684,2.992,685,2.296,686,3.276,768,3.276,777,4.27,778,4.27,791,6.248,792,3.443,793,3.443,794,6.248,795,4.914,796,4.914,797,4.914,798,3.443,799,4.27,800,3.443,801,3.443,802,4.914,803,2.992,804,3.443,805,3.443,806,3.443,807,2.473,808,3.443]],["title/modules/EntityModule.html",[312,1.37,325,2.222]],["body/modules/EntityModule.html",[3,0.261,4,0.216,5,0.194,9,0.912,10,0.014,14,1.075,37,0.238,38,0.029,39,0.012,40,0.012,312,2.471,314,2.505,315,2.505,316,2.75,317,2.75,318,2.622,319,2.622,320,3.618,325,4.407,331,3.354,332,2.75,333,2.622,335,3.717,809,4.772,810,4.772,811,4.772,812,5.463,813,5.491,814,5.491]],["title/modules/GatewayModule.html",[312,1.37,815,2.875]],["body/modules/GatewayModule.html",[3,0.25,4,0.207,5,0.186,9,0.967,10,0.014,14,1.032,37,0.228,38,0.028,39,0.011,40,0.011,312,2.427,314,2.404,315,2.404,316,2.64,317,2.64,318,2.517,319,3.387,320,3.553,325,4.31,330,5.434,331,3.27,332,2.64,333,2.517,335,3.624,350,3.785,815,5.759,816,4.58,817,5.27,818,5.27,819,4.58,820,5.27,821,5.27]],["title/interfaces/GoogleApiAuthResponse.html",[172,0.91,410,2.222]],["body/interfaces/GoogleApiAuthResponse.html",[3,0.136,4,0.113,5,0.101,10,0.014,28,0.513,35,0.757,37,0.289,38,0.015,39,0.007,40,0.007,44,0.253,45,0.612,46,0.757,47,1.889,57,0.629,58,1.096,64,0.453,84,1.22,102,1.062,109,2.44,139,1.096,160,1.134,172,1.396,174,1.106,180,2.286,181,1.986,199,1.878,254,0.785,365,2.155,410,2.389,573,1.372,648,1.253,649,1.31,699,4.703,822,1.686,823,1.686,824,3.576,825,3.365,826,3.365,827,3.576,828,1.594,829,1.792,830,2.685,831,2.527,832,2.685,833,2.389,834,2.527,835,3.03,836,2.685,837,2.685,838,2.389,839,1.372,840,2.389,841,2.685,842,2.685,843,1.792,844,2.685,845,1.792,846,2.685,847,1.792,848,2.685,849,1.792,850,2.685,851,1.792,852,2.685,853,1.792,854,2.685,855,1.792,856,2.685,857,1.792,858,2.685,859,1.792,860,2.685,861,1.792,862,2.685,863,1.792,864,2.685,865,1.792,866,2.685,867,1.792,868,2.685,869,1.792,870,2.685,871,1.792,872,2.685,873,1.792,874,2.685,875,1.792,876,2.685,877,1.792,878,2.685,879,1.792,880,2.685,881,1.792,882,2.685,883,1.792,884,2.685,885,1.792,886,2.685,887,1.792,888,2.685,889,1.792,890,2.685,891,1.792,892,1.792,893,1.792,894,1.792,895,1.512,896,1.792,897,1.686,898,1.792,899,1.792,900,1.792,901,1.792,902,3.219,903,1.792,904,1.792,905,1.792,906,2.527,907,1.686,908,1.792,909,1.792,910,1.792,911,1.792,912,1.686,913,1.792,914,1.594,915,1.512,916,1.792,917,1.686]],["title/classes/GoogleAuthenticationToolkitError.html",[38,0.021,412,3.133]],["body/classes/GoogleAuthenticationToolkitError.html",[3,0.273,4,0.226,5,0.203,10,0.014,28,0.685,31,1.459,37,0.249,38,0.03,39,0.012,40,0.012,51,1.042,53,3.69,57,1.259,58,0.938,61,1.002,63,1.125,64,0.424,70,3.026,139,1.004,398,4.994,412,5.387,582,2.304,743,4.943,750,4.498,751,4.498,752,5.981,754,4.994,918,5.747,919,5.747,920,5.747,921,5.747]],["title/injectables/HelpCommand.html",[0,0.477,922,3.479]],["body/injectables/HelpCommand.html",[0,0.703,2,1.273,3,0.213,4,0.176,5,0.158,9,0.989,10,0.014,11,2.573,12,1.479,13,1.729,14,0.879,28,0.784,31,1.14,37,0.195,38,0.024,39,0.01,40,0.01,44,0.395,47,1.059,50,1.611,51,1.069,57,0.984,58,0.989,61,1.028,63,1.154,64,0.435,71,1.14,102,1.661,103,2.365,109,2.01,132,2.167,148,2.18,161,1.479,168,2.017,254,1.611,305,2.145,346,2.249,449,5.123,451,5.719,493,3.903,498,4.388,895,2.365,922,5.123,923,4.491,924,3.903,925,4.646,926,4.491,927,4.491,928,6.988,929,4.491,930,4.234,931,5.895,932,4.491,933,4.491,934,3.903,935,3.515,936,4.491,937,4.103,938,4.491,939,4.491,940,5.895,941,5.895,942,5.895,943,3.903,944,5.895,945,5.895,946,4.491,947,3.903,948,4.491]],["title/injectables/HelpInteractionCollector.html",[0,0.477,935,3.133]],["body/injectables/HelpInteractionCollector.html",[0,0.718,2,1.316,3,0.22,4,0.182,5,0.164,9,0.964,10,0.015,12,1.528,13,1.786,14,0.908,28,0.718,37,0.201,38,0.024,39,0.01,40,0.01,44,0.623,45,0.857,46,1.761,47,1.095,50,1.646,51,1.092,57,1.017,58,0.999,61,1.166,63,1.179,64,0.493,71,1.178,83,1.65,84,1.316,86,3.757,103,2.443,132,2.201,161,1.528,168,1.587,180,1.587,346,2.324,435,2.324,895,2.443,924,4.032,925,4.688,930,3.333,934,4.032,935,4.713,937,3.536,943,4.032,947,4.032,949,4.64,950,6.022,951,6.022,952,6.022,953,7.076,954,6.022,955,4.64,956,6.022,957,4.032,958,4.64,959,6.022,960,6.022,961,4.64,962,4.64]],["title/injectables/HelpService.html",[0,0.477,925,2.498]],["body/injectables/HelpService.html",[0,0.689,2,1.236,3,0.207,4,0.171,5,0.154,9,0.941,10,0.015,14,0.853,28,0.773,30,1.382,37,0.189,38,0.023,39,0.01,40,0.01,44,0.633,45,0.822,46,1.708,47,1.53,50,1.58,51,1.048,58,0.884,61,1.008,63,1.132,64,0.427,71,1.107,83,1.55,84,1.639,86,2.72,88,3.044,109,1.332,139,0.594,160,1.149,168,2.363,179,2.184,180,2.219,305,2.082,346,2.184,361,3.413,530,2.907,552,2.907,925,3.607,937,3.395,963,4.36,964,6.907,965,5.781,966,5.781,967,4.36,968,6.907,969,5.781,970,5.781,971,4.36,972,5.781,973,3.789,974,3.607,975,4.36,976,5.781,977,5.781,978,4.36,979,5.024,980,4.36,981,4.36,982,3.789,983,4.36,984,4.36,985,4.36,986,4.36,987,4.36,988,4.36,989,4.36,990,5.781,991,4.36,992,4.36,993,4.36,994,4.36,995,4.36,996,4.36,997,3.413,998,4.36]],["title/interfaces/ICogView2Data.html",[172,0.91,643,2.498]],["body/interfaces/ICogView2Data.html",[3,0.193,4,0.16,5,0.143,10,0.015,37,0.326,38,0.021,39,0.01,40,0.01,44,0.358,45,0.784,58,0.956,64,0.534,102,1.503,133,2.386,139,1.115,160,1.453,169,3.646,172,1.526,174,1.564,180,2.665,181,2.41,254,1.507,596,2.256,597,2.14,598,2.256,599,2.256,600,2.256,601,2.256,602,2.256,603,2.256,604,2.256,605,2.256,614,2.386,615,2.386,616,3.676,617,2.386,621,2.536,624,2.536,625,2.536,626,2.536,629,3.441,633,3.238,639,2.536,640,4.763,641,2.71,642,2.71,643,4.379,648,2.732,649,1.854,650,2.14,651,4.476,652,4.476,653,3.677,654,2.71,655,3.677,656,2.71,657,2.71,658,3.441]],["title/interfaces/ICogView2Request.html",[172,0.91,615,2.351]],["body/interfaces/ICogView2Request.html",[3,0.188,4,0.156,5,0.14,10,0.015,37,0.324,38,0.021,39,0.009,40,0.009,44,0.349,45,0.771,58,0.948,64,0.543,102,1.466,133,2.328,139,1.117,160,1.428,169,3.627,172,1.511,174,1.526,180,2.693,181,1.526,254,1.816,596,2.2,597,2.087,598,2.2,599,2.2,600,2.2,601,2.2,602,2.2,603,2.2,604,2.2,605,2.2,614,2.328,615,3.184,616,3.629,617,2.328,621,4.145,624,4.145,625,2.473,626,4.145,629,3.383,633,3.184,639,2.473,640,4.738,641,2.643,642,2.643,643,4.145,648,3.21,649,1.808,650,2.087,651,2.643,652,2.643,653,3.615,654,2.643,655,3.615,656,2.643,657,2.643,658,4.145]],["title/interfaces/ICogView2Response.html",[172,0.91,616,2.351]],["body/interfaces/ICogView2Response.html",[3,0.19,4,0.157,5,0.141,10,0.015,37,0.325,38,0.021,39,0.009,40,0.009,44,0.352,45,0.775,51,1.305,58,0.951,64,0.544,102,1.477,133,2.345,139,1.113,160,1.436,169,3.633,172,1.515,174,1.538,180,2.602,181,1.538,254,1.489,596,2.217,597,2.103,598,2.217,599,2.217,600,2.217,601,2.217,602,2.217,603,2.217,604,2.217,605,2.217,614,2.345,615,2.345,616,3.914,617,2.345,621,2.492,624,2.492,625,2.492,626,2.492,629,4.352,633,3.2,639,2.492,640,4.946,641,2.663,642,2.663,643,4.492,648,2.708,649,1.822,650,2.103,651,2.663,652,2.663,653,4.651,654,2.663,655,3.634,656,2.663,657,2.663,658,3.4]],["title/interfaces/ICogView2ResponseAcknowledged.html",[172,0.91,617,2.351]],["body/interfaces/ICogView2ResponseAcknowledged.html",[3,0.194,4,0.161,5,0.144,10,0.015,37,0.327,38,0.022,39,0.01,40,0.01,44,0.361,45,0.789,58,0.959,64,0.535,102,1.515,133,2.405,139,1.116,160,1.46,169,3.464,172,1.531,174,1.577,180,2.616,181,1.577,254,1.515,596,2.274,597,2.157,598,2.274,599,2.274,600,2.274,601,2.274,602,2.274,603,2.274,604,2.274,605,2.274,614,2.405,615,2.405,616,3.69,617,3.255,621,2.555,624,2.555,625,2.555,626,2.555,629,4.39,633,3.255,639,2.555,640,4.963,641,2.731,642,2.731,643,4.202,648,2.743,649,1.868,650,2.157,651,2.731,652,2.731,653,4.692,654,2.731,655,3.697,656,2.731,657,2.731,658,3.459]],["title/interfaces/ICommandHelp.html",[172,0.91,974,2.498]],["body/interfaces/ICommandHelp.html",[3,0.259,4,0.214,5,0.192,10,0.014,28,0.917,31,1.953,37,0.289,39,0.012,40,0.012,44,0.48,45,0.948,51,0.988,63,1.468,64,0.553,139,1.111,172,1.515,174,2.097,545,4.404,648,2.378,974,4.157,999,4.735,1000,5.87]],["title/interfaces/ICommandParameter.html",[172,0.91,1000,3.133]],["body/interfaces/ICommandParameter.html",[3,0.262,4,0.217,5,0.195,10,0.014,28,0.92,31,1.961,37,0.291,39,0.012,40,0.012,44,0.486,45,0.955,51,1.423,63,1.081,64,0.534,139,1.101,172,1.527,174,2.125,545,3.241,648,3.16,974,3.444,999,4.797,1000,5.667]],["title/interfaces/IWomboDreamStyle.html",[172,0.91,838,2.222]],["body/interfaces/IWomboDreamStyle.html",[3,0.139,4,0.115,5,0.103,10,0.014,28,0.738,35,0.771,37,0.291,38,0.015,39,0.008,40,0.008,44,0.258,45,0.621,46,0.771,47,1.893,57,0.642,58,1.098,64,0.385,84,1.755,102,1.083,109,2.445,139,1.088,160,1.15,172,1.407,174,1.127,180,2.3,181,2.01,199,1.905,254,0.8,365,2.187,410,1.625,573,1.398,648,1.278,649,1.336,699,4.712,822,1.719,823,1.719,824,1.827,825,1.719,826,1.719,827,1.827,828,1.625,829,1.827,830,2.724,831,2.564,832,2.724,833,2.423,834,2.564,835,3.065,836,2.724,837,2.724,838,2.898,839,1.398,840,2.423,841,2.724,842,2.724,843,1.827,844,2.724,845,1.827,846,2.724,847,1.827,848,2.724,849,1.827,850,2.724,851,1.827,852,2.724,853,1.827,854,2.724,855,1.827,856,2.724,857,1.827,858,2.724,859,1.827,860,2.724,861,1.827,862,2.724,863,1.827,864,2.724,865,1.827,866,2.724,867,1.827,868,2.724,869,1.827,870,2.724,871,1.827,872,2.724,873,1.827,874,2.724,875,1.827,876,2.724,877,1.827,878,2.724,879,1.827,880,2.724,881,1.827,882,2.724,883,1.827,884,2.724,885,1.827,886,2.724,887,1.827,888,2.724,889,1.827,890,2.724,891,1.827,892,1.827,893,1.827,894,1.827,895,1.542,896,1.827,897,1.719,898,1.827,899,1.827,900,1.827,901,1.827,902,3.257,903,1.827,904,1.827,905,1.827,906,2.564,907,1.719,908,1.827,909,1.827,910,1.827,911,1.827,912,1.719,913,1.827,914,1.625,915,1.542,916,1.827,917,1.719]],["title/entities/Job.html",[351,2.498,509,2.875]],["body/entities/Job.html",[3,0.242,4,0.2,5,0.179,9,0.694,10,0.014,28,0.607,29,2.128,30,1.614,33,3.196,37,0.221,38,0.027,39,0.011,40,0.011,44,0.448,45,0.909,58,0.694,61,1.277,64,0.54,139,1.086,351,4.357,376,3.656,435,3.668,480,3.176,481,5.015,509,4.589,757,5.015,758,4.656,1001,5.091,1002,6.983,1003,5.091,1004,7.813,1005,5.091,1006,5.091,1007,5.091,1008,3.394,1009,5.091,1010,5.091]],["title/modules/JobModule.html",[312,1.37,812,2.669]],["body/modules/JobModule.html",[3,0.244,4,0.202,5,0.181,9,1.031,10,0.014,14,1.006,37,0.223,38,0.027,39,0.011,40,0.011,312,2.399,314,2.345,315,2.345,316,2.575,317,2.575,318,2.455,319,3.35,320,3.513,331,3.22,332,2.575,333,2.455,335,2.854,343,4.467,344,3.692,351,3.207,431,4.394,812,5.278,1011,4.467,1012,4.467,1013,4.467,1014,5.417,1015,5.141,1016,4.467,1017,5.141,1018,4.467,1019,5.141]],["title/classes/JobResolver.html",[38,0.021,431,2.222]],["body/classes/JobResolver.html",[3,0.181,4,0.15,5,0.135,9,0.891,10,0.015,28,0.846,37,0.165,38,0.02,39,0.009,40,0.009,44,0.336,47,0.901,50,1.444,51,1.288,57,0.837,58,1.093,61,1.27,63,1.39,64,0.524,71,1.803,103,2.011,139,1.027,160,1.871,168,1.307,199,2.854,342,2.99,431,2.934,435,3.557,507,2.99,579,2.547,582,1.532,683,4.17,685,3.524,758,2.547,1014,4.736,1018,3.319,1020,3.82,1021,3.524,1022,5.684,1023,4.593,1024,5.286,1025,4.593,1026,4.137,1027,3.82,1028,3.82,1029,3.319,1030,5.286,1031,3.82,1032,5.286,1033,3.82,1034,3.319,1035,6.541,1036,3.82,1037,5.286,1038,3.82,1039,3.319,1040,5.286,1041,3.82,1042,3.82,1043,5.23,1044,5.286,1045,3.82,1046,3.82,1047,3.82,1048,3.319,1049,3.319,1050,3.82,1051,3.82,1052,3.82,1053,5.286,1054,3.82,1055,3.82,1056,3.82,1057,3.82,1058,3.82,1059,3.82,1060,3.82,1061,3.82]],["title/injectables/JobService.html",[0,0.477,1014,2.669]],["body/injectables/JobService.html",[0,0.589,2,0.984,3,0.165,4,0.136,5,0.122,9,0.939,10,0.015,14,0.68,28,0.821,37,0.15,38,0.018,39,0.009,40,0.009,44,0.306,46,0.914,47,0.819,50,1.351,51,1.249,57,1.083,58,1.089,61,1.236,63,1.348,64,0.508,71,1.749,132,2.611,139,1.041,148,2.68,160,1.815,161,2.268,168,1.969,199,3.093,227,4.295,344,2.493,351,2.166,683,3.892,685,3.295,757,4.134,758,3.837,833,2.744,1008,2.315,1014,3.295,1016,3.017,1021,3.295,1022,5.45,1023,4.295,1025,4.295,1026,4.505,1029,4.295,1034,4.295,1039,4.295,1043,5.203,1048,3.017,1049,3.017,1062,3.472,1063,4.943,1064,3.472,1065,6.271,1066,3.472,1067,4.943,1068,3.472,1069,3.472,1070,4.943,1071,3.472,1072,3.472,1073,3.472,1074,3.472,1075,3.472,1076,3.472,1077,3.472,1078,3.472,1079,3.472,1080,3.472,1081,3.472,1082,4.943,1083,3.472,1084,2.717,1085,4.943,1086,3.472]],["title/modules/LoggerModule.html",[312,1.37,326,2.351]],["body/modules/LoggerModule.html",[3,0.255,4,0.211,5,0.189,9,0.974,10,0.014,14,1.05,29,2.243,30,1.701,37,0.232,38,0.028,39,0.011,40,0.011,41,5.447,98,2.687,312,2.446,314,2.447,315,2.447,316,2.687,317,2.687,318,2.562,319,3.414,320,3.581,326,4.639,331,3.306,332,2.687,333,2.562,335,2.978,340,4.401,776,4.662,1087,4.662,1088,4.662,1089,4.662,1090,5.365]],["title/classes/MessageAttachmentWithDbRecord.html",[38,0.021,680,2.669]],["body/classes/MessageAttachmentWithDbRecord.html",[3,0.212,4,0.176,5,0.158,9,0.609,10,0.014,28,0.783,37,0.194,38,0.023,39,0.01,40,0.01,44,0.394,45,0.836,46,1.959,51,1.314,57,0.98,58,0.951,61,1.322,63,1.285,64,0.535,71,1.493,72,4.222,160,1.548,216,2.79,272,6.763,346,2.24,450,6.092,474,5.59,557,5.056,582,1.793,680,3.919,1084,4.601,1091,4.472,1092,6.567,1093,6.567,1094,5.108,1095,5.879,1096,4.472,1097,4.472,1098,4.472,1099,4.472,1100,4.472,1101,4.472,1102,4.472,1103,4.472,1104,4.472,1105,4.472,1106,4.472,1107,6.567,1108,4.472,1109,6.567,1110,4.472]],["title/modules/ModelsModule.html",[312,1.37,327,2.498]],["body/modules/ModelsModule.html",[3,0.199,4,0.165,5,0.148,7,3.012,9,1.047,10,0.014,14,0.821,20,2.328,21,2.822,22,2.328,25,2.966,26,2.463,29,2.355,37,0.182,38,0.022,39,0.01,40,0.01,98,2.101,129,5.26,154,2.463,203,2.617,211,5.26,252,3.645,312,2.176,314,1.913,315,1.913,316,2.101,317,2.101,318,2.003,319,3.038,320,3.186,326,4.289,327,5.085,331,2.822,332,2.101,333,2.003,335,3.127,340,3.756,357,3.283,394,4.87,396,3.645,608,5.26,679,3.645,803,3.645,1111,3.645,1112,3.645,1113,4.194,1114,3.645,1115,5.26,1116,4.194,1117,5.634,1118,3.645,1119,3.645]],["title/injectables/OpenAiCommand.html",[0,0.477,205,3.133]],["body/injectables/OpenAiCommand.html",[0,0.611,2,1.038,3,0.174,4,0.144,5,0.129,6,2.929,9,0.955,10,0.014,11,2.585,12,1.689,13,1.409,14,1.004,28,0.835,29,2.93,31,1.63,32,1.53,34,1.53,35,0.964,37,0.159,38,0.019,39,0.009,40,0.009,44,0.322,45,0.73,46,1.56,47,1.515,48,2.929,50,1.402,51,1.074,53,1.833,57,0.802,58,0.921,61,1.033,63,1.16,64,0.379,71,0.929,83,1.301,84,1.038,102,1.353,103,1.927,109,1.567,132,1.95,148,1.897,161,2.114,168,1.252,182,1.755,203,2.283,205,4.015,206,4.611,207,4.281,209,4.197,226,4.005,240,4.672,255,2.848,257,2.031,258,2.031,305,1.748,453,2.628,498,3.95,512,2.628,515,4.611,519,3.201,521,2.864,524,2.628,525,4.015,526,3.685,527,3.685,528,2.628,529,3.421,530,2.44,540,2.031,543,1.833,545,2.149,553,2.628,555,2.44,571,2.628,572,2.864,573,1.748,574,2.628,575,3.685,577,2.628,578,2.44,580,2.628,581,2.864,585,2.44,930,2.628,1120,4.611,1121,3.66,1122,3.66,1123,5.13,1124,5.025,1125,3.66,1126,5.13,1127,3.66,1128,3.18,1129,3.66,1130,3.66,1131,3.66,1132,3.66,1133,2.44,1134,3.18,1135,3.66,1136,3.66,1137,3.66,1138,3.18,1139,3.66,1140,3.66,1141,3.66,1142,3.66,1143,3.66,1144,3.18,1145,3.18]],["title/classes/OpenAiCommandDto.html",[38,0.021,1124,3.133]],["body/classes/OpenAiCommandDto.html",[3,0.2,4,0.166,5,0.149,6,2.911,9,0.575,10,0.014,12,1.389,13,1.624,28,0.674,31,1.731,32,2.365,37,0.276,38,0.022,39,0.01,40,0.01,44,0.372,45,0.805,58,0.997,61,0.986,64,0.471,139,0.771,167,2.558,179,3.894,182,2.659,183,4.271,184,3.529,185,3.529,186,4.739,187,3.321,188,3.529,189,3.529,190,3.529,207,4.254,209,3.784,226,4.663,305,3.628,400,2.58,435,2.833,582,1.692,584,3.031,586,4.253,587,4.896,591,3.303,593,3.303,1120,4.583,1124,4.427,1133,3.771,1146,3.303,1147,4.22,1148,4.22,1149,4.22,1150,3.303,1151,3.667,1152,3.667,1153,3.667,1154,3.667,1155,3.667,1156,3.667,1157,4.22]],["title/modules/ServicesModule.html",[312,1.37,328,2.498]],["body/modules/ServicesModule.html",[3,0.181,4,0.15,5,0.135,9,1.05,10,0.015,14,0.748,17,2.547,21,2.647,22,2.12,26,2.243,37,0.165,38,0.02,39,0.009,40,0.009,98,1.913,203,2.383,240,5.181,261,5.581,312,2.073,314,1.742,315,1.742,316,1.913,317,1.913,318,1.824,319,2.894,320,3.036,325,3.942,327,4.431,328,5.123,329,4.431,331,2.647,332,1.913,333,1.824,335,2.934,340,3.524,350,2.743,354,3.319,356,3.319,500,5.181,532,3.319,768,5.181,773,3.319,925,4.848,1128,3.319,1158,3.319,1159,3.82,1160,3.319,1161,3.319,1162,5.181,1163,3.82,1164,3.82,1165,3.82,1166,3.82,1167,3.82,1168,3.82,1169,3.82,1170,3.319]],["title/classes/UpdateJobInput.html",[38,0.021,1043,2.875]],["body/classes/UpdateJobInput.html",[3,0.274,4,0.226,5,0.203,9,0.94,10,0.014,37,0.25,38,0.03,39,0.012,40,0.012,44,0.507,45,0.981,61,1.005,64,0.425,139,0.94,582,2.311,683,3.384,685,3.842,743,4.139,756,5.008,757,5.298,760,5.008,1021,3.842,1043,4.951,1171,6.894,1172,5.763,1173,5.008,1174,4.511,1175,5.763,1176,5.763]],["title/modules/UtilitiesModule.html",[312,1.37,329,2.498]],["body/modules/UtilitiesModule.html",[3,0.261,4,0.216,5,0.194,9,0.912,10,0.014,14,1.075,37,0.238,38,0.029,39,0.012,40,0.012,312,2.471,314,2.505,315,2.505,316,2.75,317,2.75,318,2.622,319,3.45,320,3.618,329,4.953,331,3.354,332,2.75,333,2.622,541,4.314,1177,4.772,1178,4.772,1179,4.772,1180,5.491,1181,5.491]],["title/injectables/WomboDreamCommand.html",[0,0.477,24,3.133]],["body/injectables/WomboDreamCommand.html",[0,0.51,2,0.808,3,0.135,4,0.112,5,0.1,6,2.604,9,0.955,10,0.015,11,3.116,12,1.408,13,1.097,14,0.837,24,3.347,25,3.76,26,3.592,28,0.794,29,2.386,30,2.355,31,1.74,32,1.191,33,2.491,34,1.788,35,1.611,37,0.123,38,0.015,39,0.007,40,0.007,44,0.251,45,0.608,46,1.611,47,1.443,48,2.604,50,1.169,51,0.775,53,1.427,57,1.25,58,0.834,61,0.895,63,1.005,64,0.316,70,2.252,71,0.723,83,1.013,84,0.808,86,1.777,87,2.668,109,1.306,132,1.691,150,1.243,161,2.115,167,2.289,168,0.975,182,1.463,222,2.668,254,1.56,255,1.581,257,1.581,258,1.581,346,1.427,399,4.025,400,1.951,401,2.374,407,3.347,411,1.899,414,1.777,415,1.299,416,1.243,431,3.698,452,2.046,480,2.668,481,2.046,488,3.015,498,4.078,499,2.476,502,2.668,507,3.347,512,2.046,515,4.099,519,3.816,524,2.046,526,3.072,527,3.072,528,2.046,529,2.852,530,1.899,540,1.581,543,1.427,544,1.673,545,1.673,551,2.476,552,1.899,553,2.046,555,1.899,557,1.899,559,4.467,563,3.424,565,2.23,575,2.046,577,2.046,578,1.899,585,1.899,663,3.072,758,1.899,807,2.046,839,1.36,915,2.252,930,4.393,1138,2.476,1144,2.476,1145,2.476,1162,4.57,1170,2.476,1182,4.96,1183,2.849,1184,3.347,1185,4.277,1186,4.277,1187,5.135,1188,4.467,1189,2.849,1190,4.277,1191,2.849,1192,2.849,1193,2.849,1194,2.849,1195,2.849,1196,2.849,1197,2.849,1198,2.849,1199,4.277,1200,4.277,1201,2.849,1202,2.849,1203,2.849,1204,2.476,1205,5.135,1206,4.277,1207,2.849,1208,2.849,1209,2.849,1210,2.849,1211,2.849,1212,2.849,1213,2.849,1214,2.476]],["title/classes/WomboDreamDto.html",[38,0.021,1188,3.133]],["body/classes/WomboDreamDto.html",[3,0.202,4,0.167,5,0.15,6,2.925,9,0.776,10,0.014,11,2.485,12,1.403,13,1.641,25,3.604,26,3.766,28,0.679,29,2.381,30,2.17,31,1.811,32,2.381,35,2.031,37,0.185,38,0.022,39,0.01,40,0.01,44,0.375,45,0.81,58,1,61,0.993,64,0.542,139,0.933,150,2.987,167,2.572,254,2.048,305,3.505,309,3.797,399,3.766,411,2.842,414,2.659,415,1.944,416,1.86,435,2.852,506,3.344,519,3.553,582,1.709,584,3.061,585,3.797,586,4.27,587,4.916,591,3.336,592,3.704,594,4.457,606,4.949,671,4.27,839,3.063,840,3.161,1182,5.573,1188,4.457,1215,4.263,1216,4.457,1217,4.263,1218,4.263,1219,4.263,1220,4.457,1221,4.263]],["title/interfaces/WomboDreamInputSpec.html",[172,0.91,906,2.351]],["body/interfaces/WomboDreamInputSpec.html",[3,0.136,4,0.112,5,0.101,10,0.014,28,0.511,35,1.506,37,0.289,38,0.015,39,0.007,40,0.007,44,0.252,45,0.61,46,0.752,47,1.888,51,0.777,57,0.626,58,1.096,64,0.492,84,1.215,102,1.056,109,2.438,139,1.085,160,1.129,172,1.392,174,1.1,180,2.4,181,1.98,199,1.87,254,1.562,365,2.147,410,1.586,573,1.364,648,1.247,649,1.303,699,4.7,822,1.677,823,1.677,824,1.782,825,1.677,826,1.677,827,1.782,828,1.586,829,1.782,830,2.674,831,2.516,832,2.674,833,2.379,834,2.516,835,3.02,836,2.674,837,2.674,838,2.379,839,1.364,840,2.379,841,2.674,842,2.674,843,1.782,844,2.674,845,1.782,846,2.674,847,1.782,848,2.674,849,1.782,850,2.674,851,1.782,852,2.674,853,1.782,854,2.674,855,1.782,856,2.674,857,1.782,858,2.674,859,1.782,860,2.674,861,1.782,862,2.674,863,1.782,864,2.674,865,1.782,866,2.674,867,1.782,868,2.674,869,1.782,870,2.674,871,1.782,872,2.674,873,1.782,874,2.674,875,1.782,876,2.674,877,1.782,878,2.674,879,1.782,880,2.674,881,1.782,882,2.674,883,1.782,884,2.674,885,1.782,886,2.674,887,1.782,888,2.674,889,1.782,890,2.674,891,1.782,892,1.782,893,1.782,894,1.782,895,1.504,896,1.782,897,1.677,898,1.782,899,1.782,900,1.782,901,1.782,902,3.209,903,1.782,904,1.782,905,1.782,906,3.02,907,3.356,908,3.566,909,1.782,910,1.782,911,1.782,912,1.677,913,1.782,914,1.586,915,1.504,916,1.782,917,1.677,1222,3.724]],["title/injectables/WomboDreamModel.html",[0,0.477,1115,2.669]],["body/injectables/WomboDreamModel.html",[0,0.549,2,0.893,3,0.149,4,0.124,5,0.111,9,0.869,10,0.015,14,0.616,26,4.041,28,0.76,35,1.435,37,0.136,38,0.017,39,0.008,40,0.008,44,0.277,45,0.655,46,1.975,47,1.572,50,1.259,51,1.156,57,1.009,58,0.962,60,4.588,61,1.162,63,1.248,64,0.492,71,1.522,83,1.12,84,0.893,98,1.577,132,2.37,136,4.588,139,1.048,148,2.464,154,1.849,160,1.579,161,2.1,162,2.261,164,3.912,168,2.182,169,2.2,180,1.576,199,2.377,222,2.874,235,2.736,236,2.736,254,1.638,309,2.099,365,3.447,394,4.442,395,5.98,399,2.705,401,1.748,411,2.099,423,4.002,563,2.099,719,4.002,825,2.705,828,1.748,831,1.849,838,3.327,839,1.503,907,1.849,915,1.658,917,1.849,1115,3.071,1118,2.736,1223,3.148,1224,5.447,1225,5.447,1226,5.447,1227,4.606,1228,4.606,1229,3.148,1230,4.606,1231,3.148,1232,3.148,1233,3.148,1234,5.993,1235,3.148,1236,4.002,1237,4.606,1238,3.148,1239,4.606,1240,3.148,1241,3.148,1242,3.148,1243,3.148,1244,3.148,1245,3.148,1246,3.148,1247,3.148,1248,5.447,1249,4.606,1250,3.148,1251,3.148,1252,3.148,1253,3.148,1254,4.606,1255,3.148,1256,2.464,1257,4.606,1258,3.148,1259,3.148,1260,3.148,1261,3.148]],["title/injectables/WomboDreamService.html",[0,0.477,1162,2.669]],["body/injectables/WomboDreamService.html",[0,0.577,2,0.957,3,0.16,4,0.133,5,0.119,9,0.844,10,0.015,14,0.661,25,3.453,26,3.85,28,0.577,30,1.536,31,1.439,33,2.703,34,2.026,35,1.895,37,0.146,38,0.018,39,0.008,40,0.008,44,0.297,45,0.689,46,1.493,47,1.461,48,2.825,50,1.324,51,0.878,57,1.242,58,0.894,61,0.988,63,0.948,64,0.358,71,0.857,83,1.723,84,1.374,103,1.778,109,2.084,132,2.159,139,0.772,150,3.139,161,1.866,167,2.272,182,2.335,254,2.056,259,1.983,399,3.328,400,2.991,401,3.437,411,2.251,414,2.107,415,1.54,416,1.474,502,3.023,504,3.48,506,2.845,540,2.69,543,2.427,544,2.845,571,3.48,573,3.131,663,3.48,671,3.023,748,3.792,807,2.425,839,3.259,914,1.874,1115,4.687,1119,2.934,1162,3.231,1236,4.211,1262,6.193,1263,3.377,1264,5.931,1265,5.667,1266,3.377,1267,4.846,1268,3.377,1269,3.377,1270,3.792,1271,4.211,1272,4.846,1273,4.846,1274,4.846,1275,4.846,1276,4.846,1277,4.846,1278,3.377,1279,3.377,1280,5.667,1281,3.377,1282,3.377,1283,3.377,1284,4.846,1285,3.377,1286,3.377,1287,3.377,1288,3.377,1289,3.377,1290,3.377,1291,3.377,1292,3.377]],["title/classes/WomboDreamStyle.html",[38,0.021,839,1.912]],["body/classes/WomboDreamStyle.html",[3,0.085,4,0.071,5,0.063,10,0.014,28,0.72,35,0.474,37,0.241,38,0.009,39,0.005,40,0.005,44,0.158,45,0.423,46,0.783,47,1.936,50,0.812,51,0.539,57,0.651,58,1.052,61,1.333,63,0.582,64,0.389,71,0.456,83,2.664,84,2.168,102,1.099,109,2.445,139,1.034,160,0.783,172,1.112,180,1.994,181,1.463,199,1.297,254,0.491,365,1.489,410,0.998,573,0.859,582,0.721,648,0.785,649,0.82,699,4.815,822,4.505,823,1.056,824,1.122,825,1.056,826,1.056,827,1.122,828,0.998,829,1.122,830,1.855,831,1.745,832,1.855,833,1.65,834,1.745,835,2.231,836,1.855,837,1.855,838,2.109,839,1.42,840,2.924,841,2.754,842,3.051,843,1.855,844,3.051,845,1.855,846,3.051,847,1.855,848,3.051,849,1.855,850,3.051,851,1.855,852,3.051,853,1.855,854,3.051,855,1.855,856,3.051,857,1.855,858,3.051,859,1.855,860,3.051,861,1.855,862,3.051,863,1.855,864,3.051,865,1.855,866,3.051,867,1.855,868,3.051,869,1.855,870,3.051,871,1.855,872,3.051,873,1.855,874,3.051,875,1.855,876,3.051,877,1.855,878,3.051,879,1.855,880,3.051,881,1.855,882,3.051,883,1.855,884,3.051,885,1.855,886,3.051,887,1.855,888,3.051,889,1.855,890,3.051,891,1.855,892,1.122,893,1.122,894,1.122,895,0.947,896,1.122,897,1.056,898,1.122,899,1.122,900,1.122,901,1.122,902,2.371,903,1.122,904,1.855,905,1.122,906,1.745,907,1.056,908,1.122,909,1.122,910,1.122,911,1.122,912,1.056,913,1.122,914,0.998,915,0.947,916,1.122,917,1.056,1094,2.583,1293,2.973,1294,1.798,1295,2.973,1296,1.798,1297,1.798,1298,1.798,1299,1.798,1300,1.798,1301,1.798,1302,1.798,1303,1.798,1304,1.798,1305,1.798,1306,1.798,1307,1.798,1308,1.798,1309,1.798,1310,1.798,1311,1.798,1312,1.798,1313,1.798,1314,1.798,1315,1.798,1316,1.798,1317,1.798,1318,1.798,1319,1.798,1320,1.798,1321,1.798,1322,1.798,1323,1.798,1324,1.798,1325,1.798]],["title/interfaces/WomboDreamTaskResponse.html",[172,0.91,915,2.108]],["body/interfaces/WomboDreamTaskResponse.html",[3,0.128,4,0.106,5,0.095,10,0.014,28,0.49,35,0.713,37,0.284,38,0.014,39,0.007,40,0.007,44,0.238,45,0.585,46,0.713,47,1.878,57,0.593,58,1.09,64,0.529,84,1.166,102,1.001,109,2.424,139,1.106,160,1.083,172,1.36,174,1.041,180,2.046,181,1.916,199,2.61,254,0.739,365,2.996,410,1.502,573,1.292,648,2.172,649,1.234,699,4.674,822,1.589,823,1.589,824,1.688,825,1.589,826,1.589,827,1.688,828,1.502,829,1.688,830,3.731,831,3.512,832,3.731,833,3.32,834,3.512,835,3.512,836,3.731,837,3.731,838,2.283,839,1.292,840,2.283,841,2.566,842,2.566,843,1.688,844,2.566,845,1.688,846,2.566,847,1.688,848,2.566,849,1.688,850,2.566,851,1.688,852,2.566,853,1.688,854,2.566,855,1.688,856,2.566,857,1.688,858,2.566,859,1.688,860,2.566,861,1.688,862,2.566,863,1.688,864,2.566,865,1.688,866,2.566,867,1.688,868,2.566,869,1.688,870,2.566,871,1.688,872,2.566,873,1.688,874,2.566,875,1.688,876,2.566,877,1.688,878,2.566,879,1.688,880,2.566,881,1.688,882,2.566,883,1.688,884,2.566,885,1.688,886,2.566,887,1.688,888,2.566,889,1.688,890,2.566,891,1.688,892,1.688,893,1.688,894,1.688,895,1.424,896,1.688,897,1.589,898,1.688,899,1.688,900,1.688,901,1.688,902,3.105,903,1.688,904,1.688,905,1.688,906,3.265,907,1.589,908,1.688,909,1.688,910,1.688,911,1.688,912,1.589,913,1.688,914,1.502,915,2.166,916,3.469,917,3.265]],["title/interfaces/WomboTaskIdResponse.html",[172,0.91,828,2.222]],["body/interfaces/WomboTaskIdResponse.html",[3,0.128,4,0.106,5,0.095,10,0.014,28,0.488,35,0.708,37,0.283,38,0.014,39,0.007,40,0.007,44,0.237,45,0.582,46,0.708,47,1.876,57,0.589,58,1.089,64,0.528,84,1.161,102,0.994,109,2.423,139,1.111,160,1.078,172,1.356,174,1.035,180,2.04,181,2.515,199,2.603,254,0.735,365,2.987,410,1.492,573,1.284,648,1.173,649,1.226,699,4.671,822,1.578,823,1.578,824,1.677,825,1.578,826,1.578,827,1.677,828,2.272,829,3.457,830,3.721,831,3.502,832,3.721,833,3.31,834,3.502,835,3.502,836,3.721,837,3.721,838,2.272,839,1.284,840,2.272,841,2.554,842,2.554,843,1.677,844,2.554,845,1.677,846,2.554,847,1.677,848,2.554,849,1.677,850,2.554,851,1.677,852,2.554,853,1.677,854,2.554,855,1.677,856,2.554,857,1.677,858,2.554,859,1.677,860,2.554,861,1.677,862,2.554,863,1.677,864,2.554,865,1.677,866,2.554,867,1.677,868,2.554,869,1.677,870,2.554,871,1.677,872,2.554,873,1.677,874,2.554,875,1.677,876,2.554,877,1.677,878,2.554,879,1.677,880,2.554,881,1.677,882,2.554,883,1.677,884,2.554,885,1.677,886,2.554,887,1.677,888,2.554,889,1.677,890,2.554,891,1.677,892,1.677,893,1.677,894,1.677,895,1.415,896,1.677,897,1.578,898,1.677,899,1.677,900,1.677,901,1.677,902,3.093,903,1.677,904,1.677,905,1.677,906,2.403,907,1.578,908,1.677,909,1.677,910,1.677,911,1.677,912,1.578,913,1.677,914,1.492,915,1.415,916,1.677,917,1.578]],["title/changelog.html",[1326,2.403,1327,2.231,1328,2.907]],["body/changelog.html",[5,0.186,10,0.013,11,3.176,20,2.116,21,1.91,30,1.674,33,2.304,38,0.02,39,0.009,40,0.009,53,1.91,70,2.008,88,2.008,144,2.542,145,2.542,146,2.239,169,1.821,182,1.304,200,2.542,209,2.116,286,2.542,296,3.313,378,3.313,387,2.738,400,1.739,429,2.738,440,3.313,457,3.313,465,4.077,480,2.379,488,3.555,496,2.738,510,2.379,539,2.984,544,2.239,552,2.542,578,2.542,595,2.738,669,3.313,698,2.984,738,3.791,751,2.984,807,2.738,937,2.239,1026,2.984,1327,3.52,1328,3.313,1329,3.813,1330,3.813,1331,6.535,1332,6.446,1333,4.587,1334,5.895,1335,3.813,1336,3.313,1337,3.813,1338,3.313,1339,3.813,1340,3.813,1341,6.055,1342,4.587,1343,4.587,1344,5.279,1345,3.813,1346,3.813,1347,3.813,1348,3.813,1349,5.279,1350,3.813,1351,6.055,1352,7.099,1353,3.813,1354,3.313,1355,3.813,1356,5.279,1357,3.813,1358,3.813,1359,3.813,1360,3.813,1361,2.984,1362,3.313,1363,3.813,1364,3.813,1365,3.813,1366,3.813,1367,3.313,1368,6.055,1369,3.813,1370,3.813,1371,3.813,1372,3.813,1373,3.813,1374,3.813,1375,3.813,1376,3.813,1377,3.313,1378,2.984,1379,3.313,1380,3.313,1381,3.313,1382,3.313,1383,3.313,1384,3.813,1385,3.813,1386,3.813,1387,3.313,1388,2.984,1389,5.279,1390,4.587,1391,3.813,1392,3.813,1393,2.984,1394,3.813,1395,4.587,1396,3.813,1397,3.813,1398,3.813,1399,3.813,1400,3.813,1401,3.813,1402,5.279,1403,6.535,1404,5.279,1405,3.813,1406,3.791,1407,3.813,1408,3.813,1409,3.313,1410,3.813,1411,3.813,1412,5.279,1413,6.535,1414,5.279,1415,3.813,1416,3.813,1417,3.813,1418,4.587,1419,3.813,1420,3.813,1421,3.813,1422,3.813,1423,3.813,1424,3.813,1425,3.813,1426,3.813,1427,3.313,1428,3.813,1429,3.813,1430,3.813,1431,3.313,1432,3.813,1433,3.813,1434,3.813,1435,3.813,1436,3.813,1437,3.313,1438,3.813]],["title/classes/createCappedJobsCollection1661353047612.html",[38,0.021,1439,3.479]],["body/classes/createCappedJobsCollection1661353047612.html",[3,0.166,4,0.137,5,0.123,9,0.787,10,0.014,14,0.683,28,0.749,31,1.259,37,0.151,38,0.018,39,0.009,40,0.009,44,0.307,45,0.706,46,1.818,47,1.628,48,3.147,50,1.356,51,0.633,53,2.484,58,1.006,61,1.158,63,0.683,64,0.426,71,1.259,83,2.052,84,1.636,102,1.835,109,1.762,132,2.272,139,0.475,148,2.325,161,1.149,167,1.399,180,1.194,200,2.326,259,2.049,305,1.666,351,3.601,414,2.177,415,1.592,416,1.523,480,2.177,508,6.646,534,2.326,579,3.307,582,1.399,750,2.731,1008,2.326,1021,4.837,1439,4.31,1440,6.9,1441,7.768,1442,3.489,1443,6.285,1444,6.304,1445,4.96,1446,5.772,1447,6.9,1448,6.285,1449,4.31,1450,4.96,1451,3.489,1452,4.96,1453,3.489,1454,4.96,1455,3.489,1456,3.489,1457,7.381,1458,5.772,1459,4.96,1460,4.96,1461,6.285,1462,3.489,1463,4.96,1464,4.96,1465,4.96,1466,3.489,1467,4.96,1468,3.489,1469,3.489,1470,3.489,1471,3.489,1472,3.489,1473,4.96,1474,3.489,1475,3.489,1476,3.489,1477,3.489,1478,3.489,1479,3.032,1480,3.489,1481,3.489,1482,3.489,1483,3.489,1484,3.489,1485,3.032]],["title/dependencies.html",[315,2.196,1486,2.907]],["body/dependencies.html",[9,0.662,10,0.015,12,2.042,13,2.387,14,1.214,39,0.011,40,0.011,95,5.936,97,4.219,98,2.432,100,4.219,101,3.237,154,2.851,156,3.237,285,3.8,286,4.134,315,2.215,319,2.318,339,4.219,342,3.8,344,3.487,346,2.432,374,3.8,387,4.453,466,3.8,723,4.219,738,3.487,739,4.219,1008,3.237,1173,4.219,1174,3.8,1379,4.219,1380,4.219,1487,4.855,1488,4.855,1489,4.855,1490,4.855,1491,4.855,1492,4.855,1493,4.855,1494,4.855,1495,6.831,1496,4.855,1497,4.855,1498,4.855,1499,5.388,1500,4.855,1501,4.855,1502,4.855,1503,4.855,1504,4.855,1505,4.855,1506,4.855,1507,4.855,1508,4.855,1509,4.855,1510,4.855,1511,4.855,1512,4.855,1513,4.855,1514,4.855,1515,4.855,1516,4.855,1517,4.855,1518,4.855,1519,4.855,1520,4.855,1521,4.855,1522,4.219,1523,4.855]],["title/miscellaneous/enumerations.html",[1524,1.857,1525,4.183]],["body/miscellaneous/enumerations.html",[6,2.828,10,0.014,20,2.695,21,3.605,22,2.695,39,0.011,40,0.011,44,0.427,84,2.327,88,2.556,179,3.725,182,2.121,183,4.128,184,3.029,185,3.029,186,4.49,187,2.851,188,3.029,189,3.029,190,3.029,207,3.237,254,1.867,494,3.8,583,5.388,593,3.8,594,3.8,596,3.442,597,3.265,598,3.442,599,3.442,600,3.442,601,3.442,602,3.442,603,3.442,604,3.442,605,3.442,1120,3.487,1146,4.853,1151,4.219,1152,4.219,1153,4.219,1154,4.219,1155,4.219,1156,4.219,1524,2.695,1525,4.219,1526,4.219,1527,4.855]],["title/miscellaneous/functions.html",[1270,3.768,1524,1.857]],["body/miscellaneous/functions.html",[10,0.014,11,2.501,28,0.819,36,4.116,39,0.012,40,0.012,44,0.505,51,1.246,63,1.345,64,0.507,71,1.455,139,0.936,273,4.981,318,3.514,465,3.576,529,4.581,543,2.871,650,3.618,937,4.035,974,4.287,1270,4.486,1524,3.181,1528,5.732,1529,4.981,1530,4.981,1531,5.732,1532,4.981,1533,5.732,1534,5.732,1535,4.981,1536,5.732]],["title/index.html",[44,0.295,1326,2.403,1327,2.231]],["body/index.html",[4,0.097,5,0.087,10,0.011,11,2.654,12,2.003,16,2.564,20,2.134,21,2.36,25,2.025,28,0.458,29,2.878,30,2.135,33,2.056,34,2.22,37,0.107,39,0.007,40,0.007,51,0.449,53,1.241,63,0.485,64,0.348,87,1.546,88,2.796,101,1.652,117,2.153,119,2.153,144,1.652,145,1.652,146,3.118,150,2.056,182,2.244,199,1.678,206,3.814,209,3.522,220,3.01,223,2.762,226,1.546,286,2.564,346,1.241,361,1.94,365,2.879,374,1.94,387,1.78,399,1.455,400,2.422,429,1.78,465,4.294,466,1.94,472,3.341,488,1.455,496,1.78,503,1.78,505,4.094,506,1.455,510,2.399,535,5.271,537,1.546,540,2.947,541,2.796,542,2.399,543,1.241,544,3.118,545,2.258,579,1.652,580,3.384,586,3.586,670,1.94,686,3.141,698,1.94,738,1.78,799,2.153,895,1.305,897,1.455,937,2.258,957,2.153,982,3.341,1008,1.652,1021,3.54,1084,3.01,1133,2.564,1150,1.94,1184,3.01,1204,2.153,1216,1.94,1220,3.01,1256,1.94,1264,3.341,1326,2.762,1327,2.564,1333,2.153,1334,1.94,1336,2.153,1338,2.153,1342,5.981,1343,2.153,1354,2.153,1362,2.153,1367,2.153,1377,2.153,1378,1.94,1381,3.341,1382,2.153,1383,2.153,1387,2.153,1388,5.271,1390,2.153,1393,1.94,1395,2.153,1406,1.78,1409,3.341,1427,2.153,1431,3.341,1437,4.094,1449,2.153,1479,2.153,1485,5.853,1537,3.845,1538,2.478,1539,2.478,1540,2.478,1541,2.478,1542,4.712,1543,2.478,1544,2.153,1545,5.748,1546,3.845,1547,3.845,1548,5.31,1549,3.845,1550,3.814,1551,3.845,1552,3.845,1553,3.341,1554,3.01,1555,2.153,1556,2.478,1557,4.094,1558,2.478,1559,2.478,1560,2.153,1561,2.153,1562,2.153,1563,5.31,1564,2.478,1565,2.478,1566,2.478,1567,2.478,1568,2.153,1569,3.845,1570,2.478,1571,3.845,1572,2.478,1573,2.478,1574,3.845,1575,3.845,1576,5.31,1577,2.478,1578,3.845,1579,2.478,1580,2.478,1581,2.153,1582,2.478,1583,2.478,1584,2.478,1585,2.478,1586,2.478,1587,3.341,1588,4.712,1589,2.478,1590,2.478,1591,2.478,1592,5.31,1593,4.712,1594,2.478,1595,2.478,1596,2.478,1597,2.478,1598,2.478,1599,3.845,1600,2.478,1601,2.478,1602,2.478,1603,2.153,1604,2.478,1605,2.478,1606,2.153,1607,2.478,1608,2.478,1609,2.478,1610,2.478,1611,2.478,1612,3.845,1613,2.478,1614,2.478,1615,2.153,1616,2.478,1617,2.478,1618,2.153,1619,2.478,1620,2.153,1621,2.153,1622,2.478,1623,2.478,1624,6.082,1625,2.478,1626,4.712,1627,2.478,1628,2.153,1629,1.94,1630,2.478,1631,2.478,1632,2.478,1633,3.341,1634,2.478,1635,3.845,1636,3.688,1637,2.478,1638,2.478,1639,3.845,1640,2.478,1641,2.478,1642,2.478,1643,2.478,1644,3.845,1645,3.845,1646,4.712,1647,2.478,1648,2.478,1649,3.341,1650,3.845,1651,4.712,1652,3.845,1653,3.845,1654,3.845,1655,2.153,1656,2.478,1657,2.478,1658,2.478,1659,2.478,1660,2.478,1661,2.478,1662,2.478,1663,2.478,1664,2.478,1665,3.845,1666,2.478,1667,2.478,1668,1.94,1669,2.153,1670,3.341,1671,4.094,1672,2.478,1673,1.94,1674,2.478,1675,2.478,1676,2.478,1677,2.478,1678,2.478,1679,2.478,1680,2.478,1681,2.478,1682,3.845,1683,3.845,1684,2.478,1685,2.153,1686,2.478,1687,2.478,1688,2.153,1689,2.478,1690,2.478,1691,2.478,1692,2.478,1693,3.845,1694,2.478,1695,3.845,1696,3.845,1697,2.478,1698,2.478,1699,3.845,1700,2.153,1701,2.153,1702,2.478,1703,2.153,1704,2.478,1705,2.478,1706,2.478]],["title/license.html",[1326,2.403,1327,2.231,1550,2.403]],["body/license.html",[4,0.253,5,0.202,9,0.234,10,0.006,28,0.341,31,0.437,34,0.719,36,2.645,38,0.009,39,0.005,40,0.005,61,0.3,82,3.215,87,1.073,101,1.147,147,2.058,174,0.662,179,2.151,223,1.235,224,1.494,333,0.821,376,1.235,401,0.955,416,0.75,468,1.494,488,2.162,497,5.704,506,1.01,509,4.404,537,1.073,542,1.073,544,1.01,563,1.147,586,2.68,671,1.073,686,1.147,826,1.682,833,0.955,834,1.01,912,1.01,997,1.346,1133,4.088,1174,1.346,1214,3.2,1220,1.346,1256,1.346,1271,1.494,1332,1.494,1334,2.242,1361,1.346,1378,1.346,1418,3.2,1499,2.49,1544,1.494,1550,5.513,1554,1.346,1562,2.49,1568,2.49,1603,1.494,1615,3.2,1618,1.494,1620,1.494,1621,1.494,1629,2.882,1633,1.494,1649,1.494,1655,4.146,1668,1.346,1669,3.2,1670,3.2,1671,1.494,1673,5.495,1685,1.494,1688,1.494,1700,3.2,1701,5.165,1703,1.494,1707,3.732,1708,3.2,1709,1.72,1710,1.72,1711,1.72,1712,5.944,1713,6.564,1714,4.295,1715,4.772,1716,1.72,1717,6.776,1718,5.328,1719,1.72,1720,1.72,1721,6.132,1722,6.438,1723,4.772,1724,2.865,1725,1.72,1726,4.772,1727,1.72,1728,1.72,1729,4.295,1730,1.72,1731,1.72,1732,4.295,1733,2.865,1734,2.865,1735,1.72,1736,3.682,1737,2.865,1738,2.865,1739,1.72,1740,4.295,1741,2.865,1742,5.153,1743,1.72,1744,2.865,1745,1.72,1746,1.72,1747,1.72,1748,1.72,1749,1.72,1750,1.72,1751,1.72,1752,3.682,1753,1.72,1754,2.865,1755,1.72,1756,1.72,1757,5.153,1758,5.944,1759,4.295,1760,1.72,1761,1.72,1762,1.72,1763,1.72,1764,1.72,1765,1.72,1766,1.72,1767,7.677,1768,3.682,1769,2.865,1770,1.494,1771,1.72,1772,5.944,1773,2.865,1774,1.72,1775,4.772,1776,2.865,1777,1.72,1778,7.021,1779,7.089,1780,1.72,1781,1.72,1782,1.72,1783,1.72,1784,1.72,1785,1.72,1786,2.865,1787,2.865,1788,1.72,1789,1.72,1790,1.72,1791,4.295,1792,4.772,1793,1.72,1794,2.865,1795,4.295,1796,2.865,1797,1.72,1798,4.772,1799,2.865,1800,1.72,1801,1.72,1802,3.682,1803,1.72,1804,1.72,1805,1.72,1806,1.72,1807,2.865,1808,1.72,1809,1.72,1810,3.682,1811,1.72,1812,1.72,1813,3.682,1814,1.72,1815,1.72,1816,1.72,1817,4.295,1818,6.132,1819,1.72,1820,1.72,1821,2.865,1822,5.724,1823,3.682,1824,2.865,1825,4.295,1826,2.865,1827,2.865,1828,2.865,1829,2.865,1830,2.865,1831,3.682,1832,2.865,1833,2.865,1834,2.865,1835,1.72,1836,2.865,1837,2.865,1838,1.72,1839,1.72,1840,4.772,1841,5.464,1842,3.682,1843,2.865,1844,1.72,1845,2.865,1846,2.865,1847,1.72,1848,1.72,1849,3.682,1850,2.865,1851,1.72,1852,1.72,1853,1.72,1854,3.682,1855,1.72,1856,1.72,1857,1.72,1858,2.865,1859,2.865,1860,1.72,1861,1.72,1862,1.72,1863,1.72,1864,1.72,1865,1.72,1866,1.72,1867,2.865,1868,1.72,1869,1.72,1870,1.72,1871,1.72,1872,1.72,1873,1.72,1874,1.72,1875,3.682,1876,1.72,1877,3.682,1878,1.72,1879,1.72,1880,1.72,1881,5.724,1882,1.72,1883,1.72,1884,1.72,1885,1.72,1886,1.72,1887,4.295,1888,2.865,1889,3.732,1890,1.72,1891,1.72,1892,1.72,1893,1.72,1894,1.72,1895,1.72,1896,2.865,1897,2.865,1898,1.72,1899,1.72,1900,1.72,1901,2.865,1902,1.72,1903,1.72,1904,4.146,1905,1.72,1906,1.72,1907,1.72,1908,1.72,1909,1.72,1910,1.72,1911,1.72,1912,4.295,1913,1.72,1914,1.72,1915,1.72,1916,1.72,1917,1.72,1918,1.72,1919,1.72,1920,1.72,1921,1.72,1922,1.72,1923,2.865,1924,1.72,1925,2.865,1926,1.72,1927,1.72,1928,1.72,1929,1.72,1930,1.72,1931,1.72,1932,4.295,1933,3.682,1934,3.682,1935,3.682,1936,2.865,1937,2.865,1938,3.682,1939,2.865,1940,2.865,1941,1.72,1942,1.72,1943,1.72,1944,1.72,1945,1.72,1946,1.72,1947,1.72,1948,1.72,1949,2.865,1950,1.72,1951,1.72,1952,1.72,1953,1.72,1954,4.772,1955,1.72,1956,1.72,1957,1.72,1958,1.72,1959,1.72,1960,1.72,1961,1.72,1962,1.72,1963,4.772,1964,1.72,1965,1.72,1966,1.72,1967,1.72,1968,1.72,1969,1.72,1970,1.72,1971,1.72,1972,1.72,1973,1.72,1974,1.72,1975,1.72,1976,1.72,1977,1.72,1978,1.72,1979,1.72,1980,3.682,1981,1.72,1982,1.72,1983,1.72,1984,1.72,1985,2.865,1986,1.72,1987,1.72,1988,1.72,1989,1.72,1990,1.72,1991,1.72,1992,1.72,1993,1.72,1994,1.72,1995,1.72,1996,1.72,1997,1.72,1998,1.72,1999,1.72,2000,1.72,2001,2.865,2002,1.72,2003,1.72,2004,2.865,2005,2.865,2006,1.72,2007,1.72,2008,1.72,2009,1.72,2010,1.72,2011,1.72,2012,1.72,2013,1.72,2014,1.72,2015,1.72,2016,1.72,2017,1.72,2018,1.72,2019,1.72,2020,1.72,2021,1.72,2022,1.72,2023,1.72]],["title/modules.html",[314,2.49]],["body/modules.html",[10,0.012,39,0.012,40,0.012,313,4.072,314,2.586,324,3.78,325,3.147,326,3.329,327,3.537,328,3.537,329,3.537,812,3.78,815,4.072,1361,6.351,2024,8.115,2025,8.115,2026,8.115]],["title/overview.html",[2027,4.744]],["body/overview.html",[2,0.933,10,0.014,39,0.008,40,0.008,41,4.652,87,2.054,129,4.652,174,1.267,211,4.652,240,4.652,261,5.011,312,1.126,313,5.598,314,1.502,315,1.502,316,1.649,317,1.649,318,1.572,319,1.572,320,1.649,321,2.86,322,2.86,323,2.86,324,4.853,325,4.04,326,4.194,327,4.953,328,5.061,329,4.353,330,4.763,331,2.383,332,1.649,333,1.572,376,2.364,394,3.725,431,3.397,500,4.652,541,3.674,542,2.054,582,1.32,608,4.652,768,4.652,809,2.86,810,2.86,811,2.86,812,4.99,815,5.011,816,2.86,819,2.86,925,4.353,1011,2.86,1012,2.86,1013,2.86,1014,4.652,1087,2.86,1088,2.86,1089,2.86,1111,2.86,1112,2.86,1114,2.86,1115,4.652,1158,2.86,1160,2.86,1161,2.86,1162,4.652,1177,2.86,1178,2.86,1179,2.86,2027,2.86,2028,3.292,2029,4.758]],["title/properties.html",[45,0.685,1486,2.907]],["body/properties.html",[10,0.014,12,2.002,29,2.542,30,1.928,31,1.544,39,0.012,40,0.012,45,0.865,414,3.794,415,2.774,416,2.654,465,3.794,496,4.367,1550,4.367,1553,5.284,1629,4.759,1707,5.284,1708,5.284,2030,6.081,2031,5.284]],["title/miscellaneous/typealiases.html",[1524,1.857,2032,4.814]],["body/miscellaneous/typealiases.html",[6,2.089,10,0.014,39,0.01,40,0.01,44,0.403,64,0.441,139,1.066,157,4.673,158,5.188,175,4.288,176,4.288,179,3.951,182,2.043,183,4.292,184,3.725,185,3.725,186,4.825,187,3.506,188,3.725,189,3.725,190,3.725,207,3.053,254,1.632,573,2.187,596,2.542,597,2.411,598,2.542,599,2.542,600,2.542,601,2.542,602,2.542,603,2.542,604,2.542,605,2.542,633,2.689,639,2.857,640,3.725,649,2.724,650,2.411,658,3.725,822,2.689,823,3.506,835,3.506,914,2.542,1120,3.289,1146,4.673,1150,4.673,1222,3.979,1524,2.542,1526,3.979,2033,4.579,2034,6.644,2035,6.644,2036,6.644,2037,4.579]],["title/miscellaneous/variables.html",[1524,1.857,1636,3.768]],["body/miscellaneous/variables.html",[10,0.015,39,0.011,40,0.011,44,0.425,64,0.456,72,3.471,82,3.857,83,2.641,84,2.239,139,0.979,160,1.628,167,2.479,168,2.332,181,2.766,585,3.222,973,5.372,974,3.857,1524,2.683,1529,4.2,1530,4.2,1532,4.2,1535,4.2,1581,4.2,1636,3.782,2038,6.182,2039,6.817,2040,6.182,2041,6.182,2042,6.182,2043,4.833,2044,4.833,2045,4.833,2046,4.833,2047,4.833,2048,4.833,2049,6.182,2050,7.185,2051,4.833,2052,4.833]],["title/additional-documentation/commands.html",[997,2.619,1406,2.403,1904,2.907]],["body/additional-documentation/commands.html",[10,0.013,11,3.291,12,1.346,16,3.692,20,3.073,25,3.306,29,3.1,30,2.299,31,1.038,32,3.196,33,2.937,34,2.94,35,2.014,39,0.01,40,0.011,63,1.317,146,3.251,150,3.069,179,2.773,182,2.48,183,2.269,206,4.509,209,3.735,220,3.2,226,3.454,254,2.026,399,3.687,400,1.865,429,2.936,465,2.55,510,2.55,538,4.334,543,3.371,671,3.917,766,4.811,840,2.269,937,3.951,979,3.552,1133,3.692,1134,4.811,1184,4.334,1216,5.674,1388,3.2,1393,3.2,1406,4.509,1444,3.552,1522,3.552,1554,3.2,1555,5.848,1557,3.552,1560,4.811,1561,3.552,1587,3.552,1606,3.552,1628,3.552,1668,3.2,1673,3.2,1718,3.552,1770,4.811,1889,3.552,2031,3.552,2053,4.088,2054,4.088,2055,4.088,2056,4.088,2057,4.088,2058,4.088,2059,5.537,2060,4.088,2061,4.088,2062,4.088,2063,4.088,2064,4.088,2065,5.537,2066,4.088,2067,4.088,2068,4.088,2069,4.088,2070,4.088,2071,4.088,2072,4.088,2073,4.088,2074,4.088,2075,4.088,2076,4.088,2077,4.088,2078,4.088]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/commands.html":{}}}],["0",{"_index":86,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/CogView2Model.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/WomboDreamCommand.html":{}}}],["0.0.6",{"_index":1509,"title":{},"body":{"dependencies.html":{}}}],["0.1.0",{"_index":1492,"title":{},"body":{"dependencies.html":{}}}],["0.1.13",{"_index":1514,"title":{},"body":{"dependencies.html":{}}}],["0.1.6",{"_index":1511,"title":{},"body":{"dependencies.html":{}}}],["0.17.2",{"_index":1521,"title":{},"body":{"dependencies.html":{}}}],["0.27.2",{"_index":1504,"title":{},"body":{"dependencies.html":{}}}],["0.3.7",{"_index":1519,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":233,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["0.7",{"_index":230,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["0.75",{"_index":232,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["001",{"_index":186,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["002",{"_index":187,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["1",{"_index":87,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryModel.html":{},"injectables/WomboDreamCommand.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["1.0",{"_index":724,"title":{},"body":{"injectables/Collage.html":{}}}],["1.1.4",{"_index":1523,"title":{},"body":{"dependencies.html":{}}}],["1.1s",{"_index":1275,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["1.2.0",{"_index":1422,"title":{},"body":{"changelog.html":{}}}],["1.29.2",{"_index":1630,"title":{},"body":{"index.html":{}}}],["1.3.0",{"_index":1420,"title":{},"body":{"changelog.html":{}}}],["1.3.1",{"_index":1489,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":1407,"title":{},"body":{"changelog.html":{}}}],["1.4.5",{"_index":539,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"changelog.html":{}}}],["1.5.0",{"_index":1399,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":1384,"title":{},"body":{"changelog.html":{}}}],["10.0.19",{"_index":1491,"title":{},"body":{"dependencies.html":{}}}],["10.0.21",{"_index":1497,"title":{},"body":{"dependencies.html":{}}}],["11t",{"_index":1385,"title":{},"body":{"changelog.html":{}}}],["12",{"_index":628,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["13.8.1",{"_index":1505,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":2029,"title":{},"body":{"overview.html":{}}}],["15.8.0",{"_index":1506,"title":{},"body":{"dependencies.html":{}}}],["1661353047612",{"_index":1452,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["16th",{"_index":1423,"title":{},"body":{"changelog.html":{}}}],["18th",{"_index":1347,"title":{},"body":{"changelog.html":{}}}],["1_100",{"_index":1287,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["1}/${__include_in_help.length",{"_index":998,"title":{},"body":{"injectables/HelpService.html":{}}}],["2",{"_index":88,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/HelpService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["2.0",{"_index":1708,"title":{},"body":{"license.html":{},"properties.html":{}}}],["2.0.0",{"_index":595,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{}}}],["2.0.1",{"_index":1501,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1329,"title":{},"body":{"changelog.html":{}}}],["2.1.5",{"_index":414,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"properties.html":{}}}],["2.2.0",{"_index":1496,"title":{},"body":{"dependencies.html":{}}}],["2.command",{"_index":23,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["2.command.ts",{"_index":495,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.command.ts:49",{"_index":501,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.command.ts:69",{"_index":516,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.dto",{"_index":533,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["2.dto.ts",{"_index":583,"title":{},"body":{"classes/CogView2CommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["2.dto.ts:36",{"_index":588,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["2.dto.ts:45",{"_index":590,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["2.model",{"_index":679,"title":{},"body":{"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{}}}],["2.model.ts",{"_index":610,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:13",{"_index":611,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:16",{"_index":613,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.model.ts:52",{"_index":612,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["2.service",{"_index":532,"title":{},"body":{"injectables/CogView2Command.html":{},"modules/ServicesModule.html":{}}}],["2.service.ts",{"_index":660,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2.service.ts:20",{"_index":662,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2.service.ts:41",{"_index":668,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["2/cog",{"_index":22,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"miscellaneous/enumerations.html":{}}}],["20",{"_index":719,"title":{},"body":{"injectables/Collage.html":{},"injectables/WomboDreamModel.html":{}}}],["2004",{"_index":1710,"title":{},"body":{"license.html":{}}}],["2022",{"_index":1332,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["20th",{"_index":1421,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":2028,"title":{},"body":{"overview.html":{}}}],["2400",{"_index":623,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["26th",{"_index":1330,"title":{},"body":{"changelog.html":{}}}],["27th",{"_index":1402,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":89,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryModel.html":{},"injectables/Collage.html":{}}}],["3.0.2",{"_index":1516,"title":{},"body":{"dependencies.html":{}}}],["3.10.0",{"_index":1503,"title":{},"body":{"dependencies.html":{}}}],["3.4.2",{"_index":1487,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":1488,"title":{},"body":{"dependencies.html":{}}}],["3.8.2",{"_index":1520,"title":{},"body":{"dependencies.html":{}}}],["300",{"_index":716,"title":{},"body":{"injectables/Collage.html":{}}}],["3000",{"_index":297,"title":{},"body":{"injectables/AmqpService.html":{},"injectables/DalleMiniService.html":{}}}],["300_000",{"_index":958,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["320",{"_index":295,"title":{},"body":{"injectables/AmqpService.html":{}}}],["3x3",{"_index":696,"title":{},"body":{"injectables/Collage.html":{}}}],["4",{"_index":90,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["400_000_000",{"_index":1454,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["4th",{"_index":1400,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":92,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["5.5.0",{"_index":1510,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1747,"title":{},"body":{"license.html":{}}}],["500",{"_index":636,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["512",{"_index":231,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["5becea4c",{"_index":1631,"title":{},"body":{"index.html":{}}}],["7.2.0",{"_index":1518,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1260,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["8.0.0",{"_index":1495,"title":{},"body":{"dependencies.html":{}}}],["8.2.8",{"_index":1494,"title":{},"body":{"dependencies.html":{}}}],["8.3.0",{"_index":1508,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":542,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/DalleMiniCommand.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["9.0.0",{"_index":1500,"title":{},"body":{"dependencies.html":{}}}],["_",{"_index":903,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["__include_in_help",{"_index":973,"title":{},"body":{"injectables/HelpService.html":{},"miscellaneous/variables.html":{}}}],["__include_in_help.length",{"_index":977,"title":{},"body":{"injectables/HelpService.html":{}}}],["__include_in_help[modularindex",{"_index":978,"title":{},"body":{"injectables/HelpService.html":{}}}],["_dbrecord",{"_index":1092,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["_id",{"_index":757,"title":{},"body":{"classes/CreateJobInput.html":{},"entities/Job.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["_messageattachment",{"_index":1093,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["above",{"_index":1915,"title":{},"body":{"license.html":{}}}],["accept",{"_index":165,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["acceptance",{"_index":1983,"title":{},"body":{"license.html":{}}}],["accepting",{"_index":1980,"title":{},"body":{"license.html":{}}}],["accessible",{"_index":1651,"title":{},"body":{"index.html":{}}}],["accessors",{"_index":1094,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{},"classes/WomboDreamStyle.html":{}}}],["acknowledgments",{"_index":1552,"title":{},"body":{"index.html":{}}}],["act",{"_index":1989,"title":{},"body":{"license.html":{}}}],["acting",{"_index":1728,"title":{},"body":{"license.html":{}}}],["action",{"_index":624,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["actionrow",{"_index":482,"title":{},"body":{"injectables/BotGateway.html":{}}}],["actiontype",{"_index":658,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["acts",{"_index":1271,"title":{},"body":{"injectables/WomboDreamService.html":{},"license.html":{}}}],["ada",{"_index":190,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["adam",{"_index":779,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["add",{"_index":1334,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["addcomponents",{"_index":941,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["added",{"_index":1352,"title":{},"body":{"changelog.html":{}}}],["addendum",{"_index":1903,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1904,"title":{"additional-documentation/commands.html":{}},"body":{"license.html":{}}}],["additions",{"_index":1793,"title":{},"body":{"license.html":{}}}],["advised",{"_index":1978,"title":{},"body":{"license.html":{}}}],["again",{"_index":1692,"title":{},"body":{"index.html":{}}}],["against",{"_index":1859,"title":{},"body":{"license.html":{}}}],["agree",{"_index":1992,"title":{},"body":{"license.html":{}}}],["agreed",{"_index":1935,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1920,"title":{},"body":{"license.html":{}}}],["ai",{"_index":29,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"entities/Job.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["ai.command",{"_index":208,"title":{},"body":{"injectables/AiStoryCommand.html":{}}}],["ai.command.ts",{"_index":1121,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.command.ts:39",{"_index":1123,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.command.ts:43",{"_index":1125,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.dto",{"_index":1129,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["ai.dto.ts",{"_index":1146,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["ai.dto.ts:29",{"_index":1147,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["ai.dto.ts:38",{"_index":1149,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["ai/open",{"_index":207,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["aiart",{"_index":552,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpService.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{}}}],["aiartcommand",{"_index":1,"title":{"injectables/AiArtCommand.html":{}},"body":{"injectables/AiArtCommand.html":{}}}],["aiartimagearray",{"_index":157,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{},"miscellaneous/typealiases.html":{}}}],["aiartloggerservice",{"_index":41,"title":{"injectables/AiArtLoggerService.html":{}},"body":{"injectables/AiArtLoggerService.html":{},"injectables/DalleMiniCommand.html":{},"modules/LoggerModule.html":{},"overview.html":{}}}],["aiartmodel",{"_index":129,"title":{"injectables/AiArtModel.html":{}},"body":{"injectables/AiArtModel.html":{},"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["aiartresponse",{"_index":158,"title":{},"body":{"injectables/AiArtModel.html":{},"miscellaneous/typealiases.html":{}}}],["aistorychoices",{"_index":173,"title":{"interfaces/AiStoryChoices.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistorycommand",{"_index":202,"title":{"injectables/AiStoryCommand.html":{}},"body":{"injectables/AiStoryCommand.html":{}}}],["aistorymodel",{"_index":211,"title":{"injectables/AiStoryModel.html":{}},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["aistoryrequest",{"_index":191,"title":{"interfaces/AiStoryRequest.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistoryresponse",{"_index":198,"title":{"interfaces/AiStoryResponse.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["aistoryservice",{"_index":240,"title":{"injectables/AiStoryService.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["aistoryservice.name",{"_index":260,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["aliases",{"_index":2033,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice",{"_index":1131,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["alleging",{"_index":1864,"title":{},"body":{"license.html":{}}}],["alone",{"_index":1855,"title":{},"body":{"license.html":{}}}],["along",{"_index":1894,"title":{},"body":{"license.html":{}}}],["alongside",{"_index":1902,"title":{},"body":{"license.html":{}}}],["already",{"_index":1610,"title":{},"body":{"index.html":{}}}],["always",{"_index":1480,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["amazing",{"_index":1674,"title":{},"body":{"index.html":{}}}],["amazingfeature",{"_index":1698,"title":{},"body":{"index.html":{}}}],["amqp",{"_index":286,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["amqp/amqp.service",{"_index":1164,"title":{},"body":{"modules/ServicesModule.html":{}}}],["amqp_url",{"_index":1585,"title":{},"body":{"index.html":{}}}],["amqpclient",{"_index":268,"title":{},"body":{"injectables/AmqpService.html":{}}}],["amqpmodule",{"_index":337,"title":{},"body":{"modules/AppModule.html":{}}}],["amqpmodule.forrootasync",{"_index":359,"title":{},"body":{"modules/AppModule.html":{}}}],["amqpservice",{"_index":261,"title":{"injectables/AmqpService.html":{}},"body":{"injectables/AmqpService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["and/or",{"_index":1986,"title":{},"body":{"license.html":{}}}],["annotations",{"_index":1783,"title":{},"body":{"license.html":{}}}],["another",{"_index":1619,"title":{},"body":{"index.html":{}}}],["anymore",{"_index":1433,"title":{},"body":{"changelog.html":{}}}],["apache",{"_index":1707,"title":{},"body":{"license.html":{},"properties.html":{}}}],["apache2.0",{"_index":1702,"title":{},"body":{"index.html":{}}}],["api",{"_index":505,"title":{},"body":{"injectables/CogView2Command.html":{},"index.html":{}}}],["api_url",{"_index":1224,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["apollo",{"_index":1502,"title":{},"body":{"dependencies.html":{}}}],["apollodriver",{"_index":338,"title":{},"body":{"modules/AppModule.html":{}}}],["apolloserver",{"_index":389,"title":{},"body":{"modules/AppModule.html":{}}}],["app",{"_index":1602,"title":{},"body":{"index.html":{}}}],["appear",{"_index":1899,"title":{},"body":{"license.html":{}}}],["appendix",{"_index":1776,"title":{},"body":{"license.html":{}}}],["applicable",{"_index":1933,"title":{},"body":{"license.html":{}}}],["application",{"_index":1567,"title":{},"body":{"index.html":{}}}],["application.commands",{"_index":1614,"title":{},"body":{"index.html":{}}}],["application/json",{"_index":166,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["applies",{"_index":1848,"title":{},"body":{"license.html":{}}}],["apply",{"_index":2001,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":313,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appreciated",{"_index":1679,"title":{},"body":{"index.html":{}}}],["appropriate",{"_index":2008,"title":{},"body":{"license.html":{}}}],["appropriateness",{"_index":1948,"title":{},"body":{"license.html":{}}}],["arcane",{"_index":890,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["archives",{"_index":2015,"title":{},"body":{"license.html":{}}}],["args",{"_index":1046,"title":{},"body":{"classes/JobResolver.html":{}}}],["arising",{"_index":1968,"title":{},"body":{"license.html":{}}}],["arr",{"_index":706,"title":{},"body":{"injectables/Collage.html":{}}}],["arr.map((image",{"_index":727,"title":{},"body":{"injectables/Collage.html":{}}}],["array",{"_index":142,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{}}}],["art",{"_index":30,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"modules/LoggerModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["art.command.ts",{"_index":8,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["art.git",{"_index":1577,"title":{},"body":{"index.html":{}}}],["art.log",{"_index":113,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["art.model",{"_index":803,"title":{},"body":{"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{}}}],["art.model.ts",{"_index":131,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:10",{"_index":153,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:30",{"_index":140,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.model.ts:7",{"_index":137,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["art.ts",{"_index":2036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["art/ai",{"_index":7,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/DalleMiniService.html":{},"modules/ModelsModule.html":{}}}],["art/cog",{"_index":494,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["art/dalle",{"_index":763,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{}}}],["art/main/.github/images/logo.png",{"_index":970,"title":{},"body":{"injectables/HelpService.html":{}}}],["art/wombo",{"_index":1182,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{}}}],["ascii",{"_index":2060,"title":{},"body":{"additional-documentation/commands.html":{}}}],["asserted",{"_index":1998,"title":{},"body":{"license.html":{}}}],["associated",{"_index":1952,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1950,"title":{},"body":{"license.html":{}}}],["async",{"_index":132,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["attach",{"_index":1618,"title":{},"body":{"index.html":{},"license.html":{}}}],["attached",{"_index":1774,"title":{},"body":{"license.html":{}}}],["attachment",{"_index":557,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/WomboDreamCommand.html":{}}}],["attachment(attachment",{"_index":1110,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["attribution",{"_index":1887,"title":{},"body":{"license.html":{}}}],["auth",{"_index":116,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["auth/auth",{"_index":1241,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["authenticate",{"_index":402,"title":{},"body":{"injectables/AuthModel.html":{}}}],["authentication",{"_index":398,"title":{},"body":{"injectables/AuthModel.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["authmodel",{"_index":394,"title":{"injectables/AuthModel.html":{}},"body":{"injectables/AuthModel.html":{},"modules/ModelsModule.html":{},"injectables/WomboDreamModel.html":{},"overview.html":{}}}],["author",{"_index":415,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"properties.html":{}}}],["authorization",{"_index":235,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/WomboDreamModel.html":{}}}],["authorized",{"_index":1724,"title":{},"body":{"license.html":{}}}],["authorship",{"_index":1768,"title":{},"body":{"license.html":{}}}],["auto",{"_index":369,"title":{},"body":{"modules/AppModule.html":{}}}],["autocomplete",{"_index":587,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["autocompletion",{"_index":1665,"title":{},"body":{"index.html":{}}}],["autodelete",{"_index":308,"title":{},"body":{"injectables/AmqpService.html":{}}}],["automated",{"_index":1357,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1395,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["available",{"_index":1770,"title":{},"body":{"license.html":{},"additional-documentation/commands.html":{}}}],["average_duration",{"_index":652,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["await",{"_index":161,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["axios",{"_index":156,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"dependencies.html":{}}}],["axiosresponse",{"_index":155,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{}}}],["b",{"_index":1633,"title":{},"body":{"index.html":{},"license.html":{}}}],["babage",{"_index":189,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["back",{"_index":1485,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["baroque",{"_index":866,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["base64",{"_index":143,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/Collage.html":{}}}],["based",{"_index":34,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["basis",{"_index":1937,"title":{},"body":{"license.html":{}}}],["bearer",{"_index":236,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/WomboDreamModel.html":{}}}],["before",{"_index":1396,"title":{},"body":{"changelog.html":{}}}],["behalf",{"_index":1798,"title":{},"body":{"license.html":{}}}],["being",{"_index":1393,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["bellow",{"_index":1597,"title":{},"body":{"index.html":{}}}],["below",{"_index":1777,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1751,"title":{},"body":{"license.html":{}}}],["best_of",{"_index":193,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["beta",{"_index":185,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["better",{"_index":1681,"title":{},"body":{"index.html":{}}}],["bind",{"_index":1603,"title":{},"body":{"index.html":{},"license.html":{}}}],["blacklight",{"_index":880,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["boilerplate",{"_index":2002,"title":{},"body":{"license.html":{}}}],["boolean",{"_index":648,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["bootstrap",{"_index":318,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["bot",{"_index":465,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["botgateway",{"_index":330,"title":{"injectables/BotGateway.html":{}},"body":{"modules/AppModule.html":{},"injectables/BotGateway.html":{},"modules/GatewayModule.html":{},"overview.html":{}}}],["bots",{"_index":1609,"title":{},"body":{"index.html":{}}}],["bottom",{"_index":2058,"title":{},"body":{"additional-documentation/commands.html":{}}}],["bounded",{"_index":391,"title":{},"body":{"modules/AppModule.html":{}}}],["brackets",{"_index":2005,"title":{},"body":{"license.html":{}}}],["branch",{"_index":1693,"title":{},"body":{"index.html":{}}}],["bricks",{"_index":1348,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2026,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2024,"title":{},"body":{"modules.html":{}}}],["buffer",{"_index":730,"title":{},"body":{"injectables/Collage.html":{}}}],["buffer.from(image",{"_index":490,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/Collage.html":{}}}],["bug",{"_index":1343,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":1437,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["building",{"_index":1642,"title":{},"body":{"index.html":{}}}],["built",{"_index":1546,"title":{},"body":{"index.html":{}}}],["bulb",{"_index":1412,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":1596,"title":{},"body":{"index.html":{}}}],["buttoninteraction",{"_index":953,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["buttons",{"_index":2057,"title":{},"body":{"additional-documentation/commands.html":{}}}],["c",{"_index":1884,"title":{},"body":{"license.html":{}}}],["cache",{"_index":390,"title":{},"body":{"modules/AppModule.html":{}}}],["cachetype",{"_index":933,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["call",{"_index":518,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["called",{"_index":555,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["canvas",{"_index":698,"title":{},"body":{"injectables/Collage.html":{},"changelog.html":{},"index.html":{}}}],["capital_abcd",{"_index":1410,"title":{},"body":{"changelog.html":{}}}],["capped",{"_index":1441,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["capping",{"_index":1468,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["card_file_box",{"_index":1337,"title":{},"body":{"changelog.html":{}}}],["carry",{"_index":1879,"title":{},"body":{"license.html":{}}}],["catch",{"_index":257,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["categorization",{"_index":1411,"title":{},"body":{"changelog.html":{}}}],["cause",{"_index":1738,"title":{},"body":{"license.html":{}}}],["changed",{"_index":1883,"title":{},"body":{"license.html":{}}}],["changelog",{"_index":1328,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1697,"title":{},"body":{"index.html":{}}}],["channel",{"_index":287,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.close('service",{"_index":293,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.queue(queuename",{"_index":291,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel.queuepurge(queuename",{"_index":292,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channel?.queue(queuename",{"_index":302,"title":{},"body":{"injectables/AmqpService.html":{}}}],["channels",{"_index":1391,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1967,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1831,"title":{},"body":{"license.html":{}}}],["checkartstatus",{"_index":1225,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["checkartstatus(id",{"_index":1231,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["checkout",{"_index":1694,"title":{},"body":{"index.html":{}}}],["chinese",{"_index":605,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["choice",{"_index":591,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["choice(model",{"_index":1157,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["choice(model)@param({name",{"_index":1148,"title":{},"body":{"classes/OpenAiCommandDto.html":{}}}],["choice(style",{"_index":607,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["choice(style)@param({name",{"_index":589,"title":{},"body":{"classes/CogView2CommandDto.html":{}}}],["choice(wombodreamstyle.styles",{"_index":1221,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["choice(wombodreamstyle.styles)@param({name",{"_index":1218,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["choices",{"_index":201,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["choices[0].text",{"_index":239,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["choose",{"_index":1981,"title":{},"body":{"license.html":{}}}],["choosing",{"_index":1136,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["claim",{"_index":1861,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1850,"title":{},"body":{"license.html":{}}}],["class",{"_index":38,"title":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/JobResolver.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{}}}],["classdesc",{"_index":534,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["classes",{"_index":582,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/JobResolver.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"classes/WomboDreamDto.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"overview.html":{}}}],["cleanup",{"_index":1419,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":469,"title":{},"body":{"injectables/BotGateway.html":{}}}],["click",{"_index":1571,"title":{},"body":{"index.html":{}}}],["clicking",{"_index":1606,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["client",{"_index":429,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["client's",{"_index":454,"title":{},"body":{"injectables/BotGateway.html":{}}}],["client.js",{"_index":1558,"title":{},"body":{"index.html":{}}}],["client_id",{"_index":1608,"title":{},"body":{"index.html":{}}}],["clientopts",{"_index":115,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["clone",{"_index":1574,"title":{},"body":{"index.html":{}}}],["closed",{"_index":1394,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":321,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":323,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":322,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_commandsmodule",{"_index":734,"title":{},"body":{"modules/CommandsModule.html":{}}}],["cluster_commandsmodule_imports",{"_index":735,"title":{},"body":{"modules/CommandsModule.html":{}}}],["cluster_entitymodule",{"_index":809,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_entitymodule_exports",{"_index":811,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_entitymodule_imports",{"_index":810,"title":{},"body":{"modules/EntityModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule",{"_index":816,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_exports",{"_index":819,"title":{},"body":{"modules/GatewayModule.html":{},"overview.html":{}}}],["cluster_gatewaymodule_imports",{"_index":818,"title":{},"body":{"modules/GatewayModule.html":{}}}],["cluster_gatewaymodule_providers",{"_index":817,"title":{},"body":{"modules/GatewayModule.html":{}}}],["cluster_jobmodule",{"_index":1011,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_jobmodule_exports",{"_index":1013,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_jobmodule_providers",{"_index":1012,"title":{},"body":{"modules/JobModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1087,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1089,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1088,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_modelsmodule",{"_index":1111,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_modelsmodule_exports",{"_index":1112,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_modelsmodule_imports",{"_index":1113,"title":{},"body":{"modules/ModelsModule.html":{}}}],["cluster_modelsmodule_providers",{"_index":1114,"title":{},"body":{"modules/ModelsModule.html":{},"overview.html":{}}}],["cluster_servicesmodule",{"_index":1158,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_exports",{"_index":1160,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_servicesmodule_imports",{"_index":1159,"title":{},"body":{"modules/ServicesModule.html":{}}}],["cluster_servicesmodule_providers",{"_index":1161,"title":{},"body":{"modules/ServicesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule",{"_index":1177,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule_exports",{"_index":1178,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["cluster_utilitiesmodule_providers",{"_index":1179,"title":{},"body":{"modules/UtilitiesModule.html":{},"overview.html":{}}}],["code",{"_index":1418,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["codecov",{"_index":1354,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["cog",{"_index":20,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/ModelsModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["cogview2",{"_index":510,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["cogview2command",{"_index":19,"title":{"injectables/CogView2Command.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{}}}],["cogview2commanddto",{"_index":513,"title":{"classes/CogView2CommandDto.html":{}},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{}}}],["cogview2model",{"_index":608,"title":{"injectables/CogView2Model.html":{}},"body":{"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"overview.html":{}}}],["cogview2response",{"_index":614,"title":{"classes/CogView2Response.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["cogview2response('complete",{"_index":637,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["cogview2service",{"_index":500,"title":{"injectables/CogView2Service.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["cogview2service.getart(\"adam",{"_index":688,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["cogview2service.getart(&quot;adam",{"_index":672,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["cogview2service.name",{"_index":694,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["collage",{"_index":541,"title":{"injectables/Collage.html":{}},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/UtilitiesModule.html":{},"index.html":{},"overview.html":{}}}],["collage.options",{"_index":725,"title":{},"body":{"injectables/Collage.html":{}}}],["collage/collage",{"_index":1181,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["collages",{"_index":1537,"title":{},"body":{"index.html":{}}}],["collection",{"_index":1444,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"additional-documentation/commands.html":{}}}],["collection.migration.ts",{"_index":1442,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:14",{"_index":1453,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:15",{"_index":1455,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:17",{"_index":1451,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:26",{"_index":1462,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collection.migration.ts:43",{"_index":1456,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["collectors/help.collector",{"_index":936,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["column",{"_index":1004,"title":{},"body":{"entities/Job.html":{}}}],["combination",{"_index":1856,"title":{},"body":{"license.html":{}}}],["comics",{"_index":600,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["command",{"_index":11,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["commandinteraction",{"_index":928,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["commands",{"_index":1406,"title":{"additional-documentation/commands.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["commands/art/cog",{"_index":1165,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/art/dalle",{"_index":1166,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/art/wombo",{"_index":1169,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/commands.module",{"_index":347,"title":{},"body":{"modules/AppModule.html":{}}}],["commands/help/help.service",{"_index":1167,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commands/story/ai",{"_index":1168,"title":{},"body":{"modules/ServicesModule.html":{}}}],["commandsmodule",{"_index":324,"title":{"modules/CommandsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules.html":{},"overview.html":{}}}],["comment",{"_index":2009,"title":{},"body":{"license.html":{}}}],["comments",{"_index":1414,"title":{},"body":{"changelog.html":{}}}],["commercial",{"_index":1976,"title":{},"body":{"license.html":{}}}],["commit",{"_index":1696,"title":{},"body":{"index.html":{}}}],["common",{"_index":1731,"title":{},"body":{"license.html":{}}}],["communication",{"_index":1802,"title":{},"body":{"license.html":{}}}],["community",{"_index":1672,"title":{},"body":{"index.html":{}}}],["compiled",{"_index":1764,"title":{},"body":{"license.html":{}}}],["complete",{"_index":633,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["completed",{"_index":914,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["compliance",{"_index":2017,"title":{},"body":{"license.html":{}}}],["complies",{"_index":1910,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1367,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":493,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["compose",{"_index":1624,"title":{},"body":{"index.html":{}}}],["compose.yml",{"_index":1409,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["computer",{"_index":1973,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1713,"title":{},"body":{"license.html":{}}}],["config",{"_index":388,"title":{},"body":{"modules/AppModule.html":{}}}],["config.yml",{"_index":1581,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["config/yamlconfigurationloader",{"_index":349,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":340,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{}}}],["configmodule.forroot",{"_index":358,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":60,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryModel.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/WomboDreamModel.html":{}}}],["configservice.get('amqp.url",{"_index":362,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('discord.token",{"_index":366,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('elastic.password",{"_index":120,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["configservice.get('elastic.uri",{"_index":122,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["configservice.get('elastic.username",{"_index":118,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["configservice.get('mongo.uri",{"_index":377,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('wombo",{"_index":1243,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["configuration",{"_index":1378,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["connection",{"_index":457,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["consequential",{"_index":1966,"title":{},"body":{"license.html":{}}}],["considered",{"_index":2074,"title":{},"body":{"additional-documentation/commands.html":{}}}],["consistent",{"_index":1988,"title":{},"body":{"license.html":{}}}],["console",{"_index":1650,"title":{},"body":{"index.html":{}}}],["conspicuously",{"_index":1814,"title":{},"body":{"license.html":{}}}],["const",{"_index":168,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1865,"title":{},"body":{"license.html":{}}}],["constructcollage",{"_index":701,"title":{},"body":{"injectables/Collage.html":{}}}],["constructcollage(arr",{"_index":703,"title":{},"body":{"injectables/Collage.html":{}}}],["constructor",{"_index":57,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["constructor(aistorymodel",{"_index":244,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["constructor(aistoryservice",{"_index":1122,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["constructor(amqpclient",{"_index":267,"title":{},"body":{"injectables/AmqpService.html":{}}}],["constructor(attachment",{"_index":1095,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["constructor(authmodel",{"_index":1229,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["constructor(cogview2model",{"_index":661,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["constructor(collage",{"_index":793,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["constructor(configservice",{"_index":59,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["constructor(discordclient",{"_index":428,"title":{},"body":{"injectables/BotGateway.html":{}}}],["constructor(helpservice",{"_index":924,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["constructor(httpservice",{"_index":135,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{}}}],["constructor(images",{"_index":1009,"title":{},"body":{"entities/Job.html":{}}}],["constructor(jobresolver",{"_index":499,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/WomboDreamCommand.html":{}}}],["constructor(jobservice",{"_index":1027,"title":{},"body":{"classes/JobResolver.html":{}}}],["constructor(logger",{"_index":767,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["constructor(message",{"_index":752,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["constructor(private",{"_index":103,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Model.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"classes/JobResolver.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamService.html":{}}}],["constructor(repository",{"_index":1064,"title":{},"body":{"injectables/JobService.html":{}}}],["constructor(servicename",{"_index":744,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["constructor(status",{"_index":642,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["constructor(value",{"_index":1294,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["constructor(wombodreammodel",{"_index":1266,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["constructs",{"_index":705,"title":{},"body":{"injectables/Collage.html":{}}}],["construed",{"_index":1905,"title":{},"body":{"license.html":{}}}],["contact",{"_index":1551,"title":{},"body":{"index.html":{}}}],["contained",{"_index":1892,"title":{},"body":{"license.html":{}}}],["container",{"_index":1184,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["containerized",{"_index":1387,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["containers",{"_index":1643,"title":{},"body":{"index.html":{}}}],["containing",{"_index":407,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/WomboDreamCommand.html":{}}}],["contains",{"_index":1611,"title":{},"body":{"index.html":{}}}],["content",{"_index":563,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"license.html":{}}}],["contents",{"_index":1544,"title":{},"body":{"index.html":{},"license.html":{}}}],["context",{"_index":522,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["continue",{"_index":1204,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"index.html":{}}}],["contract",{"_index":1741,"title":{},"body":{"license.html":{}}}],["contributing",{"_index":1549,"title":{},"body":{"index.html":{}}}],["contribution",{"_index":1792,"title":{},"body":{"license.html":{}}}],["contribution(s",{"_index":1854,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1670,"title":{},"body":{"index.html":{},"license.html":{}}}],["contributor",{"_index":1818,"title":{},"body":{"license.html":{}}}],["contributory",{"_index":1866,"title":{},"body":{"license.html":{}}}],["control",{"_index":1729,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1730,"title":{},"body":{"license.html":{}}}],["controllers",{"_index":393,"title":{},"body":{"modules/AppModule.html":{}}}],["conversions",{"_index":1765,"title":{},"body":{"license.html":{}}}],["converts",{"_index":709,"title":{},"body":{"injectables/Collage.html":{}}}],["copies",{"_index":1873,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1877,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1722,"title":{},"body":{"license.html":{}}}],["couldnotgenerateartexception",{"_index":249,"title":{"classes/CouldNotGenerateArtException.html":{}},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniService.html":{}}}],["couldnotgenerateartexception(dalleminiservice.name",{"_index":808,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["couldnotgeneratewomboartexception",{"_index":748,"title":{"classes/CouldNotGenerateWomboArtException.html":{}},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"injectables/WomboDreamService.html":{}}}],["counterclaim",{"_index":1862,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1355,"title":{},"body":{"changelog.html":{}}}],["create",{"_index":1021,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["create(@args('createjobinput",{"_index":1051,"title":{},"body":{"classes/JobResolver.html":{}}}],["create(createjobinput",{"_index":1029,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["createart",{"_index":1226,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["createart(prompt",{"_index":1233,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["createcappedjobscollection1661353047612",{"_index":1439,"title":{"classes/createCappedJobsCollection1661353047612.html":{}},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["createcappedjobscollection1661353047612.name",{"_index":1450,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["createcollage",{"_index":722,"title":{},"body":{"injectables/Collage.html":{}}}],["createcollage(options",{"_index":729,"title":{},"body":{"injectables/Collage.html":{}}}],["created",{"_index":200,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["created_at",{"_index":829,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["createdat",{"_index":916,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["createjobinput",{"_index":683,"title":{"classes/CreateJobInput.html":{}},"body":{"injectables/CogView2Service.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["creates",{"_index":1443,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["creating",{"_index":1467,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["credentials",{"_index":1653,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1860,"title":{},"body":{"license.html":{}}}],["curie",{"_index":188,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["currently",{"_index":2065,"title":{},"body":{"additional-documentation/commands.html":{}}}],["custom",{"_index":1369,"title":{},"body":{"changelog.html":{}}}],["customary",{"_index":1929,"title":{},"body":{"license.html":{}}}],["customid",{"_index":942,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["d",{"_index":1890,"title":{},"body":{"license.html":{}}}],["dali",{"_index":1195,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dall",{"_index":144,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["dalle",{"_index":16,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["dallemini",{"_index":2072,"title":{},"body":{"additional-documentation/commands.html":{}}}],["dalleminicommand",{"_index":15,"title":{"injectables/DalleMiniCommand.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{}}}],["dalleminicommanddto",{"_index":770,"title":{"classes/DalleMiniCommandDto.html":{}},"body":{"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{}}}],["dalleminimodel",{"_index":794,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["dalleminiservice",{"_index":768,"title":{"injectables/DalleMiniService.html":{}},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["dall·e",{"_index":1706,"title":{},"body":{"index.html":{}}}],["damages",{"_index":1963,"title":{},"body":{"license.html":{}}}],["dariuskralovic@protonmail.com",{"_index":1705,"title":{},"body":{"index.html":{}}}],["dark_fantasy",{"_index":860,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["data",{"_index":169,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"injectables/WomboDreamModel.html":{},"changelog.html":{}}}],["data.images",{"_index":171,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["data.status",{"_index":632,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["data.token",{"_index":1255,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["database",{"_index":480,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"entities/Job.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["date",{"_index":1870,"title":{},"body":{"license.html":{}}}],["date.now",{"_index":283,"title":{},"body":{"injectables/AmqpService.html":{}}}],["date.now().tostring",{"_index":711,"title":{},"body":{"injectables/Collage.html":{}}}],["davinci",{"_index":183,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["davinci_instruct_beta",{"_index":1151,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["dbrecord",{"_index":474,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["dbrecord(dbrecord",{"_index":1108,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["dbrecord.messageid",{"_index":566,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["dbrecord.messagelink",{"_index":568,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["debug",{"_index":52,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["debug(message",{"_index":65,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["debug?(message",{"_index":126,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["declarations",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["declare",{"_index":1176,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["decorators",{"_index":435,"title":{},"body":{"injectables/BotGateway.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["decorators/includeinhelp.decorator",{"_index":530,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["decorators/queued.decorator",{"_index":677,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["default",{"_index":83,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":1522,"title":{},"body":{"dependencies.html":{},"additional-documentation/commands.html":{}}}],["defend",{"_index":1994,"title":{},"body":{"license.html":{}}}],["defined",{"_index":61,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{}}}],["definewomboheaders",{"_index":1227,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["definewomboheaders(token",{"_index":1237,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["definition",{"_index":1733,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1716,"title":{},"body":{"license.html":{}}}],["delete",{"_index":1213,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["deliberate",{"_index":1959,"title":{},"body":{"license.html":{}}}],["deliverymode",{"_index":311,"title":{},"body":{"injectables/AmqpService.html":{}}}],["demo",{"_index":1540,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":315,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1587,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["deploying",{"_index":1595,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":1388,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["derivative",{"_index":1778,"title":{},"body":{"license.html":{}}}],["derived",{"_index":1780,"title":{},"body":{"license.html":{}}}],["describing",{"_index":671,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["description",{"_index":31,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["designated",{"_index":1816,"title":{},"body":{"license.html":{}}}],["determining",{"_index":1947,"title":{},"body":{"license.html":{}}}],["di",{"_index":663,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["different",{"_index":1909,"title":{},"body":{"license.html":{}}}],["direct",{"_index":1736,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1739,"title":{},"body":{"license.html":{}}}],["directly",{"_index":665,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["disable",{"_index":894,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["disabled",{"_index":473,"title":{},"body":{"injectables/BotGateway.html":{}}}],["disclaimer",{"_index":1931,"title":{},"body":{"license.html":{}}}],["discord",{"_index":12,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"additional-documentation/commands.html":{}}}],["discord.js",{"_index":346,"title":{},"body":{"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/Collage.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/WomboDreamCommand.html":{},"dependencies.html":{},"index.html":{}}}],["discord/discord.gateway",{"_index":821,"title":{},"body":{"modules/GatewayModule.html":{}}}],["discord_token",{"_index":1586,"title":{},"body":{"index.html":{}}}],["discordapierror",{"_index":448,"title":{},"body":{"injectables/BotGateway.html":{}}}],["discordclient",{"_index":433,"title":{},"body":{"injectables/BotGateway.html":{}}}],["discordclientoptions",{"_index":367,"title":{},"body":{"modules/AppModule.html":{}}}],["discordcommand",{"_index":931,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["discordmodule",{"_index":336,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{}}}],["discordmodule.forfeature",{"_index":741,"title":{},"body":{"modules/CommandsModule.html":{}}}],["discordmodule.forrootasync",{"_index":364,"title":{},"body":{"modules/AppModule.html":{}}}],["discordtransformedcommand",{"_index":525,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["discussing",{"_index":1811,"title":{},"body":{"license.html":{}}}],["display",{"_index":1837,"title":{},"body":{"license.html":{}}}],["display_freq",{"_index":907,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["displaying",{"_index":2054,"title":{},"body":{"additional-documentation/commands.html":{}}}],["dist/migrations/*.migration.js",{"_index":382,"title":{},"body":{"modules/AppModule.html":{}}}],["distribute",{"_index":1840,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1700,"title":{},"body":{"index.html":{},"license.html":{}}}],["distribution",{"_index":1715,"title":{},"body":{"license.html":{}}}],["dm",{"_index":1336,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docked",{"_index":1364,"title":{},"body":{"changelog.html":{}}}],["docker",{"_index":1342,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["docker/deploy/docker",{"_index":1645,"title":{},"body":{"index.html":{}}}],["dockerfile",{"_index":1408,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":1539,"title":{},"body":{"index.html":{}}}],["document",{"_index":1720,"title":{},"body":{"license.html":{}}}],["documentatin",{"_index":1365,"title":{},"body":{"changelog.html":{}}}],["documentation",{"_index":1669,"title":{},"body":{"index.html":{},"license.html":{}}}],["don't",{"_index":1688,"title":{},"body":{"index.html":{},"license.html":{}}}],["down",{"_index":1448,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["drawn",{"_index":551,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/WomboDreamCommand.html":{}}}],["dream",{"_index":399,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["dream.api.url",{"_index":1244,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.api.url')}/tasks",{"_index":1261,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.api.url')}/tasks/${id",{"_index":1249,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.command",{"_index":27,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["dream.command.ts",{"_index":1183,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.command.ts:47",{"_index":1185,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.command.ts:65",{"_index":1189,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.dto",{"_index":1191,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["dream.dto.ts",{"_index":1215,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["dream.dto.ts:21",{"_index":1217,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["dream.dto.ts:36",{"_index":1219,"title":{},"body":{"classes/WomboDreamDto.html":{}}}],["dream.googleauthurl",{"_index":419,"title":{},"body":{"injectables/AuthModel.html":{}}}],["dream.model",{"_index":1119,"title":{},"body":{"modules/ModelsModule.html":{},"injectables/WomboDreamService.html":{}}}],["dream.model.ts",{"_index":1223,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.model.ts:14",{"_index":1230,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.model.ts:24",{"_index":1235,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.model.ts:48",{"_index":1232,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.model.ts:62",{"_index":1238,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.model.ts:72",{"_index":1240,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["dream.service",{"_index":1170,"title":{},"body":{"modules/ServicesModule.html":{},"injectables/WomboDreamCommand.html":{}}}],["dream.service.ts",{"_index":1263,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["dream.service.ts:14",{"_index":1267,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["dream.service.ts:34",{"_index":1269,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["dream.ts",{"_index":823,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["dream.ts:27",{"_index":1316,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:31",{"_index":1318,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:32",{"_index":1319,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:33",{"_index":1307,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:34",{"_index":1315,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:35",{"_index":1300,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:36",{"_index":1321,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:37",{"_index":1303,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:38",{"_index":1308,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:39",{"_index":1311,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:40",{"_index":1298,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:41",{"_index":1305,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:42",{"_index":1301,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:43",{"_index":1296,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:44",{"_index":1299,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:45",{"_index":1314,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:46",{"_index":1322,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:47",{"_index":1309,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:48",{"_index":1313,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:49",{"_index":1304,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:50",{"_index":1297,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:51",{"_index":1310,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:52",{"_index":1302,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:53",{"_index":1317,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:54",{"_index":1312,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:55",{"_index":1295,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:58",{"_index":1320,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:59",{"_index":1306,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:64",{"_index":1325,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream.ts:69",{"_index":1323,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["dream/auth/auth",{"_index":396,"title":{},"body":{"injectables/AuthModel.html":{},"modules/ModelsModule.html":{}}}],["dream/wombo",{"_index":26,"title":{},"body":{"injectables/AiArtCommand.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["driver",{"_index":385,"title":{},"body":{"modules/AppModule.html":{}}}],["dsn",{"_index":1583,"title":{},"body":{"index.html":{}}}],["dto",{"_index":519,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{}}}],["dto.model",{"_index":1140,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["dto.prompt",{"_index":559,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["dto.style",{"_index":560,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["dto/create",{"_index":1048,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["dto/update",{"_index":1049,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["due",{"_index":1144,"title":{},"body":{"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["duration",{"_index":651,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["during",{"_index":1470,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["dynamic",{"_index":739,"title":{},"body":{"modules/CommandsModule.html":{},"dependencies.html":{}}}],["dyno",{"_index":1600,"title":{},"body":{"index.html":{}}}],["e",{"_index":145,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"changelog.html":{},"index.html":{}}}],["e.replace('data:image/png;base64",{"_index":657,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["e2%9c%89%ef%b8%8f",{"_index":459,"title":{},"body":{"injectables/BotGateway.html":{}}}],["each",{"_index":1825,"title":{},"body":{"license.html":{}}}],["easier",{"_index":1621,"title":{},"body":{"index.html":{},"license.html":{}}}],["ecsformat",{"_index":99,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["eden",{"_index":689,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{}}}],["eden&quot",{"_index":675,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["editorial",{"_index":1781,"title":{},"body":{"license.html":{}}}],["edward",{"_index":549,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["elaborations",{"_index":1784,"title":{},"body":{"license.html":{}}}],["elastic/ecs",{"_index":100,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"dependencies.html":{}}}],["elasticsearch",{"_index":97,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"dependencies.html":{}}}],["elasticsearchtransport",{"_index":96,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["electronic",{"_index":1799,"title":{},"body":{"license.html":{}}}],["embed",{"_index":979,"title":{},"body":{"injectables/HelpService.html":{},"additional-documentation/commands.html":{}}}],["embed.addfield('\\u200b",{"_index":992,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfield('usage",{"_index":994,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.addfields(parameterfields",{"_index":993,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setauthor",{"_index":980,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setdescription(help.description",{"_index":984,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.setfooter",{"_index":996,"title":{},"body":{"injectables/HelpService.html":{}}}],["embed.settitle(help.name",{"_index":983,"title":{},"body":{"injectables/HelpService.html":{}}}],["embedfield",{"_index":972,"title":{},"body":{"injectables/HelpService.html":{}}}],["embeds",{"_index":947,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["enclosed",{"_index":2004,"title":{},"body":{"license.html":{}}}],["encountered",{"_index":456,"title":{},"body":{"injectables/BotGateway.html":{}}}],["end",{"_index":2000,"title":{},"body":{"license.html":{}}}],["endpoint",{"_index":221,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["engine",{"_index":1366,"title":{},"body":{"changelog.html":{}}}],["enhancement",{"_index":1687,"title":{},"body":{"index.html":{}}}],["ensures",{"_index":289,"title":{},"body":{"injectables/AmqpService.html":{}}}],["enter",{"_index":1580,"title":{},"body":{"index.html":{}}}],["entities",{"_index":376,"title":{},"body":{"modules/AppModule.html":{},"entities/Job.html":{},"license.html":{},"overview.html":{}}}],["entities/job.entity",{"_index":1016,"title":{},"body":{"modules/JobModule.html":{},"injectables/JobService.html":{}}}],["entity",{"_index":509,"title":{"entities/Job.html":{}},"body":{"injectables/CogView2Command.html":{},"entities/Job.html":{},"license.html":{}}}],["entity/entity.module",{"_index":350,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/GatewayModule.html":{},"modules/ServicesModule.html":{}}}],["entity/job/dto/create",{"_index":684,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["entity/job/entities/job.entity",{"_index":352,"title":{},"body":{"modules/AppModule.html":{}}}],["entity/job/job.resolver",{"_index":452,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["entitymodule",{"_index":325,"title":{"modules/EntityModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["enum",{"_index":593,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1525,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1379,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["env:variable_name=value",{"_index":1640,"title":{},"body":{"index.html":{}}}],["env_name=value",{"_index":1637,"title":{},"body":{"index.html":{}}}],["envelope",{"_index":1333,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["enveloper",{"_index":471,"title":{},"body":{"injectables/BotGateway.html":{}}}],["environment",{"_index":1381,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ephemeral",{"_index":948,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["err",{"_index":258,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["err.message",{"_index":575,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["error",{"_index":53,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/BotGateway.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["error('this",{"_index":1483,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["error(message",{"_index":73,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["eslint",{"_index":893,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["eslint/no",{"_index":898,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["etching",{"_index":868,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["eve",{"_index":673,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{}}}],["even",{"_index":1620,"title":{},"body":{"index.html":{},"license.html":{}}}],["event",{"_index":1955,"title":{},"body":{"license.html":{}}}],["example",{"_index":537,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"index.html":{},"license.html":{}}}],["examples",{"_index":670,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"index.html":{}}}],["except",{"_index":1842,"title":{},"body":{"license.html":{}}}],["exception",{"_index":574,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["exceptions/couldnotgenerateartexception",{"_index":250,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["exceptions/couldnotgeneratewomboartexception",{"_index":1279,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["exceptions/googleauthenticationtoolkiterror",{"_index":413,"title":{},"body":{"injectables/AuthModel.html":{}}}],["excluding",{"_index":1813,"title":{},"body":{"license.html":{}}}],["exclusive",{"_index":1830,"title":{},"body":{"license.html":{}}}],["executed",{"_index":1921,"title":{},"body":{"license.html":{}}}],["executing",{"_index":1465,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["execution",{"_index":521,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["executioncontext",{"_index":514,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.channel.send",{"_index":562,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.deferreply",{"_index":556,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.deletereply",{"_index":561,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["executioncontext.interaction.followup",{"_index":576,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["exercise",{"_index":1953,"title":{},"body":{"license.html":{}}}],["exercising",{"_index":1753,"title":{},"body":{"license.html":{}}}],["exist",{"_index":1445,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["expiresin",{"_index":824,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["explicitly",{"_index":1913,"title":{},"body":{"license.html":{}}}],["exploration",{"_index":1340,"title":{},"body":{"changelog.html":{}}}],["explore",{"_index":1538,"title":{},"body":{"index.html":{}}}],["export",{"_index":37,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["exports",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["express",{"_index":1499,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":743,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/UpdateJobInput.html":{}}}],["external",{"_index":1657,"title":{},"body":{"index.html":{}}}],["extracted",{"_index":149,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["f",{"_index":1644,"title":{},"body":{"index.html":{}}}],["fail",{"_index":1604,"title":{},"body":{"index.html":{}}}],["failed",{"_index":573,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["fails",{"_index":751,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"changelog.html":{}}}],["failure",{"_index":1974,"title":{},"body":{"license.html":{}}}],["false",{"_index":309,"title":{},"body":{"injectables/AmqpService.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamModel.html":{}}}],["fantasy_art",{"_index":850,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["fatal",{"_index":85,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["feature",{"_index":472,"title":{},"body":{"injectables/BotGateway.html":{},"index.html":{}}}],["feature/amazingfeature",{"_index":1695,"title":{},"body":{"index.html":{}}}],["fee",{"_index":1982,"title":{},"body":{"license.html":{}}}],["festive",{"_index":864,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["fields",{"_index":2003,"title":{},"body":{"license.html":{}}}],["fifty",{"_index":1745,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{},"license.html":{}}}],["filed",{"_index":1871,"title":{},"body":{"license.html":{}}}],["filename",{"_index":111,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["files",{"_index":488,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["final",{"_index":1187,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["finalresponse",{"_index":1200,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["finalresponse.photo_url_list[finalresponse.photo_url_list.length",{"_index":1212,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["find",{"_index":1556,"title":{},"body":{"index.html":{}}}],["findall",{"_index":1022,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findallpromise",{"_index":1053,"title":{},"body":{"classes/JobResolver.html":{}}}],["findbymessageid",{"_index":1063,"title":{},"body":{"injectables/JobService.html":{}}}],["findbymessageid(messageid",{"_index":1070,"title":{},"body":{"injectables/JobService.html":{}}}],["findone",{"_index":1023,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findone(@args('id",{"_index":1055,"title":{},"body":{"classes/JobResolver.html":{}}}],["findone(id",{"_index":1034,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["findonebymessageid",{"_index":1024,"title":{},"body":{"classes/JobResolver.html":{}}}],["findonebymessageid(messageid",{"_index":1037,"title":{},"body":{"classes/JobResolver.html":{}}}],["finished",{"_index":571,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamService.html":{}}}],["finishreason",{"_index":177,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["fitness",{"_index":1943,"title":{},"body":{"license.html":{}}}],["fix",{"_index":1344,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1363,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":599,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["fn_index",{"_index":621,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["follow",{"_index":1634,"title":{},"body":{"index.html":{}}}],["following",{"_index":1875,"title":{},"body":{"license.html":{}}}],["forget",{"_index":1689,"title":{},"body":{"index.html":{}}}],["fork",{"_index":1682,"title":{},"body":{"index.html":{}}}],["form",{"_index":497,"title":{},"body":{"injectables/CogView2Command.html":{},"license.html":{}}}],["format",{"_index":101,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryModel.html":{},"dependencies.html":{},"index.html":{},"license.html":{}}}],["forms",{"_index":2061,"title":{},"body":{"additional-documentation/commands.html":{}}}],["found",{"_index":479,"title":{},"body":{"injectables/BotGateway.html":{}}}],["frame_photo",{"_index":565,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["framework",{"_index":1350,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":1568,"title":{},"body":{"index.html":{},"license.html":{}}}],["freedom",{"_index":784,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["frequency",{"_index":1234,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["frequency_penalty",{"_index":196,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["frequent",{"_index":1434,"title":{},"body":{"changelog.html":{}}}],["frowning",{"_index":577,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["full",{"_index":520,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["fully",{"_index":1386,"title":{},"body":{"changelog.html":{}}}],["functions",{"_index":1270,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/WomboDreamService.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":1566,"title":{},"body":{"index.html":{}}}],["garden",{"_index":674,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{}}}],["gateway/discord/discord.gateway",{"_index":353,"title":{},"body":{"modules/AppModule.html":{}}}],["gatewaymodule",{"_index":815,"title":{"modules/GatewayModule.html":{}},"body":{"modules/GatewayModule.html":{},"modules.html":{},"overview.html":{}}}],["general",{"_index":1417,"title":{},"body":{"changelog.html":{}}}],["generartes",{"_index":1661,"title":{},"body":{"index.html":{}}}],["generate",{"_index":32,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"additional-documentation/commands.html":{}}}],["generateart",{"_index":1265,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["generateart(prompt",{"_index":1268,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["generated",{"_index":147,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Service.html":{},"license.html":{}}}],["generated_photo_keys",{"_index":830,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["generates",{"_index":540,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"index.html":{}}}],["generating",{"_index":496,"title":{},"body":{"injectables/CogView2Command.html":{},"changelog.html":{},"index.html":{},"properties.html":{}}}],["generation",{"_index":400,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["generator",{"_index":1272,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["generators",{"_index":2070,"title":{},"body":{"additional-documentation/commands.html":{}}}],["getart",{"_index":243,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["getart(headline",{"_index":246,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["getart(prompt",{"_index":666,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["getasattachment",{"_index":702,"title":{},"body":{"injectables/Collage.html":{}}}],["getasattachment(name",{"_index":707,"title":{},"body":{"injectables/Collage.html":{}}}],["getattachment",{"_index":1103,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["getauthentication",{"_index":403,"title":{},"body":{"injectables/AuthModel.html":{}}}],["getbyname",{"_index":1293,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["getbyname(name",{"_index":904,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["getdbrecord",{"_index":1099,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["getenvvarvalue",{"_index":2038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getenvvarvalue(obj[key",{"_index":2051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gethelpatindex",{"_index":965,"title":{},"body":{"injectables/HelpService.html":{}}}],["gethelpatindex(index",{"_index":966,"title":{},"body":{"injectables/HelpService.html":{}}}],["getimagearray",{"_index":133,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["getimagearray(prompt",{"_index":138,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Model.html":{}}}],["getresponse",{"_index":134,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["getresponse(prompt",{"_index":152,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["gets",{"_index":406,"title":{},"body":{"injectables/AuthModel.html":{}}}],["getstory",{"_index":213,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["getstory(prompt",{"_index":217,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["getstyles",{"_index":1324,"title":{},"body":{"classes/WomboDreamStyle.html":{}}}],["gettaskid",{"_index":1228,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["gettaskid(token",{"_index":1239,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["getting",{"_index":1326,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"index.html":{}}}],["ghibli",{"_index":884,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["git",{"_index":1576,"title":{},"body":{"index.html":{}}}],["github",{"_index":669,"title":{},"body":{"injectables/CogView2Service.html":{},"changelog.html":{}}}],["github:karafra/nestjs",{"_index":1490,"title":{},"body":{"dependencies.html":{}}}],["give",{"_index":1554,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["given",{"_index":543,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["goal_net",{"_index":1360,"title":{},"body":{"changelog.html":{}}}],["goodwill",{"_index":1971,"title":{},"body":{"license.html":{}}}],["google",{"_index":919,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["googleapiauthresponse",{"_index":410,"title":{"interfaces/GoogleApiAuthResponse.html":{}},"body":{"injectables/AuthModel.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["googleauthenticationtoolkiterror",{"_index":412,"title":{"classes/GoogleAuthenticationToolkitError.html":{}},"body":{"injectables/AuthModel.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["googleauthenticationtoolkiterror(err.message",{"_index":421,"title":{},"body":{"injectables/AuthModel.html":{}}}],["governing",{"_index":2022,"title":{},"body":{"license.html":{}}}],["graceful",{"_index":1397,"title":{},"body":{"changelog.html":{}}}],["grant",{"_index":1823,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1754,"title":{},"body":{"license.html":{}}}],["granting",{"_index":1725,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1827,"title":{},"body":{"license.html":{}}}],["graphql",{"_index":387,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["graphqlmodule",{"_index":341,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot",{"_index":384,"title":{},"body":{"modules/AppModule.html":{}}}],["greatly",{"_index":1678,"title":{},"body":{"index.html":{}}}],["grid",{"_index":697,"title":{},"body":{"injectables/Collage.html":{}}}],["grossly",{"_index":1960,"title":{},"body":{"license.html":{}}}],["group",{"_index":1667,"title":{},"body":{"index.html":{}}}],["groups",{"_index":1660,"title":{},"body":{"index.html":{}}}],["guest",{"_index":1654,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1635,"title":{},"body":{"index.html":{}}}],["guild",{"_index":1430,"title":{},"body":{"changelog.html":{}}}],["handler",{"_index":498,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/HelpCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["handler(dto",{"_index":512,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["handler(interaction",{"_index":927,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["handles",{"_index":517,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["handling",{"_index":502,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{}}}],["harmless",{"_index":1996,"title":{},"body":{"license.html":{}}}],["hash",{"_index":629,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["hd",{"_index":854,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["headers",{"_index":164,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{},"injectables/WomboDreamModel.html":{}}}],["headline",{"_index":226,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["height",{"_index":714,"title":{},"body":{"injectables/Collage.html":{}}}],["help",{"_index":937,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["help.parameters.foreach((parameter",{"_index":986,"title":{},"body":{"injectables/HelpService.html":{}}}],["help.usage",{"_index":995,"title":{},"body":{"injectables/HelpService.html":{}}}],["helpcommand",{"_index":922,"title":{"injectables/HelpCommand.html":{}},"body":{"injectables/HelpCommand.html":{}}}],["helpinteractioncollector",{"_index":935,"title":{"injectables/HelpInteractionCollector.html":{}},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["helpservice",{"_index":925,"title":{"injectables/HelpService.html":{}},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"modules/ServicesModule.html":{},"overview.html":{}}}],["here",{"_index":1557,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["hereby",{"_index":1826,"title":{},"body":{"license.html":{}}}],["herein",{"_index":1917,"title":{},"body":{"license.html":{}}}],["heroku",{"_index":1593,"title":{},"body":{"index.html":{}}}],["high",{"_index":913,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["hold",{"_index":1995,"title":{},"body":{"license.html":{}}}],["holding",{"_index":2059,"title":{},"body":{"additional-documentation/commands.html":{}}}],["homer",{"_index":546,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["hourglass",{"_index":1206,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["http://bf.dallemini.ai/generate",{"_index":163,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["http://www.apache.org/licenses",{"_index":1711,"title":{},"body":{"license.html":{}}}],["http://www.apache.org/licenses/license",{"_index":2019,"title":{},"body":{"license.html":{}}}],["httpmodule",{"_index":1117,"title":{},"body":{"modules/ModelsModule.html":{}}}],["https://api.openai.com/v1/completions",{"_index":234,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["https://app.wombo.art",{"_index":1257,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["https://discord.com/api/oauth2/authorize?client_id={client_id}&permissions=34816&scope=applications.commands%20bot",{"_index":1607,"title":{},"body":{"index.html":{}}}],["https://discord.com/developers",{"_index":1570,"title":{},"body":{"index.html":{}}}],["https://github.com/karafra/ai",{"_index":982,"title":{},"body":{"injectables/HelpService.html":{},"index.html":{}}}],["https://github.com/thudm/cogview2",{"_index":687,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["https://hf.space/embed/thudm/cogview2/api/queue/push",{"_index":620,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["https://hf.space/embed/thudm/cogview2/api/queue/status",{"_index":631,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["https://huggingface.co/spaces/dalle",{"_index":777,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["https://raw.githubusercontent.com/karafra/ai",{"_index":969,"title":{},"body":{"injectables/HelpService.html":{}}}],["httpservice",{"_index":136,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"injectables/WomboDreamModel.html":{}}}],["icogview2data",{"_index":643,"title":{"interfaces/ICogView2Data.html":{}},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2request",{"_index":615,"title":{"interfaces/ICogView2Request.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2response",{"_index":616,"title":{"interfaces/ICogView2Response.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icogview2responseacknowledged",{"_index":617,"title":{"interfaces/ICogView2ResponseAcknowledged.html":{}},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["icommandhelp",{"_index":974,"title":{"interfaces/ICommandHelp.html":{}},"body":{"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["icommandparameter",{"_index":1000,"title":{"interfaces/ICommandParameter.html":{}},"body":{"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["iconurl",{"_index":964,"title":{},"body":{"injectables/HelpService.html":{}}}],["id",{"_index":199,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["identification",{"_index":2014,"title":{},"body":{"license.html":{}}}],["identifying",{"_index":2007,"title":{},"body":{"license.html":{}}}],["idtoken",{"_index":825,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["ii",{"_index":1743,"title":{},"body":{"license.html":{}}}],["iii",{"_index":1750,"title":{},"body":{"license.html":{}}}],["image",{"_index":150,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["imageheight",{"_index":717,"title":{},"body":{"injectables/Collage.html":{}}}],["images",{"_index":33,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"entities/Job.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["images.map",{"_index":489,"title":{},"body":{"injectables/BotGateway.html":{}}}],["imagewidth",{"_index":715,"title":{},"body":{"injectables/Collage.html":{}}}],["implements",{"_index":102,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2Response.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["implied",{"_index":1939,"title":{},"body":{"license.html":{}}}],["import",{"_index":9,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"license.html":{}}}],["important",{"_index":1598,"title":{},"body":{"index.html":{}}}],["imports",{"_index":335,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{}}}],["improve",{"_index":1413,"title":{},"body":{"changelog.html":{}}}],["improving",{"_index":1812,"title":{},"body":{"license.html":{}}}],["inability",{"_index":1969,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1965,"title":{},"body":{"license.html":{}}}],["include",{"_index":36,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["included",{"_index":1773,"title":{},"body":{"license.html":{}}}],["includeinhelp",{"_index":529,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"miscellaneous/functions.html":{}}}],["includeinhelp(help",{"_index":1533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["includes",{"_index":1891,"title":{},"body":{"license.html":{}}}],["including",{"_index":1758,"title":{},"body":{"license.html":{}}}],["inclusion",{"_index":1796,"title":{},"body":{"license.html":{}}}],["incorporated",{"_index":1821,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1997,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1993,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1984,"title":{},"body":{"license.html":{}}}],["index",{"_index":44,"title":{"index.html":{}},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicated",{"_index":1771,"title":{},"body":{"license.html":{}}}],["indirect",{"_index":1737,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1752,"title":{},"body":{"license.html":{}}}],["info",{"_index":3,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["information",{"_index":1703,"title":{},"body":{"index.html":{},"license.html":{}}}],["informational",{"_index":1900,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1853,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1867,"title":{},"body":{"license.html":{}}}],["ini",{"_index":780,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["inject",{"_index":363,"title":{},"body":{"modules/AppModule.html":{}}}],["injectable",{"_index":0,"title":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["injectables",{"_index":2,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"overview.html":{}}}],["injectamqpclient",{"_index":284,"title":{},"body":{"injectables/AmqpService.html":{}}}],["injectdiscordclient",{"_index":446,"title":{},"body":{"injectables/BotGateway.html":{}}}],["injectdynamicproviders",{"_index":737,"title":{},"body":{"modules/CommandsModule.html":{}}}],["injectdynamicproviders('dist/**/*.command.js",{"_index":740,"title":{},"body":{"modules/CommandsModule.html":{}}}],["injectrepository",{"_index":1076,"title":{},"body":{"injectables/JobService.html":{}}}],["injectrepository(job",{"_index":1077,"title":{},"body":{"injectables/JobService.html":{}}}],["inline",{"_index":991,"title":{},"body":{"injectables/HelpService.html":{}}}],["input_image",{"_index":908,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["input_spec",{"_index":831,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["inside",{"_index":2055,"title":{},"body":{"additional-documentation/commands.html":{}}}],["inspire",{"_index":1677,"title":{},"body":{"index.html":{}}}],["install",{"_index":1563,"title":{},"body":{"index.html":{}}}],["installation",{"_index":1548,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":463,"title":{},"body":{"injectables/BotGateway.html":{}}}],["instead",{"_index":2062,"title":{},"body":{"additional-documentation/commands.html":{}}}],["institute",{"_index":1857,"title":{},"body":{"license.html":{}}}],["instruct",{"_index":184,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["instruct2",{"_index":2064,"title":{},"body":{"additional-documentation/commands.html":{}}}],["intended",{"_index":664,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["intentionally",{"_index":1794,"title":{},"body":{"license.html":{}}}],["intents",{"_index":345,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guild_message_reactions",{"_index":372,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guild_messages",{"_index":371,"title":{},"body":{"modules/AppModule.html":{}}}],["intents.flags.guilds",{"_index":370,"title":{},"body":{"modules/AppModule.html":{}}}],["interaction",{"_index":930,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["interaction.customid",{"_index":959,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interaction.deferreply",{"_index":1138,"title":{},"body":{"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["interaction.editreply",{"_index":1205,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["interaction.followup",{"_index":1143,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.followup(story",{"_index":1141,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["interaction.reply",{"_index":946,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["interaction.update",{"_index":962,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interactioneventcollector",{"_index":956,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["interactions",{"_index":765,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["interface",{"_index":172,"title":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["interfaces",{"_index":174,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{},"overview.html":{}}}],["internal",{"_index":1145,"title":{},"body":{"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["intervals",{"_index":1276,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["invite",{"_index":1605,"title":{},"body":{"index.html":{}}}],["invoking",{"_index":1197,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["irrevocable",{"_index":1833,"title":{},"body":{"license.html":{}}}],["iscompleted",{"_index":641,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["isometric",{"_index":603,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["issue",{"_index":1685,"title":{},"body":{"index.html":{},"license.html":{}}}],["item",{"_index":275,"title":{},"body":{"injectables/AmqpService.html":{}}}],["iwombodreamstyle",{"_index":838,"title":{"interfaces/IWomboDreamStyle.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["january",{"_index":1709,"title":{},"body":{"license.html":{}}}],["jest",{"_index":1559,"title":{},"body":{"index.html":{}}}],["job",{"_index":351,"title":{"entities/Job.html":{}},"body":{"modules/AppModule.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["job.input",{"_index":685,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["job.input.ts",{"_index":756,"title":{},"body":{"classes/CreateJobInput.html":{},"classes/UpdateJobInput.html":{}}}],["job.input.ts:2",{"_index":759,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:3",{"_index":762,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:4",{"_index":761,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["job.input.ts:5",{"_index":760,"title":{},"body":{"classes/CreateJobInput.html":{},"classes/UpdateJobInput.html":{}}}],["job.resolver",{"_index":1017,"title":{},"body":{"modules/JobModule.html":{}}}],["job.service",{"_index":1018,"title":{},"body":{"modules/JobModule.html":{},"classes/JobResolver.html":{}}}],["job/job.module",{"_index":814,"title":{},"body":{"modules/EntityModule.html":{}}}],["jobmodule",{"_index":812,"title":{"modules/JobModule.html":{}},"body":{"modules/EntityModule.html":{},"modules/JobModule.html":{},"modules.html":{},"overview.html":{}}}],["jobresolver",{"_index":431,"title":{"classes/JobResolver.html":{}},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/WomboDreamCommand.html":{},"overview.html":{}}}],["jobs",{"_index":508,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["jobservice",{"_index":1014,"title":{"injectables/JobService.html":{}},"body":{"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"overview.html":{}}}],["jobsresolver",{"_index":430,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/DalleMiniCommand.html":{}}}],["jobstatusresponse",{"_index":1280,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["jobstatusresponse.id",{"_index":1289,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["jobstatusresponse.state",{"_index":1284,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["jobstatusresponse.token",{"_index":1290,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["joining",{"_index":1429,"title":{},"body":{"changelog.html":{}}}],["json.parse(message?.bodytostring",{"_index":306,"title":{},"body":{"injectables/AmqpService.html":{}}}],["july",{"_index":1331,"title":{},"body":{"changelog.html":{}}}],["june",{"_index":1403,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":902,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["karafra",{"_index":416,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"license.html":{},"properties.html":{}}}],["karafra/nestjs",{"_index":285,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["karafro",{"_index":1704,"title":{},"body":{"index.html":{}}}],["key",{"_index":1569,"title":{},"body":{"index.html":{}}}],["kind",{"_index":826,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["label",{"_index":944,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["language",{"_index":2021,"title":{},"body":{"license.html":{}}}],["lastdispatch",{"_index":263,"title":{},"body":{"injectables/AmqpService.html":{}}}],["lately",{"_index":2078,"title":{},"body":{"additional-documentation/commands.html":{}}}],["later",{"_index":581,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["law",{"_index":1934,"title":{},"body":{"license.html":{}}}],["lawsuit",{"_index":1863,"title":{},"body":{"license.html":{}}}],["leading",{"_index":782,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["learn",{"_index":1676,"title":{},"body":{"index.html":{}}}],["legal",{"_index":1726,"title":{},"body":{"license.html":{}}}],["legend",{"_index":316,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["level",{"_index":69,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["levels",{"_index":106,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["liability",{"_index":1954,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1962,"title":{},"body":{"license.html":{}}}],["liberty",{"_index":781,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["library",{"_index":1436,"title":{},"body":{"changelog.html":{}}}],["licensable",{"_index":1851,"title":{},"body":{"license.html":{}}}],["license",{"_index":1550,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":2016,"title":{},"body":{"license.html":{}}}],["licenses",{"_index":1868,"title":{},"body":{"license.html":{}}}],["licensor",{"_index":1721,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1940,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":2023,"title":{},"body":{"license.html":{}}}],["limited",{"_index":1759,"title":{},"body":{"license.html":{}}}],["line",{"_index":896,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["link",{"_index":686,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"index.html":{},"license.html":{}}}],["linux",{"_index":1638,"title":{},"body":{"index.html":{}}}],["list",{"_index":1560,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["lists",{"_index":1806,"title":{},"body":{"license.html":{}}}],["literal",{"_index":1222,"title":{},"body":{"interfaces/WomboDreamInputSpec.html":{},"miscellaneous/typealiases.html":{}}}],["litigation",{"_index":1858,"title":{},"body":{"license.html":{}}}],["load",{"_index":392,"title":{},"body":{"modules/AppModule.html":{}}}],["loads",{"_index":1428,"title":{},"body":{"changelog.html":{}}}],["localid",{"_index":827,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["log",{"_index":54,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["log(message",{"_index":75,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger",{"_index":48,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["logger(aistoryservice.name",{"_index":248,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["logger(authmodel.name",{"_index":409,"title":{},"body":{"injectables/AuthModel.html":{}}}],["logger(botgateway.name",{"_index":445,"title":{},"body":{"injectables/BotGateway.html":{}}}],["logger(cogview2command.name",{"_index":523,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["logger(cogview2service.name",{"_index":676,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["logger(dalleminiservice.name",{"_index":802,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["logger(openaicommand.name",{"_index":1126,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["logger(wombodreamcommand.name",{"_index":1190,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["logger(wombodreamservice.name",{"_index":1277,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["logger.service",{"_index":776,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"modules/LoggerModule.html":{}}}],["logger.service.ts",{"_index":43,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:18",{"_index":62,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:52",{"_index":76,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:59",{"_index":74,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:66",{"_index":80,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:73",{"_index":67,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:80",{"_index":78,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logger.service.ts:9",{"_index":93,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["loggermodule",{"_index":326,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":94,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logging",{"_index":378,"title":{},"body":{"modules/AppModule.html":{},"changelog.html":{}}}],["logging/ai",{"_index":775,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["logging/logger.module",{"_index":357,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ModelsModule.html":{}}}],["login",{"_index":1652,"title":{},"body":{"index.html":{}}}],["loglevels",{"_index":49,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["logprobs",{"_index":178,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["logs/ai",{"_index":112,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["looks",{"_index":1627,"title":{},"body":{"index.html":{}}}],["loss",{"_index":1970,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1977,"title":{},"body":{"license.html":{}}}],["loud_sound",{"_index":1415,"title":{},"body":{"changelog.html":{}}}],["low",{"_index":911,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["m",{"_index":1150,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["made",{"_index":1769,"title":{},"body":{"license.html":{}}}],["mailing",{"_index":1805,"title":{},"body":{"license.html":{}}}],["main",{"_index":2066,"title":{},"body":{"additional-documentation/commands.html":{}}}],["mainbody",{"_index":597,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["make",{"_index":1671,"title":{},"body":{"index.html":{},"license.html":{}}}],["making",{"_index":1756,"title":{},"body":{"license.html":{}}}],["malfunction",{"_index":1975,"title":{},"body":{"license.html":{}}}],["managed",{"_index":1809,"title":{},"body":{"license.html":{}}}],["management",{"_index":1649,"title":{},"body":{"index.html":{},"license.html":{}}}],["map",{"_index":841,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["map(array.from(this.styles",{"_index":901,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["marked",{"_index":1815,"title":{},"body":{"license.html":{}}}],["marks",{"_index":1926,"title":{},"body":{"license.html":{}}}],["mars",{"_index":1196,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["matching",{"_index":40,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/commands.html":{}}}],["math.floor(math.random",{"_index":622,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["math.random().tostring(36).slice(2",{"_index":627,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["max_tokens",{"_index":195,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["mean",{"_index":1718,"title":{},"body":{"license.html":{},"additional-documentation/commands.html":{}}}],["means",{"_index":1734,"title":{},"body":{"license.html":{}}}],["mechanical",{"_index":1761,"title":{},"body":{"license.html":{}}}],["media",{"_index":1766,"title":{},"body":{"license.html":{}}}],["mediastore_id",{"_index":909,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["medium",{"_index":912,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["meet",{"_index":1874,"title":{},"body":{"license.html":{}}}],["memo",{"_index":1371,"title":{},"body":{"changelog.html":{}}}],["mention",{"_index":1424,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1942,"title":{},"body":{"license.html":{}}}],["merely",{"_index":1790,"title":{},"body":{"license.html":{}}}],["message",{"_index":70,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AmqpService.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{}}}],["message.id",{"_index":567,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["message.url",{"_index":569,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["messageactionrow",{"_index":449,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["messageactionrow().addcomponents",{"_index":483,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messageattachment",{"_index":450,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/Collage.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["messageattachment(buffer",{"_index":732,"title":{},"body":{"injectables/Collage.html":{}}}],["messageattachmentwithdbrecord",{"_index":680,"title":{"classes/MessageAttachmentWithDbRecord.html":{}},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["messageattachmentwithdbrecord(attachment",{"_index":693,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["messageattachmentwithdbrecord.attachment",{"_index":787,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["messagebutton",{"_index":451,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/HelpCommand.html":{}}}],["messageembed",{"_index":968,"title":{},"body":{"injectables/HelpService.html":{}}}],["messageid",{"_index":758,"title":{},"body":{"classes/CreateJobInput.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/WomboDreamCommand.html":{}}}],["messagelink",{"_index":481,"title":{},"body":{"injectables/BotGateway.html":{},"classes/CreateJobInput.html":{},"entities/Job.html":{},"injectables/WomboDreamCommand.html":{}}}],["messagereaction",{"_index":439,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.emoji.identifier",{"_index":458,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.author.id",{"_index":460,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.guild.name",{"_index":467,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.message.id",{"_index":476,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messagereaction.remove",{"_index":462,"title":{},"body":{"injectables/BotGateway.html":{}}}],["messages",{"_index":1617,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":1513,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1592,"title":{},"body":{"index.html":{}}}],["methods",{"_index":50,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["migration",{"_index":1457,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["migrationinterface",{"_index":1446,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["migrations",{"_index":381,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationsrun",{"_index":383,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationstablename",{"_index":380,"title":{},"body":{"modules/AppModule.html":{}}}],["mini",{"_index":146,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["mini.command",{"_index":18,"title":{},"body":{"injectables/AiArtCommand.html":{}}}],["mini.command.ts",{"_index":764,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.command.ts:45",{"_index":769,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.command.ts:52",{"_index":771,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.dto",{"_index":774,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["mini.dto.ts",{"_index":789,"title":{},"body":{"classes/DalleMiniCommandDto.html":{}}}],["mini.dto.ts:10",{"_index":790,"title":{},"body":{"classes/DalleMiniCommandDto.html":{}}}],["mini.service",{"_index":773,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"modules/ServicesModule.html":{}}}],["mini.service.ts",{"_index":792,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini.service.ts:20",{"_index":795,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini.service.ts:40",{"_index":798,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["mini/dalle",{"_index":17,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/ServicesModule.html":{}}}],["minimal",{"_index":1612,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1524,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":511,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["model",{"_index":182,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["model.model",{"_index":1118,"title":{},"body":{"modules/ModelsModule.html":{},"injectables/WomboDreamModel.html":{}}}],["model.model.ts",{"_index":397,"title":{},"body":{"injectables/AuthModel.html":{}}}],["model.model.ts:16",{"_index":404,"title":{},"body":{"injectables/AuthModel.html":{}}}],["model.model.ts:28",{"_index":405,"title":{},"body":{"injectables/AuthModel.html":{}}}],["model.model.ts:47",{"_index":408,"title":{},"body":{"injectables/AuthModel.html":{}}}],["models",{"_index":2031,"title":{},"body":{"properties.html":{},"additional-documentation/commands.html":{}}}],["models/ai",{"_index":251,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/DalleMiniService.html":{}}}],["models/cog",{"_index":678,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["models/models.module",{"_index":354,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["models/wombo",{"_index":1278,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["modelsmodule",{"_index":327,"title":{"modules/ModelsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["modifications",{"_index":1757,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1878,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1901,"title":{},"body":{"license.html":{}}}],["modifying",{"_index":1906,"title":{},"body":{"license.html":{}}}],["modularindex",{"_index":976,"title":{},"body":{"injectables/HelpService.html":{}}}],["module",{"_index":312,"title":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["modules",{"_index":314,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":1338,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mongodb",{"_index":374,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["mongoqueryrunner",{"_index":1461,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["mongorepository",{"_index":1065,"title":{},"body":{"injectables/JobService.html":{}}}],["monocle_face",{"_index":1339,"title":{},"body":{"changelog.html":{}}}],["monster",{"_index":805,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["monster&quot",{"_index":801,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["moonwalker",{"_index":878,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["more",{"_index":223,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/CogView2Service.html":{},"index.html":{},"license.html":{}}}],["munch",{"_index":550,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["mutation",{"_index":1047,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('createjob",{"_index":1030,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('removejob",{"_index":1040,"title":{},"body":{"classes/JobResolver.html":{}}}],["mutation('updatejob",{"_index":1044,"title":{},"body":{"classes/JobResolver.html":{}}}],["mystical",{"_index":862,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["n\\n",{"_index":564,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{}}}],["name",{"_index":28,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{}}}],["names",{"_index":1925,"title":{},"body":{"license.html":{}}}],["name}.png",{"_index":733,"title":{},"body":{"injectables/Collage.html":{}}}],["necessarily",{"_index":1852,"title":{},"body":{"license.html":{}}}],["necktie",{"_index":1368,"title":{},"body":{"changelog.html":{}}}],["need",{"_index":1431,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["needed",{"_index":1648,"title":{},"body":{"index.html":{}}}],["negligence",{"_index":1958,"title":{},"body":{"license.html":{}}}],["negligent",{"_index":1961,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":738,"title":{},"body":{"modules/CommandsModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["nestjs/apollo",{"_index":339,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/axios",{"_index":154,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"modules/ModelsModule.html":{},"injectables/WomboDreamModel.html":{},"dependencies.html":{}}}],["nestjs/cli",{"_index":1493,"title":{},"body":{"dependencies.html":{}}}],["nestjs/common",{"_index":14,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":98,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryModel.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"modules/CommandsModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"injectables/WomboDreamModel.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":13,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"modules/AppModule.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"modules/CommandsModule.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"dependencies.html":{}}}],["nestjs/graphql",{"_index":342,"title":{},"body":{"modules/AppModule.html":{},"classes/JobResolver.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1173,"title":{},"body":{"classes/UpdateJobInput.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1498,"title":{},"body":{"dependencies.html":{}}}],["nestjs/typeorm",{"_index":344,"title":{},"body":{"modules/AppModule.html":{},"modules/JobModule.html":{},"injectables/JobService.html":{},"dependencies.html":{}}}],["network",{"_index":1656,"title":{},"body":{"index.html":{}}}],["new",{"_index":109,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["next",{"_index":895,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["nft",{"_index":1193,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["nfts",{"_index":2071,"title":{},"body":{"additional-documentation/commands.html":{}}}],["no_style",{"_index":846,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["noack",{"_index":304,"title":{},"body":{"injectables/AmqpService.html":{}}}],["node",{"_index":121,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["non",{"_index":1214,"title":{},"body":{"injectables/WomboDreamCommand.html":{},"license.html":{}}}],["none",{"_index":596,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["normally",{"_index":1898,"title":{},"body":{"license.html":{}}}],["nothing",{"_index":1916,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1772,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1881,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1914,"title":{},"body":{"license.html":{}}}],["now",{"_index":1392,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1578,"title":{},"body":{"index.html":{}}}],["npm@latest",{"_index":1565,"title":{},"body":{"index.html":{}}}],["npmnpm",{"_index":1564,"title":{},"body":{"index.html":{}}}],["null",{"_index":181,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/BotGateway.html":{},"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":180,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AmqpService.html":{},"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["obj",{"_index":2047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj[key",{"_index":2050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":82,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["object.keys(obj).foreach((key",{"_index":2048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["objectidcolumn",{"_index":1002,"title":{},"body":{"entities/Job.html":{}}}],["obligations",{"_index":1985,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":2018,"title":{},"body":{"license.html":{}}}],["offer",{"_index":1845,"title":{},"body":{"license.html":{}}}],["offers",{"_index":1664,"title":{},"body":{"index.html":{}}}],["oil",{"_index":601,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["on('collect",{"_index":954,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["on('error",{"_index":436,"title":{},"body":{"injectables/BotGateway.html":{}}}],["on('messagereactionadd",{"_index":441,"title":{},"body":{"injectables/BotGateway.html":{}}}],["once",{"_index":447,"title":{},"body":{"injectables/BotGateway.html":{}}}],["once('ready",{"_index":443,"title":{},"body":{"injectables/BotGateway.html":{}}}],["oncollect",{"_index":950,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["oncollect(interaction",{"_index":952,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["one",{"_index":1220,"title":{},"body":{"classes/WomboDreamDto.html":{},"index.html":{},"license.html":{}}}],["onerror",{"_index":425,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onerror(error",{"_index":434,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onmessagereactionadd",{"_index":426,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onmessagereactionadd(messagereaction",{"_index":438,"title":{},"body":{"injectables/BotGateway.html":{}}}],["onready",{"_index":427,"title":{},"body":{"injectables/BotGateway.html":{}}}],["open",{"_index":206,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["openai",{"_index":220,"title":{},"body":{"injectables/AiStoryModel.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["openai.token",{"_index":238,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["openaicommand",{"_index":205,"title":{"injectables/OpenAiCommand.html":{}},"body":{"injectables/AiStoryCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["openaicommanddto",{"_index":1124,"title":{"classes/OpenAiCommandDto.html":{}},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{}}}],["openaimodel",{"_index":1135,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["operation",{"_index":1082,"title":{},"body":{"injectables/JobService.html":{}}}],["operation.value",{"_index":1085,"title":{},"body":{"injectables/JobService.html":{}}}],["optional",{"_index":51,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["optionalparams",{"_index":66,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["options",{"_index":700,"title":{},"body":{"injectables/Collage.html":{}}}],["options.sources",{"_index":726,"title":{},"body":{"injectables/Collage.html":{}}}],["order",{"_index":2067,"title":{},"body":{"additional-documentation/commands.html":{}}}],["origin",{"_index":1256,"title":{},"body":{"injectables/WomboDreamModel.html":{},"index.html":{},"license.html":{}}}],["original",{"_index":1787,"title":{},"body":{"license.html":{}}}],["os",{"_index":1639,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1742,"title":{},"body":{"license.html":{}}}],["out",{"_index":333,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"license.html":{},"overview.html":{}}}],["output",{"_index":1427,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["outside",{"_index":1658,"title":{},"body":{"index.html":{}}}],["outstanding",{"_index":1748,"title":{},"body":{"license.html":{}}}],["overflow",{"_index":1469,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["overview",{"_index":2027,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1723,"title":{},"body":{"license.html":{}}}],["ownership",{"_index":1744,"title":{},"body":{"license.html":{}}}],["package",{"_index":1486,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["packages",{"_index":1579,"title":{},"body":{"index.html":{}}}],["page",{"_index":997,"title":{"additional-documentation/commands.html":{}},"body":{"injectables/HelpService.html":{},"license.html":{}}}],["param",{"_index":167,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AmqpService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/variables.html":{}}}],["param({name",{"_index":584,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["parameter.description",{"_index":990,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameter.name",{"_index":988,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameter.optional",{"_index":989,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameterfields",{"_index":985,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameterfields.push",{"_index":987,"title":{},"body":{"injectables/HelpService.html":{}}}],["parameters",{"_index":63,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["paramspattern",{"_index":2044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paramtype",{"_index":592,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["paramtype.string",{"_index":606,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/WomboDreamDto.html":{}}}],["parentheses",{"_index":1591,"title":{},"body":{"index.html":{}}}],["parses",{"_index":219,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["part",{"_index":1889,"title":{},"body":{"license.html":{},"additional-documentation/commands.html":{}}}],["partialtype",{"_index":1172,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["partialtype(createjobinput",{"_index":1175,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["particular",{"_index":1944,"title":{},"body":{"license.html":{}}}],["party",{"_index":1897,"title":{},"body":{"license.html":{}}}],["password",{"_index":119,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"index.html":{}}}],["pastel",{"_index":856,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["patent",{"_index":1841,"title":{},"body":{"license.html":{}}}],["payload",{"_index":526,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["pending",{"_index":649,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["people",{"_index":783,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["percent",{"_index":1746,"title":{},"body":{"license.html":{}}}],["perform",{"_index":1838,"title":{},"body":{"license.html":{}}}],["permission",{"_index":468,"title":{},"body":{"injectables/BotGateway.html":{},"license.html":{}}}],["permissions",{"_index":1615,"title":{},"body":{"index.html":{},"license.html":{}}}],["perpetual",{"_index":1828,"title":{},"body":{"license.html":{}}}],["pertain",{"_index":1888,"title":{},"body":{"license.html":{}}}],["photo",{"_index":598,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["photo_url_list",{"_index":832,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["place",{"_index":1675,"title":{},"body":{"index.html":{}}}],["places",{"_index":1893,"title":{},"body":{"license.html":{}}}],["please",{"_index":580,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"index.html":{}}}],["png",{"_index":492,"title":{},"body":{"injectables/BotGateway.html":{}}}],["policy",{"_index":1374,"title":{},"body":{"changelog.html":{}}}],["popfromqueue",{"_index":264,"title":{},"body":{"injectables/AmqpService.html":{}}}],["popfromqueue(queuename",{"_index":270,"title":{},"body":{"injectables/AmqpService.html":{}}}],["port",{"_index":1588,"title":{},"body":{"index.html":{}}}],["possibility",{"_index":1979,"title":{},"body":{"license.html":{}}}],["power",{"_index":1735,"title":{},"body":{"license.html":{}}}],["predict",{"_index":625,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["preferred",{"_index":1755,"title":{},"body":{"license.html":{}}}],["premium",{"_index":917,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["prepare",{"_index":1835,"title":{},"body":{"license.html":{}}}],["prerequisites",{"_index":1547,"title":{},"body":{"index.html":{}}}],["presence_penalty",{"_index":197,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["present",{"_index":290,"title":{},"body":{"injectables/AmqpService.html":{}}}],["previous",{"_index":943,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["primary",{"_index":945,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["printed",{"_index":2013,"title":{},"body":{"license.html":{}}}],["privacy",{"_index":1373,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":46,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["process",{"_index":578,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"changelog.html":{}}}],["process.env[param[1",{"_index":2046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processing",{"_index":807,"title":{},"body":{"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{}}}],["produced",{"_index":1425,"title":{},"body":{"changelog.html":{}}}],["product",{"_index":1927,"title":{},"body":{"license.html":{}}}],["project",{"_index":1545,"title":{},"body":{"index.html":{}}}],["prominent",{"_index":1880,"title":{},"body":{"license.html":{}}}],["promise",{"_index":148,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamModel.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["promise((f",{"_index":634,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["promise((res",{"_index":1285,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["promise((resolve",{"_index":300,"title":{},"body":{"injectables/AmqpService.html":{}}}],["prompt",{"_index":35,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"additional-documentation/commands.html":{}}}],["properties",{"_index":45,"title":{"properties.html":{}},"body":{"injectables/AiArtLoggerService.html":{},"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"properties.html":{}}}],["provenance",{"_index":874,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["provide",{"_index":1908,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1775,"title":{},"body":{"license.html":{}}}],["providers",{"_index":319,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"dependencies.html":{},"overview.html":{}}}],["provides",{"_index":1936,"title":{},"body":{"license.html":{}}}],["psychedelic",{"_index":882,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["psychic",{"_index":858,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["public",{"_index":58,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["publicly",{"_index":1836,"title":{},"body":{"license.html":{}}}],["publishtoqueue",{"_index":265,"title":{},"body":{"injectables/AmqpService.html":{}}}],["publishtoqueue(queuename",{"_index":274,"title":{},"body":{"injectables/AmqpService.html":{}}}],["pull",{"_index":1683,"title":{},"body":{"index.html":{}}}],["purge",{"_index":282,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purgedqueues",{"_index":2040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["purgequeue",{"_index":266,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purgequeue(queuename",{"_index":277,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purges",{"_index":280,"title":{},"body":{"injectables/AmqpService.html":{}}}],["purpose",{"_index":1810,"title":{},"body":{"license.html":{}}}],["purposes",{"_index":1732,"title":{},"body":{"license.html":{}}}],["push",{"_index":1699,"title":{},"body":{"index.html":{}}}],["query",{"_index":579,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"classes/JobResolver.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["query('job",{"_index":1035,"title":{},"body":{"classes/JobResolver.html":{}}}],["query('jobs",{"_index":1032,"title":{},"body":{"classes/JobResolver.html":{}}}],["queryrunner",{"_index":1463,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["queryrunner.databaseconnection.db().createcollection('job",{"_index":1476,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["queue",{"_index":281,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue?.get",{"_index":303,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue?.publish(json.stringify",{"_index":310,"title":{},"body":{"injectables/AmqpService.html":{}}}],["queue_position",{"_index":653,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["queued",{"_index":650,"title":{},"body":{"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["queued(cogview2service.name",{"_index":667,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["queued(dalleminiservice.name",{"_index":797,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["queued(queuename",{"_index":1536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["queueing",{"_index":1401,"title":{},"body":{"changelog.html":{}}}],["queuename",{"_index":273,"title":{},"body":{"injectables/AmqpService.html":{},"miscellaneous/functions.html":{}}}],["rabbit",{"_index":1389,"title":{},"body":{"changelog.html":{}}}],["rabbitmq",{"_index":1390,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["radioactive",{"_index":888,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["random",{"_index":210,"title":{},"body":{"injectables/AiStoryCommand.html":{}}}],["raw",{"_index":141,"title":{},"body":{"injectables/AiArtModel.html":{}}}],["react",{"_index":1663,"title":{},"body":{"index.html":{}}}],["reaction",{"_index":1335,"title":{},"body":{"changelog.html":{}}}],["reactions",{"_index":470,"title":{},"body":{"injectables/BotGateway.html":{}}}],["readability",{"_index":1435,"title":{},"body":{"changelog.html":{}}}],["readable",{"_index":224,"title":{},"body":{"injectables/AiStoryModel.html":{},"license.html":{}}}],["readonly",{"_index":47,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["reason",{"_index":1999,"title":{},"body":{"license.html":{}}}],["reasonable",{"_index":1928,"title":{},"body":{"license.html":{}}}],["received",{"_index":1819,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1876,"title":{},"body":{"license.html":{}}}],["recommend",{"_index":2011,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":1594,"title":{},"body":{"index.html":{}}}],["record",{"_index":478,"title":{},"body":{"injectables/BotGateway.html":{}}}],["redistributing",{"_index":1949,"title":{},"body":{"license.html":{}}}],["redistribution",{"_index":1872,"title":{},"body":{"license.html":{}}}],["refer",{"_index":799,"title":{},"body":{"injectables/DalleMiniService.html":{},"index.html":{}}}],["referer",{"_index":1258,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["reflect",{"_index":1512,"title":{},"body":{"dependencies.html":{}}}],["regarding",{"_index":1922,"title":{},"body":{"license.html":{}}}],["related",{"_index":766,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"additional-documentation/commands.html":{}}}],["remain",{"_index":1788,"title":{},"body":{"license.html":{}}}],["removal",{"_index":2075,"title":{},"body":{"additional-documentation/commands.html":{}}}],["remove",{"_index":1025,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["remove(@args('id",{"_index":1060,"title":{},"body":{"classes/JobResolver.html":{}}}],["remove(id",{"_index":1039,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{}}}],["replaced",{"_index":2006,"title":{},"body":{"license.html":{}}}],["replaceenvvars",{"_index":2041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replaceenvvars(obj[key",{"_index":2052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reply",{"_index":1199,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["reply.id",{"_index":1211,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["reply.url",{"_index":1210,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["repo",{"_index":1575,"title":{},"body":{"index.html":{}}}],["report",{"_index":1541,"title":{},"body":{"index.html":{}}}],["reporter",{"_index":1356,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1067,"title":{},"body":{"injectables/JobService.html":{}}}],["represent",{"_index":1785,"title":{},"body":{"license.html":{}}}],["representatives",{"_index":1804,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1834,"title":{},"body":{"license.html":{}}}],["reproducing",{"_index":1930,"title":{},"body":{"license.html":{}}}],["reproduction",{"_index":1714,"title":{},"body":{"license.html":{}}}],["request",{"_index":1542,"title":{},"body":{"index.html":{}}}],["requestbody",{"_index":229,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["requests",{"_index":504,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamService.html":{}}}],["required",{"_index":586,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/DalleMiniCommandDto.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{},"index.html":{},"license.html":{}}}],["requires",{"_index":1662,"title":{},"body":{"index.html":{}}}],["reset",{"_index":332,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}],["resolver",{"_index":507,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/JobResolver.html":{},"injectables/WomboDreamCommand.html":{}}}],["resolver('job",{"_index":1050,"title":{},"body":{"classes/JobResolver.html":{}}}],["response",{"_index":222,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AuthModel.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{}}}],["response.data",{"_index":423,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamModel.html":{}}}],["response.data.data).getimagearray",{"_index":638,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["response.data.hash",{"_index":630,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["response.data.token",{"_index":1252,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["response.photo_url_list.length",{"_index":1203,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["response.photo_url_list[response.photo_url_list.length",{"_index":1207,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["responsibility",{"_index":1991,"title":{},"body":{"license.html":{}}}],["responsible",{"_index":1946,"title":{},"body":{"license.html":{}}}],["restart",{"_index":1432,"title":{},"body":{"changelog.html":{}}}],["result",{"_index":833,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/JobService.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["resulting",{"_index":1760,"title":{},"body":{"license.html":{}}}],["results",{"_index":39,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"changelog.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/commands.html":{}}}],["retain",{"_index":1885,"title":{},"body":{"license.html":{}}}],["retuning",{"_index":1273,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["return",{"_index":160,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":71,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{}}}],["reverted",{"_index":1459,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["revisions",{"_index":1782,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1987,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1515,"title":{},"body":{"dependencies.html":{}}}],["risks",{"_index":1951,"title":{},"body":{"license.html":{}}}],["robot",{"_index":1404,"title":{},"body":{"changelog.html":{}}}],["rose_gold",{"_index":876,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["row",{"_index":940,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["royalty",{"_index":1832,"title":{},"body":{"license.html":{}}}],["runner",{"_index":1464,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["runtime",{"_index":1471,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["rxjs",{"_index":1517,"title":{},"body":{"dependencies.html":{}}}],["s_dali",{"_index":870,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["salvatore",{"_index":1194,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["same",{"_index":2012,"title":{},"body":{"license.html":{}}}],["save",{"_index":1573,"title":{},"body":{"index.html":{}}}],["saving",{"_index":1186,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["scopes",{"_index":1613,"title":{},"body":{"index.html":{}}}],["scoping",{"_index":1346,"title":{},"body":{"changelog.html":{}}}],["scream",{"_index":548,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["scrolled",{"_index":2056,"title":{},"body":{"additional-documentation/commands.html":{}}}],["section",{"_index":1844,"title":{},"body":{"license.html":{}}}],["sections",{"_index":1719,"title":{},"body":{"license.html":{}}}],["sed",{"_index":796,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["see",{"_index":506,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"license.html":{}}}],["seen",{"_index":2073,"title":{},"body":{"additional-documentation/commands.html":{}}}],["selectedmodel",{"_index":228,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["sell",{"_index":1846,"title":{},"body":{"license.html":{}}}],["send",{"_index":1616,"title":{},"body":{"index.html":{}}}],["sendable",{"_index":710,"title":{},"body":{"injectables/Collage.html":{}}}],["sent",{"_index":1803,"title":{},"body":{"license.html":{}}}],["sentry",{"_index":1582,"title":{},"body":{"index.html":{}}}],["sentry.io",{"_index":1362,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["sentry_dsn",{"_index":1584,"title":{},"body":{"index.html":{}}}],["separable",{"_index":1789,"title":{},"body":{"license.html":{}}}],["separate",{"_index":1919,"title":{},"body":{"license.html":{}}}],["separated",{"_index":1659,"title":{},"body":{"index.html":{}}}],["server",{"_index":466,"title":{},"body":{"injectables/BotGateway.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":401,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"license.html":{}}}],["servicename",{"_index":746,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["services",{"_index":1647,"title":{},"body":{"index.html":{}}}],["services/commands/art/cog",{"_index":531,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["services/commands/art/dalle",{"_index":772,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["services/commands/art/wombo",{"_index":1192,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["services/commands/help/help.service",{"_index":934,"title":{},"body":{"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{}}}],["services/commands/story/ai",{"_index":1127,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["services/services.module",{"_index":355,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{}}}],["servicesmodule",{"_index":328,"title":{"modules/ServicesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/ServicesModule.html":{},"modules.html":{},"overview.html":{}}}],["session_hash",{"_index":626,"title":{},"body":{"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["set",{"_index":1084,"title":{},"body":{"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"index.html":{}}}],["setattachment(attachment",{"_index":1105,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["setdbrecord(dbrecord",{"_index":1101,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["setlabel('jump",{"_index":486,"title":{},"body":{"injectables/BotGateway.html":{}}}],["setstyle('link",{"_index":484,"title":{},"body":{"injectables/BotGateway.html":{}}}],["settimeout(f",{"_index":635,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/DalleMiniService.html":{}}}],["settimeout(res",{"_index":1286,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["settimeout(resolve",{"_index":301,"title":{},"body":{"injectables/AmqpService.html":{}}}],["settlin/collage",{"_index":723,"title":{},"body":{"injectables/Collage.html":{},"dependencies.html":{}}}],["seturl(messagelink",{"_index":485,"title":{},"body":{"injectables/BotGateway.html":{}}}],["shall",{"_index":1717,"title":{},"body":{"license.html":{}}}],["shards",{"_index":368,"title":{},"body":{"modules/AppModule.html":{}}}],["shares",{"_index":1749,"title":{},"body":{"license.html":{}}}],["short",{"_index":1134,"title":{},"body":{"injectables/OpenAiCommand.html":{},"additional-documentation/commands.html":{}}}],["showing",{"_index":1405,"title":{},"body":{"changelog.html":{}}}],["shutdown",{"_index":1398,"title":{},"body":{"changelog.html":{}}}],["similar",{"_index":1628,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["simple",{"_index":1553,"title":{},"body":{"index.html":{},"properties.html":{}}}],["simply",{"_index":1684,"title":{},"body":{"index.html":{}}}],["simpson",{"_index":547,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["size",{"_index":1447,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["sketch",{"_index":602,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["softly",{"_index":279,"title":{},"body":{"injectables/AmqpService.html":{}}}],["software",{"_index":1562,"title":{},"body":{"index.html":{},"license.html":{}}}],["sole",{"_index":1990,"title":{},"body":{"license.html":{}}}],["solely",{"_index":1945,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"modules/CommandsModule.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"modules/JobModule.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"modules/LoggerModule.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"modules/ServicesModule.html":{},"classes/UpdateJobInput.html":{},"modules/UtilitiesModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{},"license.html":{}}}],["sources",{"_index":720,"title":{},"body":{"injectables/Collage.html":{}}}],["spacing",{"_index":718,"title":{},"body":{"injectables/Collage.html":{}}}],["special",{"_index":1964,"title":{},"body":{"license.html":{}}}],["specific",{"_index":2020,"title":{},"body":{"license.html":{}}}],["src/.../ai",{"_index":2035,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../cog",{"_index":1527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../cogview2.ts",{"_index":2034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../includeinhelp.decorator.ts",{"_index":1529,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1528,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../open",{"_index":1526,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/.../queued.decorator.ts",{"_index":1530,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../wombo",{"_index":2037,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../yamlconfigurationloader.ts",{"_index":2039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.module.ts",{"_index":334,"title":{},"body":{"modules/AppModule.html":{}}}],["src/commands/ai",{"_index":6,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AiStoryCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["src/commands/commands.module.ts",{"_index":736,"title":{},"body":{"modules/CommandsModule.html":{}}}],["src/commands/help/collectors/help.collector.ts",{"_index":949,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/collectors/help.collector.ts:13",{"_index":955,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/collectors/help.collector.ts:9",{"_index":951,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["src/commands/help/help.command.ts",{"_index":923,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/commands/help/help.command.ts:18",{"_index":926,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/commands/help/help.command.ts:21",{"_index":929,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["src/config/yamlconfigurationloader.ts",{"_index":2043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/decorators/includeinhelp.decorator.ts",{"_index":1532,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/decorators/queued.decorator.ts",{"_index":1535,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/entity/entity.module.ts",{"_index":813,"title":{},"body":{"modules/EntityModule.html":{}}}],["src/entity/job/dto/create",{"_index":755,"title":{},"body":{"classes/CreateJobInput.html":{}}}],["src/entity/job/dto/update",{"_index":1171,"title":{},"body":{"classes/UpdateJobInput.html":{}}}],["src/entity/job/entities/job.entity.ts",{"_index":1001,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:12",{"_index":1006,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:15",{"_index":1007,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:6",{"_index":1003,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/entities/job.entity.ts:9",{"_index":1005,"title":{},"body":{"entities/Job.html":{}}}],["src/entity/job/job.module.ts",{"_index":1015,"title":{},"body":{"modules/JobModule.html":{}}}],["src/entity/job/job.resolver.ts",{"_index":1020,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:11",{"_index":1031,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:16",{"_index":1033,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:22",{"_index":1036,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:27",{"_index":1038,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:32",{"_index":1045,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:37",{"_index":1041,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.resolver.ts:7",{"_index":1028,"title":{},"body":{"classes/JobResolver.html":{}}}],["src/entity/job/job.service.ts",{"_index":1062,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:15",{"_index":1068,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:19",{"_index":1069,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:23",{"_index":1071,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:31",{"_index":1072,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:40",{"_index":1075,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:55",{"_index":1073,"title":{},"body":{"injectables/JobService.html":{}}}],["src/entity/job/job.service.ts:9",{"_index":1066,"title":{},"body":{"injectables/JobService.html":{}}}],["src/exceptions/couldnotgenerateartexception.ts",{"_index":742,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["src/exceptions/couldnotgenerateartexception.ts:1",{"_index":745,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["src/exceptions/couldnotgeneratewomboartexception.ts",{"_index":749,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{}}}],["src/exceptions/couldnotgeneratewomboartexception.ts:7",{"_index":753,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{}}}],["src/exceptions/googleauthenticationtoolkiterror.ts",{"_index":918,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["src/exceptions/googleauthenticationtoolkiterror.ts:7",{"_index":921,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["src/gateway/discord/discord.gateway.ts",{"_index":424,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:16",{"_index":432,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:25",{"_index":444,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:28",{"_index":437,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/discord/discord.gateway.ts:35",{"_index":442,"title":{},"body":{"injectables/BotGateway.html":{}}}],["src/gateway/gateway.module.ts",{"_index":820,"title":{},"body":{"modules/GatewayModule.html":{}}}],["src/logging/ai",{"_index":42,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["src/logging/logger.module.ts",{"_index":1090,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/main.ts",{"_index":1531,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/migrations/1661353047612",{"_index":1440,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["src/models/ai",{"_index":130,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{}}}],["src/models/cog",{"_index":609,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["src/models/models.module.ts",{"_index":1116,"title":{},"body":{"modules/ModelsModule.html":{}}}],["src/models/wombo",{"_index":395,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamModel.html":{}}}],["src/services/amqp/amqp.service.ts",{"_index":262,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:16",{"_index":278,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:24",{"_index":271,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:38",{"_index":276,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/amqp/amqp.service.ts:6",{"_index":269,"title":{},"body":{"injectables/AmqpService.html":{}}}],["src/services/commands/art/cog",{"_index":659,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["src/services/commands/art/dalle",{"_index":791,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["src/services/commands/art/wombo",{"_index":1262,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["src/services/commands/help/help.service.ts",{"_index":963,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/help/help.service.ts:10",{"_index":967,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/help/help.service.ts:8",{"_index":971,"title":{},"body":{"injectables/HelpService.html":{}}}],["src/services/commands/story/ai",{"_index":241,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["src/services/services.module.ts",{"_index":1163,"title":{},"body":{"modules/ServicesModule.html":{}}}],["src/types/api/ai",{"_index":175,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/api/cogview2.ts",{"_index":639,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/api/cogview2.ts:27",{"_index":645,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:28",{"_index":644,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:34",{"_index":647,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/cogview2.ts:38",{"_index":646,"title":{},"body":{"classes/CogView2Response.html":{}}}],["src/types/api/wombo",{"_index":822,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["src/types/command/help.ts",{"_index":999,"title":{},"body":{"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts",{"_index":1091,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:12",{"_index":1102,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:16",{"_index":1104,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:20",{"_index":1106,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:22",{"_index":1096,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:4",{"_index":1097,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:6",{"_index":1098,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/types/extensions/messageattachmentwithdbrecord.ts:8",{"_index":1100,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["src/utilities/collage/collage.ts",{"_index":695,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:14",{"_index":721,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:22",{"_index":712,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:29",{"_index":704,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/collage/collage.ts:42",{"_index":708,"title":{},"body":{"injectables/Collage.html":{}}}],["src/utilities/utilities.module.ts",{"_index":1180,"title":{},"body":{"modules/UtilitiesModule.html":{}}}],["star",{"_index":1690,"title":{},"body":{"index.html":{}}}],["start",{"_index":1646,"title":{},"body":{"index.html":{}}}],["started",{"_index":1327,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["starting",{"_index":1458,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["state",{"_index":834,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"license.html":{}}}],["stated",{"_index":1843,"title":{},"body":{"license.html":{}}}],["statement",{"_index":1907,"title":{},"body":{"license.html":{}}}],["static",{"_index":699,"title":{},"body":{"injectables/Collage.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["stating",{"_index":1882,"title":{},"body":{"license.html":{}}}],["status",{"_index":640,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/typealiases.html":{}}}],["steampunk",{"_index":848,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["step",{"_index":1632,"title":{},"body":{"index.html":{}}}],["stoppage",{"_index":1972,"title":{},"body":{"license.html":{}}}],["stopped",{"_index":294,"title":{},"body":{"injectables/AmqpService.html":{}}}],["stories",{"_index":2063,"title":{},"body":{"additional-documentation/commands.html":{}}}],["story",{"_index":209,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"changelog.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["story.command.ts",{"_index":204,"title":{},"body":{"injectables/AiStoryCommand.html":{}}}],["story.model",{"_index":252,"title":{},"body":{"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{}}}],["story.model.ts",{"_index":212,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:12",{"_index":214,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:18",{"_index":215,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.model.ts:53",{"_index":218,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["story.service",{"_index":1128,"title":{},"body":{"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{}}}],["story.service.ts",{"_index":242,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.service.ts:12",{"_index":247,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.service.ts:8",{"_index":245,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["story.ts",{"_index":176,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"miscellaneous/typealiases.html":{}}}],["story/ai",{"_index":203,"title":{},"body":{"injectables/AiStoryCommand.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"modules/ModelsModule.html":{},"injectables/OpenAiCommand.html":{},"modules/ServicesModule.html":{}}}],["story/open",{"_index":1120,"title":{},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["string",{"_index":139,"title":{},"body":{"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["string(date.now",{"_index":491,"title":{},"body":{"injectables/BotGateway.html":{}}}],["string(value).match(paramspattern",{"_index":2045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string).data",{"_index":307,"title":{},"body":{"injectables/AmqpService.html":{}}}],["strings",{"_index":151,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/Collage.html":{}}}],["style",{"_index":254,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpCommand.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["style.value",{"_index":1250,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["styles",{"_index":840,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"additional-documentation/commands.html":{}}}],["styleused",{"_index":619,"title":{},"body":{"injectables/CogView2Model.html":{}}}],["subcommand",{"_index":527,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["subject",{"_index":1824,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1839,"title":{},"body":{"license.html":{}}}],["submission",{"_index":1911,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1797,"title":{},"body":{"license.html":{}}}],["submitted",{"_index":1795,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1820,"title":{},"body":{"license.html":{}}}],["substitution",{"_index":1383,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["successful",{"_index":1599,"title":{},"body":{"index.html":{}}}],["successfully",{"_index":572,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["such",{"_index":1673,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["suggestion",{"_index":1680,"title":{},"body":{"index.html":{}}}],["super",{"_index":747,"title":{},"body":{"classes/CouldNotGenerateArtException.html":{}}}],["super(message",{"_index":754,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{}}}],["supersede",{"_index":1918,"title":{},"body":{"license.html":{}}}],["support",{"_index":1361,"title":{},"body":{"changelog.html":{},"license.html":{},"modules.html":{}}}],["supported",{"_index":594,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/WomboDreamDto.html":{},"miscellaneous/enumerations.html":{}}}],["supports",{"_index":1589,"title":{},"body":{"index.html":{}}}],["sureal",{"_index":886,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["svg",{"_index":2025,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1377,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["switched",{"_index":1349,"title":{},"body":{"changelog.html":{}}}],["synchronize",{"_index":379,"title":{},"body":{"modules/AppModule.html":{}}}],["syntax",{"_index":2010,"title":{},"body":{"license.html":{}}}],["synthwave",{"_index":842,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["systems",{"_index":1807,"title":{},"body":{"license.html":{}}}],["t",{"_index":272,"title":{},"body":{"injectables/AmqpService.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["tab",{"_index":1572,"title":{},"body":{"index.html":{}}}],["table",{"_index":1543,"title":{},"body":{"index.html":{}}}],["tag",{"_index":1686,"title":{},"body":{"index.html":{}}}],["task",{"_index":1283,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["tell",{"_index":1130,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["tells",{"_index":1534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["temperature",{"_index":194,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["terminal",{"_index":1626,"title":{},"body":{"index.html":{}}}],["terminate",{"_index":1869,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1712,"title":{},"body":{"license.html":{}}}],["testing",{"_index":1358,"title":{},"body":{"changelog.html":{}}}],["tests",{"_index":1353,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":179,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/HelpService.html":{},"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{},"license.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/commands.html":{}}}],["text/plain;charset=utf",{"_index":1259,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["text_ada_001",{"_index":1156,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_babage_001",{"_index":1155,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_curie_001",{"_index":1154,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_davinci_001",{"_index":1152,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["text_davinci_002",{"_index":1153,"title":{},"body":{"classes/OpenAiCommandDto.html":{},"miscellaneous/enumerations.html":{}}}],["thanks",{"_index":1691,"title":{},"body":{"index.html":{}}}],["theory",{"_index":1956,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1791,"title":{},"body":{"license.html":{}}}],["things",{"_index":1561,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["third",{"_index":1896,"title":{},"body":{"license.html":{}}}],["this._dbrecord",{"_index":1107,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["this._messageattachment",{"_index":1109,"title":{},"body":{"classes/MessageAttachmentWithDbRecord.html":{}}}],["this.aistorymodel.getstory(headline",{"_index":256,"title":{},"body":{"injectables/AiStoryService.html":{}}}],["this.aistoryservice.getart(dto.headline",{"_index":1139,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.amqpclient.channel",{"_index":288,"title":{},"body":{"injectables/AmqpService.html":{}}}],["this.api_url",{"_index":1242,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.authenticate",{"_index":422,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.authmodel.getauthentication",{"_index":1245,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.canvas",{"_index":728,"title":{},"body":{"injectables/Collage.html":{}}}],["this.canvas.tobuffer('image/png",{"_index":731,"title":{},"body":{"injectables/Collage.html":{}}}],["this.cogview2model.getimagearray(prompt",{"_index":690,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.cogview2service.getart",{"_index":558,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.collage.constructcollage(response",{"_index":691,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.collage.getasattachment",{"_index":692,"title":{},"body":{"injectables/CogView2Service.html":{}}}],["this.configservice.get",{"_index":237,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["this.configservice.get('wombo",{"_index":1248,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.dalleminiservice.getart",{"_index":786,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.dalleminiservice.getart(\"lowecraftian",{"_index":804,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.dalleminiservice.getart(&quot;lowecraftian",{"_index":800,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.data",{"_index":654,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.data.data[2].map((e",{"_index":656,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.definewomboheaders(idtoken",{"_index":1251,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.definewomboheaders(token",{"_index":1254,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.discordclient.user.id",{"_index":461,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.getresponse(prompt",{"_index":170,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{}}}],["this.gettaskid(idtoken",{"_index":1246,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.helpservice.gethelpatindex(0",{"_index":939,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["this.helpservice.gethelpatindex(this.index",{"_index":961,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["this.httpservice.axiosref.get",{"_index":1253,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.httpservice.axiosref.post",{"_index":162,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/CogView2Model.html":{},"injectables/WomboDreamModel.html":{}}}],["this.httpservice.axiosref.post(this.configservice.get('wombo",{"_index":418,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.httpservice.axiosref.put",{"_index":1247,"title":{},"body":{"injectables/WomboDreamModel.html":{}}}],["this.iconurl",{"_index":981,"title":{},"body":{"injectables/HelpService.html":{}}}],["this.images",{"_index":1010,"title":{},"body":{"entities/Job.html":{}}}],["this.index",{"_index":960,"title":{},"body":{"injectables/HelpInteractionCollector.html":{}}}],["this.jobresolver.create",{"_index":1209,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["this.jobresolver.create(dbrecord",{"_index":570,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.jobservice.create(createjobinput",{"_index":1052,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findall",{"_index":1054,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findbymessageid(messageid",{"_index":1057,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.findone(id",{"_index":1056,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.remove(id",{"_index":1061,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobservice.update(updatejobinput._id",{"_index":1059,"title":{},"body":{"classes/JobResolver.html":{}}}],["this.jobsresolver.create(dbrecord",{"_index":788,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.jobsresolver.findonebymessageid",{"_index":475,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.lastdispatch",{"_index":298,"title":{},"body":{"injectables/AmqpService.html":{}}}],["this.logger",{"_index":104,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["this.logger.debug",{"_index":1474,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.debug('/ai",{"_index":1137,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.logger.debug('authenticating",{"_index":417,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.logger.debug('cog",{"_index":554,"title":{},"body":{"injectables/CogView2Command.html":{}}}],["this.logger.debug('collection",{"_index":1478,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.debug('dalle",{"_index":785,"title":{},"body":{"injectables/DalleMiniCommand.html":{}}}],["this.logger.debug('open",{"_index":1142,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["this.logger.debug('wombodream",{"_index":1198,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["this.logger.debug(`generating",{"_index":253,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/CogView2Service.html":{}}}],["this.logger.debug(`no",{"_index":477,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.logger.debug(`started",{"_index":806,"title":{},"body":{"injectables/DalleMiniService.html":{}}}],["this.logger.debug(message",{"_index":123,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["this.logger.error",{"_index":453,"title":{},"body":{"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{}}}],["this.logger.error(`image",{"_index":1291,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.logger.error(err.message",{"_index":420,"title":{},"body":{"injectables/AuthModel.html":{}}}],["this.logger.error(message",{"_index":124,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["this.logger.log(`created",{"_index":1282,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.logger.log(`reverting",{"_index":1482,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.log(`running",{"_index":1472,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.logger.verbose(message",{"_index":128,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["this.logger.warn",{"_index":464,"title":{},"body":{"injectables/BotGateway.html":{}}}],["this.logger.warn(message",{"_index":125,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["this.loglevels",{"_index":107,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["this.name",{"_index":1473,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.repository.find",{"_index":1079,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findone",{"_index":1081,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneanddelete",{"_index":1086,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneandupdate",{"_index":1083,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.findoneby",{"_index":1080,"title":{},"body":{"injectables/JobService.html":{}}}],["this.repository.save(createjobinput",{"_index":1078,"title":{},"body":{"injectables/JobService.html":{}}}],["this.size",{"_index":1477,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.size}b",{"_index":1475,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["this.status",{"_index":655,"title":{},"body":{"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{}}}],["this.styles.get(name",{"_index":905,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["this.wombodreammodel.checkartstatus",{"_index":1288,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.wombodreammodel.createart(prompt",{"_index":1281,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["this.wombodreamservice.generateart",{"_index":1201,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["those",{"_index":1849,"title":{},"body":{"license.html":{}}}],["through",{"_index":1668,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["throw",{"_index":259,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"injectables/WomboDreamService.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["thrown",{"_index":750,"title":{},"body":{"classes/CouldNotGenerateWomboArtException.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["throws",{"_index":1479,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["thudm",{"_index":536,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{}}}],["time",{"_index":957,"title":{},"body":{"injectables/HelpInteractionCollector.html":{},"index.html":{}}}],["timeout",{"_index":296,"title":{},"body":{"injectables/AmqpService.html":{},"changelog.html":{}}}],["timepassed",{"_index":299,"title":{},"body":{"injectables/AmqpService.html":{}}}],["title",{"_index":1941,"title":{},"body":{"license.html":{}}}],["token",{"_index":365,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthModel.html":{},"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["toolkit",{"_index":920,"title":{},"body":{"classes/GoogleAuthenticationToolkitError.html":{}}}],["tools",{"_index":1507,"title":{},"body":{"dependencies.html":{}}}],["top",{"_index":535,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"index.html":{}}}],["top_p",{"_index":192,"title":{},"body":{"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{}}}],["tort",{"_index":1957,"title":{},"body":{"license.html":{}}}],["tos",{"_index":1372,"title":{},"body":{"changelog.html":{}}}],["trace",{"_index":91,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["tracking",{"_index":1808,"title":{},"body":{"license.html":{}}}],["trade",{"_index":1924,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1886,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1923,"title":{},"body":{"license.html":{}}}],["transfer",{"_index":1847,"title":{},"body":{"license.html":{}}}],["transformation",{"_index":1762,"title":{},"body":{"license.html":{}}}],["transformedcommandexecutioncontext",{"_index":515,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["transformpipe",{"_index":524,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["translation",{"_index":1763,"title":{},"body":{"license.html":{}}}],["transports",{"_index":108,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["triggering",{"_index":1438,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":305,"title":{},"body":{"injectables/AmqpService.html":{},"modules/AppModule.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/HelpCommand.html":{},"injectables/HelpService.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/WomboDreamDto.html":{},"classes/createCappedJobsCollection1661353047612.html":{}}}],["try",{"_index":255,"title":{},"body":{"injectables/AiStoryService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["turned",{"_index":1484,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["type",{"_index":64,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiArtModel.html":{},"interfaces/AiStoryChoices.html":{},"injectables/AiStoryModel.html":{},"interfaces/AiStoryRequest.html":{},"interfaces/AiStoryResponse.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"modules/AppModule.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"classes/CogView2Response.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"classes/CreateJobInput.html":{},"injectables/DalleMiniCommand.html":{},"classes/DalleMiniCommandDto.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"classes/GoogleAuthenticationToolkitError.html":{},"injectables/HelpCommand.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"interfaces/IWomboDreamStyle.html":{},"entities/Job.html":{},"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"classes/UpdateJobInput.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2032,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":1008,"title":{},"body":{"entities/Job.html":{},"injectables/JobService.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"dependencies.html":{},"index.html":{}}}],["typeorm/driver/mongodb/mongoqueryrunner",{"_index":1466,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["typeormmodule",{"_index":343,"title":{},"body":{"modules/AppModule.html":{},"modules/JobModule.html":{}}}],["typeormmodule.forfeature([job",{"_index":1019,"title":{},"body":{"modules/JobModule.html":{}}}],["typeormmodule.forrootasync",{"_index":373,"title":{},"body":{"modules/AppModule.html":{}}}],["typepaths",{"_index":386,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":1174,"title":{},"body":{"classes/UpdateJobInput.html":{},"dependencies.html":{},"license.html":{}}}],["types/api/ai",{"_index":159,"title":{},"body":{"injectables/AiArtModel.html":{},"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/Collage.html":{}}}],["types/api/cogview2",{"_index":618,"title":{},"body":{"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{}}}],["types/api/wombo",{"_index":411,"title":{},"body":{"injectables/AuthModel.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["types/command/help",{"_index":975,"title":{},"body":{"injectables/HelpService.html":{}}}],["types/extensions/messageattachmentwithdbrecord",{"_index":681,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["typescript",{"_index":897,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"index.html":{}}}],["typing",{"_index":1666,"title":{},"body":{"index.html":{}}}],["ugly",{"_index":1426,"title":{},"body":{"changelog.html":{}}}],["ukiyoe",{"_index":844,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["undefined",{"_index":585,"title":{},"body":{"classes/CogView2CommandDto.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1701,"title":{},"body":{"index.html":{},"license.html":{}}}],["undone",{"_index":1481,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["union",{"_index":1727,"title":{},"body":{"license.html":{}}}],["unknown",{"_index":227,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/JobService.html":{}}}],["unless",{"_index":1912,"title":{},"body":{"license.html":{}}}],["unstable",{"_index":2077,"title":{},"body":{"additional-documentation/commands.html":{}}}],["until",{"_index":1274,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["unused",{"_index":899,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["up",{"_index":1449,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{},"index.html":{}}}],["up(queryrunner",{"_index":1460,"title":{},"body":{"classes/createCappedJobsCollection1661353047612.html":{}}}],["update",{"_index":1026,"title":{},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"changelog.html":{}}}],["update(@args('updatejobinput",{"_index":1058,"title":{},"body":{"classes/JobResolver.html":{}}}],["update(id",{"_index":1074,"title":{},"body":{"injectables/JobService.html":{}}}],["update(updatejobinput",{"_index":1042,"title":{},"body":{"classes/JobResolver.html":{}}}],["updated_at",{"_index":836,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["updatejobinput",{"_index":1043,"title":{"classes/UpdateJobInput.html":{}},"body":{"classes/JobResolver.html":{},"injectables/JobService.html":{},"classes/UpdateJobInput.html":{}}}],["url",{"_index":361,"title":{},"body":{"modules/AppModule.html":{},"injectables/HelpService.html":{},"index.html":{}}}],["usable",{"_index":225,"title":{},"body":{"injectables/AiStoryModel.html":{}}}],["usage",{"_index":545,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"interfaces/ICommandHelp.html":{},"interfaces/ICommandParameter.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"index.html":{}}}],["use",{"_index":1133,"title":{},"body":{"injectables/OpenAiCommand.html":{},"classes/OpenAiCommandDto.html":{},"index.html":{},"license.html":{},"additional-documentation/commands.html":{}}}],["usecollectors",{"_index":932,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["usecollectors(helpinteractioncollector",{"_index":938,"title":{},"body":{"injectables/HelpCommand.html":{}}}],["used",{"_index":2053,"title":{},"body":{"additional-documentation/commands.html":{}}}],["usefactory",{"_index":360,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":528,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["usepipes(transformpipe",{"_index":553,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["user",{"_index":440,"title":{},"body":{"injectables/BotGateway.html":{},"changelog.html":{}}}],["user.send",{"_index":487,"title":{},"body":{"injectables/BotGateway.html":{}}}],["user_id",{"_index":837,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["username",{"_index":117,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"index.html":{}}}],["uses",{"_index":1555,"title":{},"body":{"index.html":{},"additional-documentation/commands.html":{}}}],["useunifiedtopology",{"_index":375,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":544,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/DalleMiniCommand.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["utilities/collage/collage",{"_index":682,"title":{},"body":{"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{}}}],["utilities/utilities.module",{"_index":356,"title":{},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{}}}],["utilitiesmodule",{"_index":329,"title":{"modules/UtilitiesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"modules.html":{},"overview.html":{}}}],["v",{"_index":1625,"title":{},"body":{"index.html":{}}}],["value",{"_index":84,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/AiStoryService.html":{},"injectables/AmqpService.html":{},"injectables/AuthModel.html":{},"injectables/BotGateway.html":{},"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/Collage.html":{},"injectables/DalleMiniService.html":{},"interfaces/GoogleApiAuthResponse.html":{},"injectables/HelpInteractionCollector.html":{},"injectables/HelpService.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/OpenAiCommand.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"classes/createCappedJobsCollection1661353047612.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1382,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["variable_name",{"_index":1590,"title":{},"body":{"index.html":{}}}],["variables",{"_index":1636,"title":{"miscellaneous/variables.html":{}},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["various",{"_index":2030,"title":{},"body":{"properties.html":{}}}],["vars",{"_index":900,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["verbal",{"_index":1800,"title":{},"body":{"license.html":{}}}],["verbose",{"_index":55,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["verbose(message",{"_index":77,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["verbose?(message",{"_index":127,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["verification",{"_index":1375,"title":{},"body":{"changelog.html":{}}}],["verify",{"_index":1623,"title":{},"body":{"index.html":{}}}],["version",{"_index":1629,"title":{},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["very",{"_index":2076,"title":{},"body":{"additional-documentation/commands.html":{}}}],["via",{"_index":1622,"title":{},"body":{"index.html":{}}}],["vibrant",{"_index":852,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["view",{"_index":21,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"changelog.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["view2",{"_index":538,"title":{},"body":{"injectables/CogView2Command.html":{},"classes/CogView2CommandDto.html":{},"additional-documentation/commands.html":{}}}],["visual",{"_index":2069,"title":{},"body":{"additional-documentation/commands.html":{}}}],["void",{"_index":72,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"injectables/BotGateway.html":{},"classes/MessageAttachmentWithDbRecord.html":{},"miscellaneous/variables.html":{}}}],["want",{"_index":1216,"title":{},"body":{"classes/WomboDreamDto.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["warn",{"_index":56,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["warn(message",{"_index":79,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["warranties",{"_index":1938,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1932,"title":{},"body":{"license.html":{}}}],["wastebasket",{"_index":1416,"title":{},"body":{"changelog.html":{}}}],["watercolor",{"_index":604,"title":{},"body":{"classes/CogView2CommandDto.html":{},"classes/CogView2Response.html":{},"interfaces/ICogView2Data.html":{},"interfaces/ICogView2Request.html":{},"interfaces/ICogView2Response.html":{},"interfaces/ICogView2ResponseAcknowledged.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["web",{"_index":503,"title":{},"body":{"injectables/CogView2Command.html":{},"injectables/CogView2Service.html":{},"injectables/DalleMiniService.html":{},"index.html":{}}}],["website",{"_index":778,"title":{},"body":{"injectables/DalleMiniCommand.html":{},"injectables/DalleMiniService.html":{}}}],["websocket",{"_index":455,"title":{},"body":{"injectables/BotGateway.html":{}}}],["weight",{"_index":910,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["whale",{"_index":1341,"title":{},"body":{"changelog.html":{}}}],["wherever",{"_index":1895,"title":{},"body":{"license.html":{}}}],["whether",{"_index":1740,"title":{},"body":{"license.html":{}}}],["white_check_mark",{"_index":1351,"title":{},"body":{"changelog.html":{}}}],["whole",{"_index":1786,"title":{},"body":{"license.html":{}}}],["width",{"_index":713,"title":{},"body":{"injectables/Collage.html":{}}}],["wih",{"_index":1345,"title":{},"body":{"changelog.html":{}}}],["windows",{"_index":1641,"title":{},"body":{"index.html":{}}}],["winston",{"_index":95,"title":{},"body":{"injectables/AiArtLoggerService.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":105,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["winston.logger",{"_index":81,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["winston.transports.console",{"_index":114,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["winston.transports.file",{"_index":110,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["within",{"_index":1822,"title":{},"body":{"license.html":{}}}],["without",{"_index":1655,"title":{},"body":{"index.html":{},"license.html":{}}}],["wombo",{"_index":25,"title":{},"body":{"injectables/AiArtCommand.html":{},"injectables/AuthModel.html":{},"classes/CouldNotGenerateWomboArtException.html":{},"modules/ModelsModule.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"injectables/WomboDreamService.html":{},"index.html":{},"additional-documentation/commands.html":{}}}],["wombodream",{"_index":1264,"title":{},"body":{"injectables/WomboDreamService.html":{},"index.html":{}}}],["wombodream.png",{"_index":1208,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["wombodreamcommand",{"_index":24,"title":{"injectables/WomboDreamCommand.html":{}},"body":{"injectables/AiArtCommand.html":{},"injectables/WomboDreamCommand.html":{}}}],["wombodreamdto",{"_index":1188,"title":{"classes/WomboDreamDto.html":{}},"body":{"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{}}}],["wombodreaminputspec",{"_index":906,"title":{"interfaces/WomboDreamInputSpec.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreammodel",{"_index":1115,"title":{"injectables/WomboDreamModel.html":{}},"body":{"modules/ModelsModule.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"overview.html":{}}}],["wombodreamservice",{"_index":1162,"title":{"injectables/WomboDreamService.html":{}},"body":{"modules/ServicesModule.html":{},"injectables/WomboDreamCommand.html":{},"injectables/WomboDreamService.html":{},"overview.html":{}}}],["wombodreamstyle",{"_index":839,"title":{"classes/WomboDreamStyle.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/WomboDreamCommand.html":{},"classes/WomboDreamDto.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(1",{"_index":843,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(10",{"_index":861,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(11",{"_index":863,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(12",{"_index":865,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(13",{"_index":867,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(14",{"_index":869,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(15",{"_index":871,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(16",{"_index":873,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(17",{"_index":875,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(18",{"_index":877,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(19",{"_index":879,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(2",{"_index":845,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(20",{"_index":881,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(21",{"_index":883,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(22",{"_index":885,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(23",{"_index":887,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(27",{"_index":889,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(28",{"_index":891,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(3",{"_index":847,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(4",{"_index":849,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(5",{"_index":851,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(6",{"_index":853,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(7",{"_index":855,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(8",{"_index":857,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle(9",{"_index":859,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamstyle.getbyname(dto.style",{"_index":1202,"title":{},"body":{"injectables/WomboDreamCommand.html":{}}}],["wombodreamstyle.no_style",{"_index":1236,"title":{},"body":{"injectables/WomboDreamModel.html":{},"injectables/WomboDreamService.html":{}}}],["wombodreamstyle.styles.set(name",{"_index":892,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamtaskresponse",{"_index":915,"title":{"interfaces/WomboDreamTaskResponse.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"injectables/WomboDreamCommand.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wombodreamtaskstate",{"_index":835,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{},"miscellaneous/typealiases.html":{}}}],["wombotaskidresponse",{"_index":828,"title":{"interfaces/WomboTaskIdResponse.html":{}},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"injectables/WomboDreamModel.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["wonderland",{"_index":1132,"title":{},"body":{"injectables/OpenAiCommand.html":{}}}],["work",{"_index":1767,"title":{},"body":{"license.html":{}}}],["worker",{"_index":1601,"title":{},"body":{"index.html":{}}}],["workflow",{"_index":1359,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":1779,"title":{},"body":{"license.html":{}}}],["worldwide",{"_index":1829,"title":{},"body":{"license.html":{}}}],["wrapper",{"_index":1370,"title":{},"body":{"changelog.html":{}}}],["wrench",{"_index":1376,"title":{},"body":{"changelog.html":{}}}],["write",{"_index":68,"title":{},"body":{"injectables/AiArtLoggerService.html":{}}}],["writing",{"_index":1817,"title":{},"body":{"license.html":{}}}],["written",{"_index":1801,"title":{},"body":{"license.html":{}}}],["wuhtercuhler",{"_index":872,"title":{},"body":{"interfaces/GoogleApiAuthResponse.html":{},"interfaces/IWomboDreamStyle.html":{},"interfaces/WomboDreamInputSpec.html":{},"classes/WomboDreamStyle.html":{},"interfaces/WomboDreamTaskResponse.html":{},"interfaces/WomboTaskIdResponse.html":{}}}],["yaml",{"_index":1380,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["yaml_config_filename",{"_index":2042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yamlconfigurationloader",{"_index":348,"title":{},"body":{"modules/AppModule.html":{}}}],["yes",{"_index":216,"title":{},"body":{"injectables/AiStoryModel.html":{},"injectables/AiStoryService.html":{},"injectables/CogView2Model.html":{},"injectables/CogView2Service.html":{},"classes/CouldNotGenerateArtException.html":{},"classes/MessageAttachmentWithDbRecord.html":{}}}],["yield",{"_index":1292,"title":{},"body":{"injectables/WomboDreamService.html":{}}}],["yourself",{"_index":2068,"title":{},"body":{"additional-documentation/commands.html":{}}}],["zoom",{"_index":331,"title":{},"body":{"modules/AppModule.html":{},"modules/CommandsModule.html":{},"modules/EntityModule.html":{},"modules/GatewayModule.html":{},"modules/JobModule.html":{},"modules/LoggerModule.html":{},"modules/ModelsModule.html":{},"modules/ServicesModule.html":{},"modules/UtilitiesModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"injectables/AiArtCommand.html":{"url":"injectables/AiArtCommand.html","title":"injectable - AiArtCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiArtCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/ai-art.command.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { DalleMiniCommand } from './dalle-mini/dalle-mini.command';\nimport { CogView2Command } from './cog-view-2/cog-view-2.command';\nimport { WomboDreamCommand } from './wombo-dream/wombo-dream.command';\n\n@Injectable()\n@Command({\n  name: 'ai-art',\n  description: 'generate images based on prompt',\n  include: [DalleMiniCommand, CogView2Command, WomboDreamCommand],\n})\nexport class AiArtCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiArtLoggerService.html":{"url":"injectables/AiArtLoggerService.html","title":"injectable - AiArtLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiArtLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/logging/ai-art-logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Private\n                                    Readonly\n                                LogLevels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                log\n                            \n                            \n                                    Optional\n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/logging/ai-art-logger.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/logging/ai-art-logger.service.ts:73\n                \n            \n\n\n            \n                \n                    Write a 'debug' level log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/logging/ai-art-logger.service.ts:59\n                \n            \n\n\n            \n                \n                    Write an 'error' level log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/logging/ai-art-logger.service.ts:52\n                \n            \n\n\n            \n                \n                    Write a 'log' level log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/logging/ai-art-logger.service.ts:80\n                \n            \n\n\n            \n                \n                    Write a 'verbose' level log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: any, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in src/logging/ai-art-logger.service.ts:66\n                \n            \n\n\n            \n                \n                    Write a 'warn' level log.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     winston.Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/logging/ai-art-logger.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        LogLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    fatal: 0,\n    error: 1,\n    warn: 2,\n    info: 3,\n    debug: 4,\n    trace: 5,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/logging/ai-art-logger.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, LoggerService } from '@nestjs/common';\nimport winston from 'winston';\nimport { ElasticsearchTransport } from 'winston-elasticsearch';\nimport { ConfigService } from '@nestjs/config';\nimport ecsFormat from '@elastic/ecs-winston-format';\n\n@Injectable()\nexport class AiArtLoggerService implements LoggerService {\n  private readonly LogLevels = {\n    fatal: 0,\n    error: 1,\n    warn: 2,\n    info: 3,\n    debug: 4,\n    trace: 5,\n  };\n\n  private readonly logger: winston.Logger;\n\n  public constructor(private readonly configService: ConfigService) {\n    this.logger = winston.createLogger({\n      level: 'info',\n      levels: this.LogLevels,\n      transports: [\n        new winston.transports.File({\n          filename: './logs/ai-art.log',\n          level: 'debug',\n          format: ecsFormat(),\n        }),\n        new winston.transports.Console({\n          level: 'info',\n          format: ecsFormat(),\n        }),\n        new ElasticsearchTransport({\n          index: 'ai-art',\n          level: 'debug',\n          clientOpts: {\n            auth: {\n              username: configService.get('elastic.username'),\n              password: configService.get('elastic.password'),\n            },\n            node: configService.get('elastic.uri'),\n          },\n        }),\n      ],\n    });\n  }\n\n  /**\n   * Write a 'log' level log.\n   */\n  log(message: any, ...optionalParams: any[]) {\n    this.logger.debug(message);\n  }\n\n  /**\n   * Write an 'error' level log.\n   */\n  error(message: any, ...optionalParams: any[]) {\n    this.logger.error(message);\n  }\n\n  /**\n   * Write a 'warn' level log.\n   */\n  warn(message: any, ...optionalParams: any[]) {\n    this.logger.warn(message);\n  }\n\n  /**\n   * Write a 'debug' level log.\n   */\n  debug?(message: any, ...optionalParams: any[]) {\n    this.logger.debug(message);\n  }\n\n  /**\n   * Write a 'verbose' level log.\n   */\n  verbose?(message: any, ...optionalParams: any[]) {\n    this.logger.verbose(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiArtModel.html":{"url":"injectables/AiArtModel.html","title":"injectable - AiArtModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiArtModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ai-art/ai-art.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getImageArray\n                            \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/models/ai-art/ai-art.model.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-art/ai-art.model.ts:30\n                \n            \n\n\n            \n                \n                    Returns raw string array of base64 dall-e mini generated images.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt based on which to generate art.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        extracted array of base64 image strings\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-art/ai-art.model.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport { AiArtImageArray, AiArtResponse } from '../../types/api/ai-art';\n\n@Injectable()\nexport class AiArtModel {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public async getResponse(\n    prompt: string,\n  ): Promise> {\n    return await this.httpService.axiosRef.post(\n      'http://bf.dallemini.ai/generate',\n      {\n        prompt,\n        headers: {\n          Accept: 'application/json',\n        },\n      },\n    );\n  }\n\n  /**\n   * Returns raw string array of base64 dall-e mini generated images.\n   *\n   * @param prompt prompt based on which to generate art.\n   * @returns extracted array of base64 image strings\n   */\n  public async getImageArray(prompt: string): Promise {\n    const { data } = await this.getResponse(prompt);\n    return data.images;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryChoices.html":{"url":"interfaces/AiStoryChoices.html","title":"interface - AiStoryChoices","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryChoices\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            finishReason\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            logprobs\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        finishReason\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        finishReason:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logprobs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logprobs:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryCommand.html":{"url":"injectables/AiStoryCommand.html","title":"injectable - AiStoryCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/ai-story.command.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Command } from '@discord-nestjs/core';\nimport { OpenAiCommand } from './open-ai/open-ai.command';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\n@Command({\n  name: 'ai-story',\n  description: 'Generate random AI based story',\n  include: [OpenAiCommand],\n})\nexport class AiStoryCommand {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryModel.html":{"url":"injectables/AiStoryModel.html","title":"injectable - AiStoryModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/ai-story/ai-story.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                            \n                                    Public\n                                    Async\n                                getStory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/ai-story/ai-story.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-story/ai-story.model.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getStory\n                        \n                    \n                \n            \n            \n                \n                    \n                    getStory(prompt: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/models/ai-story/ai-story.model.ts:53\n                \n            \n\n\n            \n                \n                    Parses openAi endpoint response into more readable and usable format.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        headline of story\n\n                                    \n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        model which is to generate story\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        generated story.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AxiosResponse } from 'axios';\nimport {\n  AiStoryRequest,\n  AiStoryResponse,\n  Model,\n} from '../../types/api/ai-story';\n\n@Injectable()\nexport class AiStoryModel {\n  public constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  public async getResponse(\n    prompt: string,\n    model?: Model,\n  ): Promise> {\n    const selectedModel = model || 'text-davinci-002';\n    const requestBody = {\n      model: selectedModel,\n      prompt,\n      temperature: 0.7,\n      max_tokens: 512,\n      top_p: 1,\n      best_of: 3,\n      frequency_penalty: 0.75,\n      presence_penalty: 0.33,\n    } as AiStoryRequest;\n    return this.httpService.axiosRef.post(\n      'https://api.openai.com/v1/completions',\n      requestBody,\n      {\n        headers: {\n          Accept: 'application/json',\n          Authorization: `Bearer ${this.configService.get(\n            'openAi.token',\n          )}`,\n        },\n      },\n    );\n  }\n  /**\n   * Parses openAi endpoint response into more readable and usable format.\n   *\n   * @param prompt headline of story\n   * @param model model which is to generate story\n   * @returns generated story.\n   */\n  public async getStory(prompt: string, model?: Model) {\n    const {\n      data: { choices },\n    } = await this.getResponse(prompt, model);\n    return choices[0].text;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryRequest.html":{"url":"interfaces/AiStoryRequest.html","title":"interface - AiStoryRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            best_of\n                                        \n                                \n                                \n                                        \n                                            frequency_penalty\n                                        \n                                \n                                \n                                        \n                                            max_tokens\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            presence_penalty\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            temperature\n                                        \n                                \n                                \n                                        \n                                            top_p\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        best_of\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        best_of:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        frequency_penalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        frequency_penalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_tokens\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_tokens:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        presence_penalty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        presence_penalty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_p\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_p:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AiStoryResponse.html":{"url":"interfaces/AiStoryResponse.html","title":"interface - AiStoryResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AiStoryResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/ai-story.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            choices\n                                        \n                                \n                                \n                                        \n                                            created\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            model\n                                        \n                                \n                                \n                                        \n                                            object\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choices\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        choices:         AiStoryChoices[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AiStoryChoices[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        created\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        model\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        model:         Model\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Model\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        object\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        object:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Model =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport interface AiStoryRequest {\n  model: Model;\n  prompt: string;\n  top_p: number;\n  best_of: number;\n  temperature: number;\n  max_tokens: number;\n  frequency_penalty: number;\n  presence_penalty: number;\n}\n\nexport interface AiStoryChoices {\n  text: string;\n  index: number;\n  logprobs: number | null;\n  finishReason: string;\n}\n\nexport interface AiStoryResponse {\n  id: string;\n  object: string;\n  created: number;\n  model: Model;\n  choices: AiStoryChoices[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AiStoryService.html":{"url":"injectables/AiStoryService.html","title":"injectable - AiStoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AiStoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/story/ai-story/ai-story.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(aiStoryModel: AiStoryModel)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/story/ai-story/ai-story.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiStoryModel\n                                                  \n                                                        \n                                                                        AiStoryModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(headline: string, model?: Model)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/story/ai-story/ai-story.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headline\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    model\n                                    \n                                                Model\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AiStoryService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/story/ai-story/ai-story.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { AiStoryModel } from '../../../../models/ai-story/ai-story.model';\nimport { Model } from '../../../../types/api/ai-story';\n\n@Injectable()\nexport class AiStoryService {\n  private readonly logger = new Logger(AiStoryService.name);\n\n  public constructor(private readonly aiStoryModel: AiStoryModel) {}\n\n  public async getArt(headline: string, model?: Model): Promise {\n    this.logger.debug(`Generating ${headline} in style ${model}`);\n    try {\n      return await this.aiStoryModel.getStory(headline, model);\n    } catch (err) {\n      throw new CouldNotGenerateArtException(\n        AiStoryService.name,\n        headline,\n        model as string,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AmqpService.html":{"url":"injectables/AmqpService.html","title":"injectable - AmqpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AmqpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/amqp/amqp.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lastDispatch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                popFromQueue\n                            \n                            \n                                    Public\n                                    Async\n                                publishToQueue\n                            \n                            \n                                    Public\n                                    Async\n                                purgeQueue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(amqpClient: AmqpClient)\n                    \n                \n                        \n                            \n                                Defined in src/services/amqp/amqp.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        amqpClient\n                                                  \n                                                        \n                                                                    AmqpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        popFromQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    popFromQueue(queueName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:24\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        publishToQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    publishToQueue(queueName: string, item: T)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        purgeQueue\n                        \n                    \n                \n            \n            \n                \n                    \n                    purgeQueue(queueName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/services/amqp/amqp.service.ts:16\n                \n            \n\n\n            \n                \n                    Softly purges queue.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        name of queue to purge\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        lastDispatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/services/amqp/amqp.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AmqpClient, InjectAmqpClient } from '@karafra/nestjs-amqp';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AmqpService {\n  private lastDispatch: number = Date.now();\n  public constructor(\n    @InjectAmqpClient() private readonly amqpClient: AmqpClient,\n  ) {}\n\n  /**\n   * Softly purges queue.\n   *\n   * @param queueName name of queue to purge\n   */\n  public async purgeQueue(queueName: string): Promise {\n    const channel = await this.amqpClient.channel();\n    // Ensures queue is present\n    channel.queue(queueName);\n    await channel.queuePurge(queueName);\n    await channel.close('Service stopped', 320);\n  }\n\n  public async popFromQueue(queueName: string): Promise {\n    const timeout = 3000;\n    if (!(Date.now() - this.lastDispatch > timeout)) {\n      const timePassed = Date.now() - this.lastDispatch;\n      await new Promise((resolve) => setTimeout(resolve, timePassed));\n    }\n\n    const channel = await this.amqpClient.channel();\n    const queue = await channel?.queue(queueName);\n    const message = await queue?.get({ noAck: true });\n    await channel.close('Service stopped', 320);\n    return JSON.parse(message?.bodyToString() as string).data;\n  }\n\n  public async publishToQueue(queueName: string, item: T): Promise {\n    const channel = await this.amqpClient.channel();\n    const queue = await channel.queue(queueName, { autoDelete: false });\n    await queue?.publish(JSON.stringify({ data: item }), { deliveryMode: 2 });\n    channel.close('Service stopped', 320);\n    return item;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nCommandsModule\n\nCommandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommandsModule->AppModule\n\n\n\n\n\nEntityModule\n\nEntityModule\n\nAppModule -->\n\nEntityModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nAppModule -->\n\nModelsModule->AppModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nBotGateway\n\nBotGateway\n\nAppModule -->\n\nBotGateway->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CommandsModule\n                        \n                        \n                            EntityModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ModelsModule\n                        \n                        \n                            ServicesModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordModule } from '@discord-nestjs/core';\nimport { AmqpModule } from '@karafra/nestjs-amqp';\nimport { ApolloDriver } from '@nestjs/apollo';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Intents } from 'discord.js';\nimport { CommandsModule } from './commands/commands.module';\nimport yamlConfigurationLoader from './config/yamlConfigurationLoader';\nimport { EntityModule } from './entity/entity.module';\nimport { Job } from './entity/job/entities/job.entity';\nimport { BotGateway } from './gateway/discord/discord.gateway';\nimport { ModelsModule } from './models/models.module';\nimport { ServicesModule } from './services/services.module';\nimport { UtilitiesModule } from './utilities/utilities.module';\nimport { LoggerModule } from './logging/logger.module';\n\n@Module({\n  imports: [\n    LoggerModule,\n    ModelsModule,\n    ServicesModule,\n    ConfigModule.forRoot(),\n    AmqpModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        url: configService.get('amqp.url'),\n      }),\n      inject: [ConfigService],\n    }),\n    DiscordModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        token: configService.get('discord.token'),\n        discordClientOptions: {\n          shards: 'auto',\n          intents: [\n            Intents.FLAGS.GUILDS,\n            Intents.FLAGS.GUILD_MESSAGES,\n            Intents.FLAGS.GUILD_MESSAGE_REACTIONS,\n          ],\n        },\n      }),\n      inject: [ConfigService],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: (configService: ConfigService) => ({\n        type: 'mongodb',\n        useUnifiedTopology: true,\n        entities: [Job],\n        url: configService.get('mongo.uri'),\n        logging: true,\n        synchronize: true,\n        migrationsTableName: 'migrations',\n        migrations: ['dist/migrations/*.migration.js'],\n        migrationsRun: true,\n      }),\n      inject: [ConfigService],\n    }),\n    GraphQLModule.forRoot({\n      driver: ApolloDriver,\n      typePaths: ['./**/*.graphql'],\n      config: {\n        apolloServer: {\n          cache: 'bounded',\n        },\n      },\n    }),\n    ConfigModule.forRoot({\n      load: [yamlConfigurationLoader],\n    }),\n    CommandsModule,\n    UtilitiesModule,\n    EntityModule,\n  ],\n  controllers: [],\n  providers: [BotGateway],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthModel.html":{"url":"injectables/AuthModel.html","title":"injectable - AuthModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/wombo-dream/auth/auth-model.model.ts\n        \n\n\n            \n                Description\n            \n            \n                Authentication model for wombo dream image generation service\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                authenticate\n                            \n                            \n                                    Public\n                                    Async\n                                getAuthentication\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/wombo-dream/auth/auth-model.model.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        authenticate\n                        \n                    \n                \n            \n            \n                \n                    \n                    authenticate()\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/auth/auth-model.model.ts:28\n                \n            \n\n\n            \n                \n                    Gets authentication response for wombo art.\n\n\n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        AxiosResponse axios response containing authentication token for wombo art\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAuthentication\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAuthentication()\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/auth/auth-model.model.ts:47\n                \n            \n\n\n            \n                \n                    Returns authentication token for wombo art.\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        token authentication token for wombo art\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AuthModel.name)\n                    \n                \n                    \n                        \n                                Defined in src/models/wombo-dream/auth/auth-model.model.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { HttpService } from '@nestjs/axios';\nimport { AxiosResponse } from 'axios';\nimport { GoogleApiAuthResponse } from '../../../types/api/wombo-dream';\nimport { ConfigService } from '@nestjs/config';\nimport { GoogleAuthenticationToolkitError } from '../../../exceptions/GoogleAuthenticationToolkitError';\n\n/**\n * Authentication model for wombo dream image generation service\n *\n * @since 2.1.5\n * @author Karafra\n */\n@Injectable()\nexport class AuthModel {\n  private readonly logger = new Logger(AuthModel.name);\n\n  public constructor(\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {}\n\n  /**\n   * Gets authentication response for wombo art.\n   *\n   * @returns AxiosResponse axios response containing authentication token for wombo art\n   */\n  public async authenticate(): Promise> {\n    this.logger.debug('Authenticating for wombo art');\n    try {\n      const response = await this.httpService.axiosRef.post(this.configService.get('wombo-dream.googleAuthUrl'), {});\n      return response;\n    } catch (err) {\n      this.logger.error(err.message);\n      throw new GoogleAuthenticationToolkitError(err.message);\n    }\n  }\n\n  /**\n   * Returns authentication token for wombo art.\n   *\n   * @return token authentication token for wombo art\n   */\n  public async getAuthentication(): Promise {\n    const response = await this.authenticate();\n    return response.data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BotGateway.html":{"url":"injectables/BotGateway.html","title":"injectable - BotGateway","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BotGateway\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/gateway/discord/discord.gateway.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                onError\n                            \n                            \n                                    Public\n                                    Async\n                                onMessageReactionAdd\n                            \n                            \n                                    Public\n                                onReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(discordClient: Client, jobsResolver: JobResolver)\n                    \n                \n                        \n                            \n                                Defined in src/gateway/discord/discord.gateway.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        discordClient\n                                                  \n                                                        \n                                                                    Client\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onError\n                        \n                    \n                \n            \n            \n                \n                    \n                    onError(error: Error)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('error')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onMessageReactionAdd\n                        \n                    \n                \n            \n            \n                \n                    \n                    onMessageReactionAdd(messageReaction: MessageReaction, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('messageReactionAdd')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageReaction\n                                    \n                                                MessageReaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        onReady\n                        \n                    \n                \n            \n            \n                \n                    \n                    onReady()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Once('ready')\n                \n            \n\n            \n                \n                    Defined in src/gateway/discord/discord.gateway.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Logger\n\n                    \n                \n                \n                    \n                        Default value : new Logger(BotGateway.name)\n                    \n                \n                    \n                        \n                                Defined in src/gateway/discord/discord.gateway.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InjectDiscordClient, On, Once } from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport {\n  Client,\n  DiscordAPIError,\n  MessageActionRow,\n  MessageAttachment,\n  MessageButton,\n  MessageReaction,\n  User,\n} from 'discord.js';\nimport { JobResolver } from '../../entity/job/job.resolver';\n\n@Injectable()\nexport class BotGateway {\n  private readonly logger: Logger = new Logger(BotGateway.name);\n\n  public constructor(\n    @InjectDiscordClient()\n    private readonly discordClient: Client,\n    private readonly jobsResolver: JobResolver,\n  ) {}\n\n  @Once('ready')\n  public onReady(): void {}\n\n  @On('error')\n  public onError(error: Error) {\n    this.logger.error(\n      `client's WebSocket encountered a connection error: ${error}`,\n    );\n  }\n\n  @On('messageReactionAdd')\n  public async onMessageReactionAdd(\n    messageReaction: MessageReaction,\n    user: User,\n  ): Promise {\n    if (\n      messageReaction.emoji.identifier !== '%E2%9C%89%EF%B8%8F' ||\n      messageReaction.message.author.id !== this.discordClient.user.id\n    ) {\n      return;\n    }\n    try {\n      await messageReaction.remove();\n    } catch (err) {\n      if (err instanceof DiscordAPIError) {\n        this.logger.warn(\n          `Bot on server ${messageReaction.message.guild.name} does not have permission to clear reactions. Enveloper feature disabled`,\n        );\n        return;\n      }\n      throw err;\n    }\n    const dbRecord = await this.jobsResolver.findOneByMessageId(\n      messageReaction.message.id,\n    );\n    if (dbRecord === null) {\n      this.logger.debug(`No record found for this image in database`);\n      return;\n    }\n    const { images, messageLink } = dbRecord;\n    const actionRow = new MessageActionRow().addComponents(\n      new MessageButton()\n        .setStyle('LINK')\n        .setURL(messageLink)\n        .setLabel('Jump to message '),\n    );\n    await user.send({\n      files: images.map(\n        (image) =>\n          new MessageAttachment(\n            Buffer.from(image, 'base64'),\n            String(Date.now()) + '.png',\n          ),\n      ),\n      components: [actionRow],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Command.html":{"url":"injectables/CogView2Command.html","title":"injectable - CogView2Command","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Command\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/cog-view-2/cog-view-2.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command generating art form prompt based on cog view 2 model.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobResolver: JobResolver, cogView2Service: CogView2Service)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:49\n                            \n                        \n\n                \n                    \n                            Service service handling web requests to api.\nSee JobResolver\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jobResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                database resolver for jobs entity\n\n                                                        \n                                                \n                                                \n                                                        cogView2Service\n                                                  \n                                                        \n                                                                        CogView2Service\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling image generation for cogView2 mode\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: CogView2CommandDto, executionContext: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:69\n                \n            \n\n\n            \n                \n                    Handles command call.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CogView2CommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto containing all parameters of command.\n\n                                    \n                                \n                                \n                                    executionContext\n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full execution context.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CogView2Command.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.command.ts:49\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { CogView2Service } from '../../../services/commands/art/cog-view-2/cog-view-2.service';\nimport { CogView2CommandDto } from './cog-view-2.dto';\n\n/**\n * Command generating art form prompt based on cog view 2 model.\n *\n * @classdesc Top level command handling generation of images based on THUDM CogView2 model.\n * @example /ai-art cog-view2\n * @author Karafra\n * @since 1.4.5\n */\n@IncludeInHelp({\n  name: '/ai-art cog-view-2',\n  description:\n    'Generates collage of 9 images from given prompt using CogView2 model.',\n  usage:\n    '/ai-art cog-view-2 prompt: Homer Simpson in the scream by edward munch',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of images',\n    },\n    {\n      name: 'style',\n      description: 'style in which image is to be drawn',\n    },\n  ],\n})\n@SubCommand({\n  name: 'cog-view2',\n  description: 'generate AiArt based on given prompt using dall-e mini model',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class CogView2Command\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(CogView2Command.name);\n\n  /** Service service handling web requests to api.\n   *\n   * @param jobResolver database resolver for jobs entity\n   * @param cogView2Service service handling image generation for cogView2 mode\n   *\n   * @see JobResolver\n   */\n  public constructor(\n    private readonly jobResolver: JobResolver,\n    private readonly cogView2Service: CogView2Service,\n  ) {}\n\n  /**\n   * Handles command call.\n   *\n   * @param dto dto containing all parameters of command.\n   * @param executionContext full execution context.\n   */\n  public async handler(\n    @Payload() dto: CogView2CommandDto,\n    executionContext: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('cog-view-2 command called');\n    await executionContext.interaction.deferReply();\n    try {\n      const { attachment, dbRecord } = await this.cogView2Service.getArt(\n        dto.prompt,\n        dto.style,\n      );\n      await executionContext.interaction.deleteReply();\n      const message = await executionContext.interaction.channel.send({\n        files: [attachment],\n        content: ` \\n\\n :art: ${dto.prompt} :frame_photo:`,\n      });\n      dbRecord.messageId = message.id;\n      dbRecord.messageLink = message.url;\n      await this.jobResolver.create(dbRecord);\n      this.logger.debug('Cog-view-2 command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Cog-view-2 mini command failed with exception: ${err.message}`,\n      );\n      await executionContext.interaction.followUp(\n        `:frowning: could not process this query \\`${dto.prompt}\\`. Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CogView2CommandDto.html":{"url":"classes/CogView2CommandDto.html","title":"class - CogView2CommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CogView2CommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/cog-view-2/cog-view-2.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for cog view2 command.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                            \n                                    Public\n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt from which generate art', type: undefined, required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Style\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(Style)@Param({name: 'style', autocomplete: true, description: 'Style of art', required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/cog-view-2/cog-view-2.dto.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param, ParamType } from '@discord-nestjs/core';\n\n/**\n * Enum for style supported by cog-view-2\n *\n * @since 2.0.0\n * @author Karafra\n */\nexport enum Style {\n  NONE = 'none',\n  MAINBODY = 'mainbody',\n  PHOTO = 'photo',\n  FLAT = 'flat',\n  COMICS = 'comics',\n  OIL = 'oil',\n  SKETCH = 'sketch',\n  ISOMETRIC = 'isometric',\n  WATERCOLOR = 'watercolor',\n  CHINESE = 'chinese',\n}\n\n/**\n * DTO for cog view2 command.\n *\n * @author Karafra\n * @since 2.0.0\n */\nexport class CogView2CommandDto {\n  @Param({\n    name: 'prompt',\n    description: 'Prompt from which generate art',\n    type: ParamType.STRING,\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n\n  @Choice(Style)\n  @Param({\n    name: 'style',\n    autocomplete: true,\n    description: 'Style of art',\n    required: false,\n  })\n  public style: Style;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Model.html":{"url":"injectables/CogView2Model.html","title":"injectable - CogView2Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/cog-view-2/cog-view-2.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getImageArray\n                            \n                            \n                                    Public\n                                    Async\n                                getResponse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/models/cog-view-2/cog-view-2.model.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray(prompt: string, style?: Style)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cog-view-2/cog-view-2.model.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getResponse\n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse(prompt: string, style?: Style)\n                \n            \n\n\n            \n                \n                    Defined in src/models/cog-view-2/cog-view-2.model.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport {\n  CogView2Response,\n  ICogView2Request,\n  ICogView2Response,\n  ICogView2ResponseAcknowledged,\n  Style,\n} from '../../types/api/cogView2';\n\n@Injectable()\nexport class CogView2Model {\n  public constructor(private readonly httpService: HttpService) {}\n\n  public async getResponse(\n    prompt: string,\n    style?: Style,\n  ): Promise> {\n    const styleUsed: Style = style || 'mainbody';\n    let response = (await this.httpService.axiosRef.post(\n      'https://hf.space/embed/THUDM/CogView2/api/queue/push/',\n      {\n        fn_index: 0,\n        data: [\n          prompt,\n          false,\n          styleUsed,\n          Math.floor(Math.random() * (2400 - 2) + 2),\n          true,\n          9,\n        ],\n        action: 'predict',\n        session_hash: Math.random().toString(36).slice(2, 12),\n        headers: {\n          Accept: 'application/json',\n        },\n      } as ICogView2Request,\n    )) as AxiosResponse;\n    const hash = response.data.hash;\n    while (\n      (response = await this.httpService.axiosRef.post(\n        'https://hf.space/embed/THUDM/CogView2/api/queue/status/',\n        { hash },\n      )).data.status !== 'COMPLETE'\n    ) {\n      await new Promise((f) => setTimeout(f, 500));\n    }\n    return response as AxiosResponse;\n  }\n\n  public async getImageArray(\n    prompt: string,\n    style?: Style,\n  ): Promise {\n    const response = await this.getResponse(prompt, style);\n    return new CogView2Response('COMPLETE', response.data.data).getImageArray();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CogView2Response.html":{"url":"classes/CogView2Response.html","title":"class - CogView2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CogView2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            ICogView2Response\n                            ICogView2Response\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getImageArray\n                            \n                            \n                                    Public\n                                isCompleted\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(status: Status, data: ICogView2Data)\n                    \n                \n                        \n                            \n                                Defined in src/types/api/cogView2.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        status\n                                                  \n                                                        \n                                                                        Status\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        ICogView2Data\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICogView2Data\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/cogView2.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Status\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/cogView2.ts:28\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getImageArray\n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageArray()\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/cogView2.ts:38\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isCompleted\n                        \n                    \n                \n            \n            \n                \n                    \n                    isCompleted()\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/cogView2.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CogView2Service.html":{"url":"injectables/CogView2Service.html","title":"injectable - CogView2Service","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CogView2Service\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/cog-view-2/cog-view-2.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class handling image generation from given prompt\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(cogView2Model: CogView2Model, collage: Collage)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:20\n                            \n                        \n\n                \n                    \n                            DI constructor, not intended to be called directly\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cogView2Model\n                                                  \n                                                        \n                                                                        CogView2Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                model handling web requests for CogView2 model\n\n                                                        \n                                                \n                                                \n                                                        collage\n                                                  \n                                                        \n                                                                        Collage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling collage generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(prompt: string, style?: Style)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Queued(CogView2Service.name)\n                \n            \n\n            \n                \n                    Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:41\n                \n            \n\n\n            \n                \n                    Generates image collage from given prompt in given style. See github for more examples.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt describing image\n\n                                    \n                                \n                                \n                                    style\n                                    \n                                                Style\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        style in which image should be generated\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            cogView2Service.getArt(&quot;Adam and eve in the garden of eden&quot;);\n                        \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(CogView2Service.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/cog-view-2/cog-view-2.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Queued } from '../../../../decorators/queued.decorator';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { CogView2Model } from '../../../../models/cog-view-2/cog-view-2.model';\nimport { Style } from '../../../../types/api/cogView2';\nimport { MessageAttachmentWithDbRecord } from '../../../../types/extensions/MessageAttachmentWithDbRecord';\nimport { Collage } from '../../../../utilities/collage/collage';\nimport { CreateJobInput } from '../../../../entity/job/dto/create-job.input';\n\n/**\n * Class handling image generation from given prompt\n *\n * @classdesc Service handling image generation based on *THUDM CogView2* model\n * @author Karafra\n * @since 1.4.5\n * @link https://github.com/THUDM/CogView2\n */\n@Injectable()\nexport class CogView2Service {\n  private readonly logger = new Logger(CogView2Service.name);\n\n  /**\n   * DI constructor, not intended to be called directly\n   *\n   * @param cogView2Model model handling web requests for CogView2 model\n   * @param collage service handling collage generation\n   */\n  public constructor(\n    private readonly cogView2Model: CogView2Model,\n    private readonly collage: Collage,\n  ) {}\n\n  /**\n   * Generates image collage from given prompt in given style. See {@link https://github.com/THUDM/CogView2 github} for more examples.\n   *\n   * @param prompt prompt describing image\n   * @param style style in which image should be generated\n   * @example cogView2Service.getArt(\"Adam and eve in the garden of eden\");\n   */\n  @Queued(CogView2Service.name)\n  public async getArt(\n    prompt: string,\n    style?: Style,\n  ): Promise> {\n    this.logger.debug(`Generating ${prompt} in style ${style}`);\n    try {\n      const response = await this.cogView2Model.getImageArray(prompt, style);\n      await this.collage.constructCollage(response);\n      const attachment = this.collage.getAsAttachment();\n      return new MessageAttachmentWithDbRecord(attachment, {\n        images: response,\n      });\n    } catch (err) {\n      throw new CouldNotGenerateArtException(\n        CogView2Service.name,\n        prompt,\n        style as string,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Collage.html":{"url":"injectables/Collage.html","title":"injectable - Collage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Collage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utilities/collage/collage.ts\n        \n\n\n            \n                Description\n            \n            \n                Class for collage of 3x3 grid.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canvas\n                            \n                            \n                                    Private\n                                    Static\n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                constructCollage\n                            \n                            \n                                getAsAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        constructCollage\n                        \n                    \n                \n            \n            \n                \n                    \n                    constructCollage(arr: AiArtImageArray)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/collage/collage.ts:29\n                \n            \n\n\n            \n                \n                    Constructs collage from array of base64 strings.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    arr\n                                    \n                                                AiArtImageArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        array of base64 strings\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        this class\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsAttachment\n                        \n                    \n                \n            \n            \n                \ngetAsAttachment(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/utilities/collage/collage.ts:42\n                \n            \n\n\n            \n                \n                    Converts collage to discord sendable attachment.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Date.now().toString()\n                                    \n\n                                    \n                                        name of collage.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageAttachment\n\n                    \n                    \n                        collage as Discord sendable attachment.\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        canvas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/utilities/collage/collage.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    width: 3,\n    height: 3,\n    imageWidth: 300,\n    imageHeight: 300,\n    spacing: 20,\n    sources: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in src/utilities/collage/collage.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport createCollage from '@settlin/collage';\nimport { MessageAttachment } from 'discord.js';\nimport { AiArtImageArray } from '../../types/api/ai-art';\n\n/**\n * Class for collage of 3x3 grid.\n *\n * @author Karafra\n * @since 1.0\n */\n@Injectable()\nexport class Collage {\n  private static readonly options: any = {\n    width: 3,\n    height: 3,\n    imageWidth: 300,\n    imageHeight: 300,\n    spacing: 20,\n    sources: [],\n  };\n  public canvas: any;\n  /**\n   * Constructs collage from array of base64 strings.\n   *\n   * @param arr array of base64 strings\n   * @returns this class\n   */\n  public async constructCollage(arr: AiArtImageArray): Promise {\n    const options = Collage.options;\n    options.sources = arr.map((image: string) => Buffer.from(image, 'base64'));\n    this.canvas = await createCollage(options);\n    return this;\n  }\n\n  /**\n   * Converts collage to discord sendable attachment.\n   *\n   * @param name name of collage.\n   * @returns collage as Discord sendable attachment.\n   */\n  getAsAttachment(name: string = Date.now().toString()): MessageAttachment {\n    const buffer = this.canvas.toBuffer('image/png');\n    return new MessageAttachment(buffer, `${name}.png`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommandsModule.html":{"url":"modules/CommandsModule.html","title":"module - CommandsModule","body":"\n                   \n\n\n\n\n    Modules\n    CommandsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CommandsModule\n\n\n\ncluster_CommandsModule_imports\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nCommandsModule\n\nCommandsModule\n\nCommandsModule -->\n\nEntityModule->CommandsModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommandsModule -->\n\nLoggerModule->CommandsModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nCommandsModule -->\n\nServicesModule->CommandsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/commands/commands.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            ServicesModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DiscordModule } from '@discord-nestjs/core';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EntityModule } from '../entity/entity.module';\nimport { ServicesModule } from '../services/services.module';\nimport { InjectDynamicProviders } from 'nestjs-dynamic-providers';\nimport { LoggerModule } from '../logging/logger.module';\n\n@InjectDynamicProviders('dist/**/*.command.js')\n@Module({\n  imports: [\n    ServicesModule,\n    DiscordModule.forFeature(),\n    ConfigModule,\n    EntityModule,\n    LoggerModule,\n  ],\n})\nexport class CommandsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CouldNotGenerateArtException.html":{"url":"classes/CouldNotGenerateArtException.html","title":"class - CouldNotGenerateArtException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CouldNotGenerateArtException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/CouldNotGenerateArtException.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(serviceName: string, prompt: string, style?: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/CouldNotGenerateArtException.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        serviceName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        prompt\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        style\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CouldNotGenerateArtException extends Error {\n  public constructor(serviceName: string, prompt: string, style?: string) {\n    super(\n      `Could not generate art \"${prompt}\" based on ${serviceName}${\n        style ? ' in style \"' + style + '\"' : ''\n      }`,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CouldNotGenerateWomboArtException.html":{"url":"classes/CouldNotGenerateWomboArtException.html","title":"class - CouldNotGenerateWomboArtException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CouldNotGenerateWomboArtException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/CouldNotGenerateWomboArtException.ts\n        \n\n\n            \n                Description\n            \n            \n                Exception thrown when wombo art generation fails.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/CouldNotGenerateWomboArtException.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CouldNotGenerateWomboArtException extends Error {\n  public constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateJobInput.html":{"url":"classes/CreateJobInput.html","title":"class - CreateJobInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateJobInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/dto/create-job.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _id\n                            \n                            \n                                images\n                            \n                            \n                                    Optional\n                                messageId\n                            \n                            \n                                    Optional\n                                messageLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        messageLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/create-job.input.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateJobInput {\n  _id?: string;\n  messageLink?: string;\n  messageId?: string;\n  images: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DalleMiniCommand.html":{"url":"injectables/DalleMiniCommand.html","title":"injectable - DalleMiniCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DalleMiniCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/dalle-mini/dalle-mini.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command handling interactions related to dalle-mini art generation,\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(logger: AiArtLoggerService, jobsResolver: JobResolver, dalleMiniService: DalleMiniService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        AiArtLoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jobsResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dalleMiniService\n                                                  \n                                                        \n                                                                        DalleMiniService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: DalleMiniCommandDto, executionContext: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/dalle-mini/dalle-mini.command.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                DalleMiniCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    executionContext\n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { DalleMiniService } from '../../../services/commands/art/dalle-mini/dalle-mini.service';\nimport { DalleMiniCommandDto } from './dalle-mini.dto';\nimport { AiArtLoggerService } from '../../../logging/ai-art-logger.service';\n\n/**\n * Command handling interactions related to dalle-mini art generation,\n *\n * @class\n * @classdesc Top level command handling image generation using Dalle-mini model. For example art please see {@link https://huggingface.co/spaces/dalle-mini/dalle-mini Dalle-mini website}\n * @example /ai-art dalle-mini prompt: \"Adam and Eve in the garden of Eden\n * @since 2.0.0\n * @author Karafra\n */\n@IncludeInHelp({\n  name: '/ai-art dalle-mini',\n  description:\n    'Generates collage of 9 images from given prompt using Dall-E ini model.',\n  usage: '/ai-art dalle-mini prompt: Liberty leading people to freedom',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of image',\n    },\n  ],\n})\n@SubCommand({\n  name: 'dalle-mini',\n  description: 'generate AiArt based on given prompt using dall-e mini model',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class DalleMiniCommand\n  implements DiscordTransformedCommand\n{\n  public constructor(\n    private readonly logger: AiArtLoggerService,\n    private readonly jobsResolver: JobResolver,\n    private readonly dalleMiniService: DalleMiniService,\n  ) {}\n\n  public async handler(\n    @Payload() dto: DalleMiniCommandDto,\n    executionContext: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('Dalle mini command called');\n    await executionContext.interaction.deferReply();\n    try {\n      const messageAttachmentWithDbRecord = await this.dalleMiniService.getArt(\n        dto.prompt,\n      );\n      await executionContext.interaction.deleteReply();\n      const message = await executionContext.interaction.channel.send({\n        files: [messageAttachmentWithDbRecord.attachment],\n        content: ` \\n\\n :art: ${dto.prompt} :frame_photo:`,\n      });\n      const { dbRecord } = messageAttachmentWithDbRecord;\n      dbRecord.messageId = message.id;\n      dbRecord.messageLink = message.url;\n      await this.jobsResolver.create(dbRecord);\n      this.logger.debug('Dalle mini command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Dalle mini command failed with exception: ${err.message}`,\n      );\n      await executionContext.interaction.followUp(\n        `:frowning: could not process this query \\`${dto.prompt}\\`. Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DalleMiniCommandDto.html":{"url":"classes/DalleMiniCommandDto.html","title":"class - DalleMiniCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DalleMiniCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/dalle-mini/dalle-mini.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt to generate image from', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/dalle-mini/dalle-mini.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Param } from '@discord-nestjs/core';\n\nexport class DalleMiniCommandDto {\n  @Param({\n    name: 'prompt',\n    description: 'Prompt to generate image from',\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DalleMiniService.html":{"url":"injectables/DalleMiniService.html","title":"injectable - DalleMiniService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DalleMiniService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/dalle-mini/dalle-mini.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Class handling image generation from given prompt.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(collage: Collage, dalleMiniModel: AiArtModel)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:20\n                            \n                        \n\n                \n                    \n                            DI constructor. Not intended to be sed directly.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        collage\n                                                  \n                                                        \n                                                                        Collage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling collage generation\n\n                                                        \n                                                \n                                                \n                                                        dalleMiniModel\n                                                  \n                                                        \n                                                                        AiArtModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                model handling web requests for CogView2 model\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArt(prompt: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Queued(DalleMiniService.name)\n                \n            \n\n            \n                \n                    Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:40\n                \n            \n\n\n            \n                \n                    Generates art from given prompt. For examples refer to dalle mini website.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        prompt describing the image.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                        Example :\n                        \n                            await this.dalleMiniService.getArt(&quot;Lowecraftian monster&quot;);\n                        \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(DalleMiniService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/dalle-mini/dalle-mini.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Queued } from '../../../../decorators/queued.decorator';\nimport { CouldNotGenerateArtException } from '../../../../exceptions/CouldNotGenerateArtException';\nimport { AiArtModel } from '../../../../models/ai-art/ai-art.model';\nimport { MessageAttachmentWithDbRecord } from '../../../../types/extensions/MessageAttachmentWithDbRecord';\nimport { Collage } from '../../../../utilities/collage/collage';\nimport { CreateJobInput } from '../../../../entity/job/dto/create-job.input';\n\n/**\n * Class handling image generation from given prompt.\n *\n * @class\n * @classdesc Service handling image generation based on *Dalle mini* model\n * @author Karafra\n * @since 2.0.0\n * @link https://huggingface.co/spaces/dalle-mini/dalle-mini\n */\n@Injectable()\nexport class DalleMiniService {\n  private readonly logger = new Logger(DalleMiniService.name);\n\n  /**\n   * DI constructor. Not intended to be sed directly.\n   *\n   * @param dalleMiniModel model handling web requests for CogView2 model\n   * @param collage service handling collage generation\n   */\n  public constructor(\n    private readonly collage: Collage,\n    private readonly dalleMiniModel: AiArtModel,\n  ) {}\n\n  /**\n   * Generates art from given prompt. For examples refer to {@link https://huggingface.co/spaces/dalle-mini/dalle-mini dalle mini website}.\n   *\n   * @param prompt prompt describing the image.\n   * @example await this.dalleMiniService.getArt(\"Lowecraftian monster\");\n   */\n  @Queued(DalleMiniService.name)\n  public async getArt(\n    prompt: string,\n  ): Promise> {\n    this.logger.debug(`Started processing art for ${prompt}`);\n    for (let i = 0; i  setTimeout(f, 3000));\n      }\n    }\n    throw new CouldNotGenerateArtException(DalleMiniService.name, prompt);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EntityModule.html":{"url":"modules/EntityModule.html","title":"module - EntityModule","body":"\n                   \n\n\n\n\n    Modules\n    EntityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EntityModule\n\n\n\ncluster_EntityModule_imports\n\n\n\ncluster_EntityModule_exports\n\n\n\n\nJobModule\n\nJobModule\n\n\n\nEntityModule\n\nEntityModule\n\nEntityModule -->\n\nJobModule->EntityModule\n\n\n\n\n\nJobModule \n\nJobModule \n\nJobModule  -->\n\nEntityModule->JobModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entity/entity.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            JobModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JobModule } from './job/job.module';\n\n@Module({\n  imports: [JobModule],\n  exports: [JobModule],\n})\nexport class EntityModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GatewayModule.html":{"url":"modules/GatewayModule.html","title":"module - GatewayModule","body":"\n                   \n\n\n\n\n    Modules\n    GatewayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_providers\n\n\n\ncluster_GatewayModule_imports\n\n\n\ncluster_GatewayModule_exports\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nEntityModule->GatewayModule\n\n\n\n\n\nBotGateway \n\nBotGateway \n\nBotGateway  -->\n\nGatewayModule->BotGateway \n\n\n\n\n\nBotGateway\n\nBotGateway\n\nGatewayModule -->\n\nBotGateway->GatewayModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/gateway/gateway.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BotGateway\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EntityModule } from '../entity/entity.module';\nimport { BotGateway } from './discord/discord.gateway';\n\n@Module({\n  providers: [BotGateway],\n  imports: [EntityModule],\n  exports: [BotGateway],\n})\nexport class GatewayModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GoogleApiAuthResponse.html":{"url":"interfaces/GoogleApiAuthResponse.html","title":"interface - GoogleApiAuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GoogleApiAuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expiresIn\n                                        \n                                \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            kind\n                                        \n                                \n                                \n                                        \n                                            localId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expiresIn:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        kind\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        kind:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        localId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GoogleAuthenticationToolkitError.html":{"url":"classes/GoogleAuthenticationToolkitError.html","title":"class - GoogleAuthenticationToolkitError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GoogleAuthenticationToolkitError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/GoogleAuthenticationToolkitError.ts\n        \n\n\n            \n                Description\n            \n            \n                Error thrown when Google toolkit authentication fails.\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/GoogleAuthenticationToolkitError.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class GoogleAuthenticationToolkitError extends Error {\n  public constructor(message: string) {\n    super(message);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpCommand.html":{"url":"injectables/HelpCommand.html","title":"injectable - HelpCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/help/help.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(helpService: HelpService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/help/help.command.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helpService\n                                                  \n                                                        \n                                                                        HelpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(interaction: CommandInteraction)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/help/help.command.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            CommandInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Command, DiscordCommand, UseCollectors } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport {\n  CacheType,\n  CommandInteraction,\n  MessageActionRow,\n  MessageButton,\n} from 'discord.js';\nimport { HelpService } from '../../services/commands/help/help.service';\nimport { HelpInteractionCollector } from './collectors/help.collector';\n\n@Command({\n  name: 'help',\n  description: 'Get help',\n})\n@Injectable()\n@UseCollectors(HelpInteractionCollector)\nexport class HelpCommand implements DiscordCommand {\n  public constructor(private readonly helpService: HelpService) {}\n\n  public async handler(\n    interaction: CommandInteraction,\n  ): Promise {\n    const help = this.helpService.getHelpAtIndex(0);\n    const row = new MessageActionRow()\n      .addComponents(\n        new MessageButton({\n          customId: 'previous',\n          label: '◀️',\n          style: 'PRIMARY',\n        }),\n      )\n      .addComponents(\n        new MessageButton({\n          customId: 'next',\n          label: '▶️',\n          style: 'PRIMARY',\n        }),\n      );\n    await interaction.reply({\n      embeds: [help],\n      components: [row],\n      ephemeral: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpInteractionCollector.html":{"url":"injectables/HelpInteractionCollector.html","title":"injectable - HelpInteractionCollector","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpInteractionCollector\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/help/collectors/help.collector.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                index\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                onCollect\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(helpService: HelpService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/help/collectors/help.collector.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        helpService\n                                                  \n                                                        \n                                                                        HelpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        onCollect\n                        \n                    \n                \n            \n            \n                \n                    \n                    onCollect(interaction: ButtonInteraction)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @On('collect')\n                \n            \n\n            \n                \n                    Defined in src/commands/help/collectors/help.collector.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    interaction\n                                    \n                                            ButtonInteraction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/commands/help/collectors/help.collector.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { InteractionEventCollector, On } from '@discord-nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { ButtonInteraction } from 'discord.js';\nimport { HelpService } from '../../../services/commands/help/help.service';\n\n@Injectable()\n@InteractionEventCollector({ time: 300_000 })\nexport class HelpInteractionCollector {\n  private index = 0;\n  public constructor(private readonly helpService: HelpService) {}\n\n  @On('collect')\n  public async onCollect(interaction: ButtonInteraction) {\n    if (interaction.customId === 'next') {\n      ++this.index;\n    } else if (interaction.customId === 'previous') {\n      --this.index;\n    }\n    const help = this.helpService.getHelpAtIndex(this.index);\n    await interaction.update({\n      embeds: [help],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HelpService.html":{"url":"injectables/HelpService.html","title":"injectable - HelpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HelpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/help/help.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                iconUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHelpAtIndex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getHelpAtIndex\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHelpAtIndex(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/help/help.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageEmbed\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        iconUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://raw.githubusercontent.com/karafra/ai-art/main/.github/images/logo.png'\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/help/help.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EmbedField, MessageEmbed } from 'discord.js';\nimport { __INCLUDE_IN_HELP } from '../../../decorators/includeInHelp.decorator';\nimport { ICommandHelp } from '../../../types/command/help';\n\n@Injectable()\nexport class HelpService {\n  private readonly iconUrl =\n    'https://raw.githubusercontent.com/karafra/ai-art/main/.github/images/logo.png';\n  public getHelpAtIndex(index: number): MessageEmbed {\n    const modularIndex =\n      index >= 0\n        ? index % __INCLUDE_IN_HELP.length\n        : 2 - ((2 - index) % __INCLUDE_IN_HELP.length);\n    const help = __INCLUDE_IN_HELP[modularIndex] as ICommandHelp;\n    const embed = new MessageEmbed();\n    embed.setAuthor({\n      name: 'AiArt Help',\n      iconURL: this.iconUrl,\n      url: 'https://github.com/karafra/ai-art/',\n    });\n    embed.setTitle(help.name);\n    embed.setDescription(help.description);\n    const parameterFields: EmbedField[] = [];\n    help.parameters.forEach((parameter) =>\n      parameterFields.push({\n        name: parameter.name,\n        value: parameter.optional\n          ? `${parameter.description} (Optional)`\n          : parameter.description,\n        inline: true,\n      }),\n    );\n    embed.addField('\\u200B', '**Parameters:**');\n    embed.addFields(parameterFields);\n    embed.addField('Usage', `\\`${help.usage}\\``);\n    embed.setFooter({\n      text: `Page ${modularIndex + 1}/${__INCLUDE_IN_HELP.length}`,\n    });\n    return embed;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Data.html":{"url":"interfaces/ICogView2Data.html","title":"interface - ICogView2Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average_duration\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average_duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average_duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     [null, string, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [null, string, ]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Request.html":{"url":"interfaces/ICogView2Request.html","title":"interface - ICogView2Request","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Request\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            fn_index\n                                        \n                                \n                                \n                                        \n                                            session_hash\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         ActionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ActionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         [string, boolean, Style, number, boolean, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         [string, boolean, Style, number, boolean, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fn_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fn_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        session_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2Response.html":{"url":"interfaces/ICogView2Response.html","title":"interface - ICogView2Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hash\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            queue_position\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         ICogView2Data\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICogView2Data\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue_position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICogView2ResponseAcknowledged.html":{"url":"interfaces/ICogView2ResponseAcknowledged.html","title":"interface - ICogView2ResponseAcknowledged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICogView2ResponseAcknowledged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/cogView2.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            queue_position\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue_position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue_position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         Status\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Status\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Status = 'COMPLETE' | 'PENDING' | 'QUEUED';\n\nexport interface ICogView2Data {\n  data: [\n    null,\n    string,\n    [string, string, string, string, string, string, string],\n  ];\n  duration: number;\n  average_duration: number;\n}\n\nexport interface ICogView2Response {\n  status?: Status;\n  hash?: string;\n  queue_position?: number;\n  data: ICogView2Data;\n}\n\nexport interface ICogView2ResponseAcknowledged {\n  hash: string;\n  status: Status;\n  queue_position: number;\n}\n\nexport class CogView2Response implements ICogView2Response, ICogView2Response {\n  public data: ICogView2Data;\n  public status: Status;\n  public constructor(status: Status, data: ICogView2Data) {\n    this.data = data;\n    this.status = status;\n  }\n\n  public isCompleted(): boolean {\n    return this.status === 'COMPLETE';\n  }\n\n  public getImageArray(): [\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n    string,\n  ] {\n    return this.data.data[2].map((e) =>\n      e.replace('data:image/png;base64,', ''),\n    ) as any;\n  }\n}\n\nexport type Style =\n  | 'none'\n  | 'mainbody'\n  | 'photo'\n  | 'flat'\n  | 'comics'\n  | 'oil'\n  | 'sketch'\n  | 'isometric'\n  | 'watercolor'\n  | 'chinese';\n\nexport type ActionType = 'predict';\n\nexport interface ICogView2Request {\n  action: ActionType;\n  session_hash: string;\n  fn_index: number;\n  data: [string, boolean, Style, number, boolean, number];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommandHelp.html":{"url":"interfaces/ICommandHelp.html","title":"interface - ICommandHelp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommandHelp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/command/help.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            parameters\n                                        \n                                \n                                \n                                        \n                                            usage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parameters\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parameters:         ICommandParameter[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ICommandParameter[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        usage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        usage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICommandParameter {\n  name: string;\n  optional?: boolean;\n  description: string;\n}\n\nexport interface ICommandHelp {\n  name: string;\n  description: string;\n  usage: string;\n  parameters: ICommandParameter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICommandParameter.html":{"url":"interfaces/ICommandParameter.html","title":"interface - ICommandParameter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICommandParameter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/command/help.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optional\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optional\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optional:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ICommandParameter {\n  name: string;\n  optional?: boolean;\n  description: string;\n}\n\nexport interface ICommandHelp {\n  name: string;\n  description: string;\n  usage: string;\n  parameters: ICommandParameter[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IWomboDreamStyle.html":{"url":"interfaces/IWomboDreamStyle.html","title":"interface - IWomboDreamStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IWomboDreamStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Job.html":{"url":"entities/Job.html","title":"entity - Job","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Job\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/entities/job.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                images\n                            \n                            \n                                messageId\n                            \n                            \n                                messageLink\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ObjectIdColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        images\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        messageLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/job/entities/job.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Column, Entity, ObjectIdColumn } from 'typeorm';\n\n@Entity({ name: 'Job', database: 'ai-art' })\nexport class Job {\n  @ObjectIdColumn()\n  _id: string;\n\n  @Column()\n  images: string[];\n\n  @Column()\n  messageId: string;\n\n  @Column()\n  messageLink: string;\n\n  public constructor(images: string[]) {\n    this.images = images;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JobModule.html":{"url":"modules/JobModule.html","title":"module - JobModule","body":"\n                   \n\n\n\n\n    Modules\n    JobModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_JobModule\n\n\n\ncluster_JobModule_providers\n\n\n\ncluster_JobModule_exports\n\n\n\n\nJobResolver \n\nJobResolver \n\n\n\nJobService \n\nJobService \n\n\n\nJobModule\n\nJobModule\n\nJobResolver  -->\n\nJobModule->JobResolver \n\n\n\nJobService  -->\n\nJobModule->JobService \n\n\n\n\n\nJobService\n\nJobService\n\nJobModule -->\n\nJobService->JobModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/entity/job/job.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JobService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JobResolver\n                        \n                        \n                            JobService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Job } from './entities/job.entity';\nimport { JobResolver } from './job.resolver';\nimport { JobService } from './job.service';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Job])],\n  providers: [JobResolver, JobService],\n  exports: [JobResolver, JobService],\n})\nexport class JobModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JobResolver.html":{"url":"classes/JobResolver.html","title":"class - JobResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JobResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/job.resolver.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOne\n                            \n                            \n                                    Public\n                                findOneByMessageId\n                            \n                            \n                                    Public\n                                remove\n                            \n                            \n                                    Public\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jobService: JobService)\n                    \n                \n                        \n                            \n                                Defined in src/entity/job/job.resolver.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jobService\n                                                  \n                                                        \n                                                                        JobService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobInput: CreateJobInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('createJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobInput\n                                    \n                                                CreateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('jobs')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('job')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        findOneByMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOneByMessageId(messageId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query('job')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('removeJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(updateJobInput: UpdateJobInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation('updateJob')\n                \n            \n\n            \n                \n                    Defined in src/entity/job/job.resolver.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateJobInput\n                                    \n                                                UpdateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, Resolver } from '@nestjs/graphql';\nimport { CreateJobInput } from './dto/create-job.input';\nimport { UpdateJobInput } from './dto/update-job.input';\nimport { JobService } from './job.service';\n\n@Resolver('Job')\nexport class JobResolver {\n  constructor(private readonly jobService: JobService) {}\n\n  @Mutation('createJob')\n  public create(@Args('createJobInput') createJobInput: CreateJobInput) {\n    return this.jobService.create(createJobInput);\n  }\n\n  @Query('jobs')\n  public findAll() {\n    const findAllPromise = this.jobService.findAll();\n    return findAllPromise;\n  }\n\n  @Query('job')\n  public findOne(@Args('id') id: string) {\n    return this.jobService.findOne(id);\n  }\n\n  @Query('job')\n  public findOneByMessageId(messageId: string) {\n    return this.jobService.findByMessageId(messageId);\n  }\n\n  @Mutation('updateJob')\n  public update(@Args('updateJobInput') updateJobInput: UpdateJobInput) {\n    return this.jobService.update(updateJobInput._id, updateJobInput);\n  }\n\n  @Mutation('removeJob')\n  public remove(@Args('id') id: string) {\n    return this.jobService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JobService.html":{"url":"injectables/JobService.html","title":"injectable - JobService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JobService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/job.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByMessageId\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(repository: MongoRepository)\n                    \n                \n                        \n                            \n                                Defined in src/entity/job/job.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        MongoRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createJobInput: CreateJobInput)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createJobInput\n                                    \n                                                CreateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByMessageId(messageId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateJobInput: UpdateJobInput)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/job/job.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateJobInput\n                                    \n                                                UpdateJobInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { MongoRepository } from 'typeorm';\nimport { CreateJobInput } from './dto/create-job.input';\nimport { UpdateJobInput } from './dto/update-job.input';\nimport { Job } from './entities/job.entity';\n\n@Injectable()\nexport class JobService {\n  public constructor(\n    @InjectRepository(Job)\n    private readonly repository: MongoRepository,\n  ) {}\n\n  public async create(createJobInput: CreateJobInput): Promise {\n    return await this.repository.save(createJobInput);\n  }\n\n  public async findAll(): Promise {\n    return await this.repository.find();\n  }\n\n  public async findByMessageId(messageId: string) {\n    return await this.repository.findOneBy({\n      where: {\n        messageId: messageId,\n      },\n    });\n  }\n\n  public async findOne(id: string): Promise {\n    const result = await this.repository.findOne({\n      where: {\n        _id: id,\n      },\n    });\n    return result;\n  }\n\n  public async update(\n    id: string,\n    updateJobInput: UpdateJobInput,\n  ): Promise {\n    const operation = await this.repository.findOneAndUpdate(\n      {\n        _id: id,\n      },\n      {\n        $set: updateJobInput,\n      },\n    );\n    return operation.value;\n  }\n\n  public async remove(id: string) {\n    const operation = await this.repository.findOneAndDelete({\n      _id: id,\n    });\n    return operation.value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nAiArtLoggerService \n\nAiArtLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nAiArtLoggerService  -->\n\nLoggerModule->AiArtLoggerService \n\n\n\n\n\nAiArtLoggerService\n\nAiArtLoggerService\n\nLoggerModule -->\n\nAiArtLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/logging/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiArtLoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiArtLoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AiArtLoggerService } from './ai-art-logger.service';\n\n@Module({\n  imports: [ConfigModule],\n  providers: [AiArtLoggerService],\n  exports: [AiArtLoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageAttachmentWithDbRecord.html":{"url":"classes/MessageAttachmentWithDbRecord.html","title":"class - MessageAttachmentWithDbRecord","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageAttachmentWithDbRecord\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/extensions/MessageAttachmentWithDbRecord.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                _dbRecord\n                            \n                            \n                                    Private\n                                _messageAttachment\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dbRecord\n                                \n                                \n                                    attachment\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(attachment: MessageAttachment, dbRecord?: T)\n                    \n                \n                        \n                            \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attachment\n                                                  \n                                                        \n                                                                        MessageAttachment\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbRecord\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        _dbRecord\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T\n\n                    \n                \n                    \n                        \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _messageAttachment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageAttachment\n\n                    \n                \n                    \n                        \n                                Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dbRecord\n                    \n                \n\n                \n                    \n                        getdbRecord()\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:8\n                                \n                            \n\n                \n                    \n                        setdbRecord(dbRecord: T)\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:12\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            dbRecord\n                                                    \n                                                            \n                                                                        T\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        attachment\n                    \n                \n\n                \n                    \n                        getattachment()\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:16\n                                \n                            \n\n                \n                    \n                        setattachment(attachment: MessageAttachment)\n                    \n                \n                            \n                                \n                                    Defined in src/types/extensions/MessageAttachmentWithDbRecord.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            attachment\n                                                    \n                                                            \n                                                                            MessageAttachment\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { MessageAttachment } from 'discord.js';\n\nexport class MessageAttachmentWithDbRecord {\n  private _dbRecord?: T;\n\n  private _messageAttachment: MessageAttachment;\n\n  public get dbRecord(): T {\n    return this._dbRecord;\n  }\n\n  public set dbRecord(dbRecord: T) {\n    this._dbRecord = dbRecord;\n  }\n\n  public get attachment() {\n    return this._messageAttachment;\n  }\n\n  public set attachment(attachment: MessageAttachment) {\n    this._messageAttachment = attachment;\n  }\n\n  constructor(attachment: MessageAttachment, dbRecord?: T) {\n    this._messageAttachment = attachment;\n    this._dbRecord = dbRecord;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModelsModule.html":{"url":"modules/ModelsModule.html","title":"module - ModelsModule","body":"\n                   \n\n\n\n\n    Modules\n    ModelsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ModelsModule\n\n\n\ncluster_ModelsModule_exports\n\n\n\ncluster_ModelsModule_imports\n\n\n\ncluster_ModelsModule_providers\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nModelsModule\n\nModelsModule\n\nModelsModule -->\n\nLoggerModule->ModelsModule\n\n\n\n\n\nAiArtModel \n\nAiArtModel \n\nAiArtModel  -->\n\nModelsModule->AiArtModel \n\n\n\n\n\nAiStoryModel \n\nAiStoryModel \n\nAiStoryModel  -->\n\nModelsModule->AiStoryModel \n\n\n\n\n\nCogView2Model \n\nCogView2Model \n\nCogView2Model  -->\n\nModelsModule->CogView2Model \n\n\n\n\n\nWomboDreamModel \n\nWomboDreamModel \n\nWomboDreamModel  -->\n\nModelsModule->WomboDreamModel \n\n\n\n\n\nAiArtModel\n\nAiArtModel\n\nModelsModule -->\n\nAiArtModel->ModelsModule\n\n\n\n\n\nAiStoryModel\n\nAiStoryModel\n\nModelsModule -->\n\nAiStoryModel->ModelsModule\n\n\n\n\n\nAuthModel\n\nAuthModel\n\nModelsModule -->\n\nAuthModel->ModelsModule\n\n\n\n\n\nCogView2Model\n\nCogView2Model\n\nModelsModule -->\n\nCogView2Model->ModelsModule\n\n\n\n\n\nWomboDreamModel\n\nWomboDreamModel\n\nModelsModule -->\n\nWomboDreamModel->ModelsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/models/models.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiArtModel\n                        \n                        \n                            AiStoryModel\n                        \n                        \n                            AuthModel\n                        \n                        \n                            CogView2Model\n                        \n                        \n                            WomboDreamModel\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiArtModel\n                        \n                        \n                            AiStoryModel\n                        \n                        \n                            CogView2Model\n                        \n                        \n                            WomboDreamModel\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AiArtModel } from './ai-art/ai-art.model';\nimport { AiStoryModel } from './ai-story/ai-story.model';\nimport { CogView2Model } from './cog-view-2/cog-view-2.model';\nimport { AuthModel } from './wombo-dream/auth/auth-model.model';\nimport { WomboDreamModel } from './wombo-dream/wombo-dream.model';\nimport { LoggerModule } from '../logging/logger.module';\n\n@Module({\n  providers: [\n    AiStoryModel,\n    AiArtModel,\n    CogView2Model,\n    WomboDreamModel,\n    AuthModel,\n  ],\n  imports: [HttpModule, ConfigModule, LoggerModule],\n  exports: [AiArtModel, AiStoryModel, CogView2Model, WomboDreamModel],\n})\nexport class ModelsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OpenAiCommand.html":{"url":"injectables/OpenAiCommand.html","title":"injectable - OpenAiCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OpenAiCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/open-ai/open-ai.command.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(aiStoryService: AiStoryService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-story/open-ai/open-ai.command.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        aiStoryService\n                                                  \n                                                        \n                                                                        AiStoryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: OpenAiCommandDto, undefined: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-story/open-ai/open-ai.command.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                OpenAiCommandDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(OpenAiCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.command.ts:39\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { TransformPipe } from '@discord-nestjs/common';\nimport {\n  DiscordTransformedCommand,\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { AiStoryService } from '../../../services/commands/story/ai-story/ai-story.service';\nimport { OpenAiCommandDto } from './open-ai.dto';\n\n@IncludeInHelp({\n  name: '/ai-story story',\n  description: 'Generates story from given headline',\n  usage: '/ai-story story headline: Tell me story about Alice in wonderland',\n  parameters: [\n    {\n      name: 'headline',\n      description: 'Headline of story',\n    },\n    {\n      name: 'model',\n      description: 'What model to use',\n      optional: true,\n    },\n  ],\n})\n@SubCommand({\n  name: 'open-ai',\n  description: 'Generate short story based on openAiModel of your choosing ',\n})\n@Injectable()\n@UsePipes(TransformPipe)\nexport class OpenAiCommand\n  implements DiscordTransformedCommand\n{\n  private readonly logger = new Logger(OpenAiCommand.name);\n\n  public constructor(private readonly aiStoryService: AiStoryService) {}\n\n  public async handler(\n    @Payload() dto: OpenAiCommandDto,\n    { interaction }: TransformedCommandExecutionContext,\n  ): Promise {\n    this.logger.debug('/ai-story open-ai command called');\n    await interaction.deferReply();\n    try {\n      const story = await this.aiStoryService.getArt(dto.headline, dto.model);\n      await interaction.followUp(story);\n      this.logger.debug('Open-ai command execution finished successfully');\n    } catch (err) {\n      this.logger.error(\n        `Open-ai command failed with exception: ${err.message}`,\n      );\n      await interaction.followUp(\n        `:frowning: Could not process prompt due to internal error (${err.message}). Please try later.`,\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenAiCommandDto.html":{"url":"classes/OpenAiCommandDto.html","title":"class - OpenAiCommandDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenAiCommandDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-story/open-ai/open-ai.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                headline\n                            \n                            \n                                    Public\n                                model\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        headline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'headline', description: 'Headline to generate story from', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        model\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Model\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(Model)@Param({name: 'model', description: 'Model to use for story generation', required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-story/open-ai/open-ai.dto.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param } from '@discord-nestjs/core';\n\nexport type M =\n  | 'davinci'\n  | 'davinci-instruct-beta'\n  | 'text-davinci-001'\n  | 'text-davinci-002'\n  | 'text-curie-001'\n  | 'text-babage-001'\n  | 'text-ada-001';\n\nexport enum Model {\n  DAVINCI = 'davinci',\n  DAVINCI_INSTRUCT_BETA = 'davinci-instruct-beta',\n  TEXT_DAVINCI_001 = 'text-davinci-001',\n  TEXT_DAVINCI_002 = 'text-davinci-002',\n  TEXT_CURIE_001 = 'text-curie-001',\n  TEXT_BABAGE_001 = 'text-babage-001',\n  TEXT_ADA_001 = 'text-ada-001',\n}\n\nexport class OpenAiCommandDto {\n  @Param({\n    name: 'headline',\n    description: 'Headline to generate story from',\n    required: true,\n    autocomplete: true,\n  })\n  public headline: string;\n\n  @Choice(Model)\n  @Param({\n    name: 'model',\n    description: 'Model to use for story generation',\n    required: true,\n    autocomplete: true,\n  })\n  public model: Model;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ServicesModule.html":{"url":"modules/ServicesModule.html","title":"module - ServicesModule","body":"\n                   \n\n\n\n\n    Modules\n    ServicesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_imports\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\n\nEntityModule\n\nEntityModule\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nEntityModule->ServicesModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nServicesModule -->\n\nModelsModule->ServicesModule\n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nServicesModule -->\n\nUtilitiesModule->ServicesModule\n\n\n\n\n\nAiStoryService \n\nAiStoryService \n\nAiStoryService  -->\n\nServicesModule->AiStoryService \n\n\n\n\n\nAmqpService \n\nAmqpService \n\nAmqpService  -->\n\nServicesModule->AmqpService \n\n\n\n\n\nCogView2Service \n\nCogView2Service \n\nCogView2Service  -->\n\nServicesModule->CogView2Service \n\n\n\n\n\nDalleMiniService \n\nDalleMiniService \n\nDalleMiniService  -->\n\nServicesModule->DalleMiniService \n\n\n\n\n\nHelpService \n\nHelpService \n\nHelpService  -->\n\nServicesModule->HelpService \n\n\n\n\n\nWomboDreamService \n\nWomboDreamService \n\nWomboDreamService  -->\n\nServicesModule->WomboDreamService \n\n\n\n\n\nAiStoryService\n\nAiStoryService\n\nServicesModule -->\n\nAiStoryService->ServicesModule\n\n\n\n\n\nAmqpService\n\nAmqpService\n\nServicesModule -->\n\nAmqpService->ServicesModule\n\n\n\n\n\nCogView2Service\n\nCogView2Service\n\nServicesModule -->\n\nCogView2Service->ServicesModule\n\n\n\n\n\nDalleMiniService\n\nDalleMiniService\n\nServicesModule -->\n\nDalleMiniService->ServicesModule\n\n\n\n\n\nHelpService\n\nHelpService\n\nServicesModule -->\n\nHelpService->ServicesModule\n\n\n\n\n\nWomboDreamService\n\nWomboDreamService\n\nServicesModule -->\n\nWomboDreamService->ServicesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/services/services.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AiStoryService\n                        \n                        \n                            AmqpService\n                        \n                        \n                            CogView2Service\n                        \n                        \n                            DalleMiniService\n                        \n                        \n                            HelpService\n                        \n                        \n                            WomboDreamService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            EntityModule\n                        \n                        \n                            ModelsModule\n                        \n                        \n                            UtilitiesModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AiStoryService\n                        \n                        \n                            AmqpService\n                        \n                        \n                            CogView2Service\n                        \n                        \n                            DalleMiniService\n                        \n                        \n                            HelpService\n                        \n                        \n                            WomboDreamService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EntityModule } from '../entity/entity.module';\nimport { ModelsModule } from '../models/models.module';\nimport { UtilitiesModule } from '../utilities/utilities.module';\nimport { AmqpService } from './amqp/amqp.service';\nimport { CogView2Service } from './commands/art/cog-view-2/cog-view-2.service';\nimport { DalleMiniService } from './commands/art/dalle-mini/dalle-mini.service';\nimport { HelpService } from './commands/help/help.service';\nimport { AiStoryService } from './commands/story/ai-story/ai-story.service';\nimport { WomboDreamService } from './commands/art/wombo-dream/wombo-dream.service';\n\n@Module({\n  providers: [\n    CogView2Service,\n    DalleMiniService,\n    AiStoryService,\n    AmqpService,\n    HelpService,\n    WomboDreamService,\n  ],\n  exports: [\n    CogView2Service,\n    DalleMiniService,\n    AiStoryService,\n    AmqpService,\n    HelpService,\n    WomboDreamService,\n  ],\n  imports: [ModelsModule, UtilitiesModule, ConfigModule, EntityModule],\n})\nexport class ServicesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateJobInput.html":{"url":"classes/UpdateJobInput.html","title":"class - UpdateJobInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateJobInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/job/dto/update-job.input.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                _id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/job/dto/update-job.input.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateJobInput } from './create-job.input';\n\nexport class UpdateJobInput extends PartialType(CreateJobInput) {\n  declare _id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilitiesModule.html":{"url":"modules/UtilitiesModule.html","title":"module - UtilitiesModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilitiesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\ncluster_UtilitiesModule_providers\n\n\n\n\nCollage \n\nCollage \n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nCollage  -->\n\nUtilitiesModule->Collage \n\n\n\n\n\nCollage\n\nCollage\n\nUtilitiesModule -->\n\nCollage->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/utilities/utilities.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            Collage\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            Collage\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { Collage } from './collage/collage';\n\n@Module({\n  providers: [Collage],\n  exports: [Collage],\n})\nexport class UtilitiesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WomboDreamCommand.html":{"url":"injectables/WomboDreamCommand.html","title":"injectable - WomboDreamCommand","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WomboDreamCommand\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/wombo-dream/wombo-dream.command.ts\n        \n\n\n            \n                Description\n            \n            \n                Command container for /ai-art wombo-dream command.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                handler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(jobResolver: JobResolver, womboDreamService: WomboDreamService)\n                    \n                \n                        \n                            \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.command.ts:47\n                            \n                        \n\n                \n                    \n                            DI constructor for wombo-art command.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        jobResolver\n                                                  \n                                                        \n                                                                        JobResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                database resolver saving final images\n\n                                                        \n                                                \n                                                \n                                                        womboDreamService\n                                                  \n                                                        \n                                                                        WomboDreamService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                service handling art generation\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        handler\n                        \n                    \n                \n            \n            \n                \n                    \n                    handler(dto: WomboDreamDto, undefined: TransformedCommandExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/commands/ai-art/wombo-dream/wombo-dream.command.ts:65\n                \n            \n\n\n            \n                \n                    Command interaction handler.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                WomboDreamDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        dto containing prompt and style of the art\n\n                                    \n                                \n                                \n                                    \n                                            TransformedCommandExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WomboDreamCommand.name)\n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.command.ts:47\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport {\n  Payload,\n  SubCommand,\n  TransformedCommandExecutionContext,\n  UsePipes,\n} from '@discord-nestjs/core';\nimport { TransformPipe } from '@discord-nestjs/common';\nimport { IncludeInHelp } from '../../../decorators/includeInHelp.decorator';\nimport { WomboDreamDto } from './wombo-dream.dto';\nimport { JobResolver } from '../../../entity/job/job.resolver';\nimport { WomboDreamService } from '../../../services/commands/art/wombo-dream/wombo-dream.service';\nimport {\n  WomboDreamStyle,\n  WomboDreamTaskResponse,\n} from '../../../types/api/wombo-dream';\nimport { Message } from 'discord.js';\n\n/**\n * Command container for /ai-art wombo-dream command.\n *\n * @author Karafra\n * @since 2.1.5\n */\n@IncludeInHelp({\n  name: '/ai-art wombo-dream',\n  description: 'generates NFT based on wombo dream model',\n  usage: '/ai-art wombo-dream prompt: Salvatore Dali on Mars',\n  parameters: [\n    {\n      name: 'prompt',\n      description: 'Description of images',\n    },\n    {\n      name: 'style',\n      description: 'style in which image is to be drawn',\n    },\n  ],\n})\n@SubCommand({\n  name: 'wombo-dream',\n  description: 'generate AiArt based on given prompt using wombo dream model',\n})\n@UsePipes(TransformPipe)\n@Injectable()\nexport class WomboDreamCommand {\n  private readonly logger = new Logger(WomboDreamCommand.name);\n\n  /**\n   * DI constructor for wombo-art command.\n   *\n   * @param jobResolver database resolver saving final images\n   * @param womboDreamService service handling art generation\n   */\n  public constructor(\n    private readonly jobResolver: JobResolver,\n    private readonly womboDreamService: WomboDreamService,\n  ) {}\n\n  /**\n   * Command interaction handler.\n   * @param dto dto containing prompt and style of the art\n   * @param interaction interaction invoking command\n   */\n  public async handler(\n    @Payload() dto: WomboDreamDto,\n    { interaction }: TransformedCommandExecutionContext,\n  ) {\n    this.logger.debug('WomboDream command called');\n    await interaction.deferReply();\n    let reply: Message | any, finalResponse: WomboDreamTaskResponse;\n    try {\n      for await (const response of this.womboDreamService.generateArt(\n        dto.prompt,\n        WomboDreamStyle.getByName(dto.style),\n      )) {\n        if (response.photo_url_list.length === 0) {\n          continue;\n        }\n        reply = await interaction.editReply({\n          content: `:hourglass: Processing art for ${dto.prompt} :hourglass:`,\n          files: [\n            {\n              attachment:\n                response.photo_url_list[response.photo_url_list.length - 1],\n              name: 'WomboDream.png',\n            },\n          ],\n        });\n        finalResponse = response;\n      }\n      await interaction.editReply({\n        content: `:art: ${dto.prompt} :frame_photo: `,\n      });\n      await this.jobResolver.create({\n        messageLink: reply.url,\n        messageId: reply.id,\n        images: [\n          finalResponse.photo_url_list[finalResponse.photo_url_list.length - 1],\n        ],\n      });\n    } catch (err) {\n      await interaction.editReply({\n        content: `:frowning: Could not process art for \"${dto.prompt}\" due to internal error (${err.message})`,\n        // Delete non final files.\n        files: [],\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WomboDreamDto.html":{"url":"classes/WomboDreamDto.html","title":"class - WomboDreamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WomboDreamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/commands/ai-art/wombo-dream/wombo-dream.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                DTO for /ai-art wombo-dream command.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                prompt\n                            \n                            \n                                    Public\n                                style\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        prompt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Param({name: 'prompt', description: 'Prompt describing image you want to generate', type: undefined, required: true, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.dto.ts:21\n                        \n                    \n\n            \n                \n                    Prompt describing image.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        style\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Choice(WomboDreamStyle.styles)@Param({name: 'style', description: 'Style of wombo art', type: undefined, required: false, autocomplete: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/commands/ai-art/wombo-dream/wombo-dream.dto.ts:36\n                        \n                    \n\n            \n                \n                    One of supported styles\nSee WomboDreamStyle\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Choice, Param, ParamType } from '@discord-nestjs/core';\nimport { WomboDreamStyle } from '../../../types/api/wombo-dream';\n\n/**\n * DTO for /ai-art wombo-dream command.\n *\n * @author Karafra\n * @since 2.1.5\n */\nexport class WomboDreamDto {\n  /**\n   * Prompt describing image.\n   */\n  @Param({\n    name: 'prompt',\n    description: 'Prompt describing image you want to generate',\n    type: ParamType.STRING,\n    required: true,\n    autocomplete: true,\n  })\n  public prompt: string;\n\n  /**\n   * One of supported styles\n   *\n   * @see WomboDreamStyle\n   */\n  @Choice(WomboDreamStyle.styles)\n  @Param({\n    name: 'style',\n    description: 'Style of wombo art',\n    type: ParamType.STRING,\n    required: false,\n    autocomplete: true,\n  })\n  public style: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WomboDreamInputSpec.html":{"url":"interfaces/WomboDreamInputSpec.html","title":"interface - WomboDreamInputSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WomboDreamInputSpec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            display_freq\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            input_image\n                                        \n                                \n                                \n                                        \n                                            prompt\n                                        \n                                \n                                \n                                        \n                                            style\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        display_freq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_freq:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prompt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        style\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        style:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WomboDreamModel.html":{"url":"injectables/WomboDreamModel.html","title":"injectable - WomboDreamModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WomboDreamModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/models/wombo-dream/wombo-dream.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkArtStatus\n                            \n                            \n                                    Public\n                                    Async\n                                createArt\n                            \n                            \n                                    Private\n                                defineWomboHeaders\n                            \n                            \n                                    Private\n                                    Async\n                                getTaskId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(authModel: AuthModel, httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/models/wombo-dream/wombo-dream.model.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authModel\n                                                  \n                                                        \n                                                                        AuthModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        checkArtStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkArtStatus(id: string, token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    createArt(prompt: string, style: IWomboDreamStyle, frequency: number)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    style\n                                    \n                                                IWomboDreamStyle\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        WomboDreamStyle.No_Style\n                                    \n\n                                \n                                \n                                    frequency\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        20\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        defineWomboHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    defineWomboHeaders(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTaskId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskId(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/models/wombo-dream/wombo-dream.model.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        API_URL\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/models/wombo-dream/wombo-dream.model.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { AuthModel } from './auth/auth-model.model';\nimport { HttpService } from '@nestjs/axios';\nimport {\n  IWomboDreamStyle,\n  WomboDreamStyle,\n  WomboDreamTaskResponse,\n  WomboTaskIdResponse,\n} from '../../types/api/wombo-dream';\nimport { ConfigService } from '@nestjs/config';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class WomboDreamModel {\n  private readonly API_URL;\n\n  public constructor(\n    private readonly authModel: AuthModel,\n    private readonly httpService: HttpService,\n    private readonly configService: ConfigService,\n  ) {\n    this.API_URL = configService.get('wombo-dream.api.url');\n  }\n\n  public async createArt(\n    prompt: string,\n    style: IWomboDreamStyle = WomboDreamStyle.No_Style,\n    frequency = 20,\n  ): Promise {\n    const { idToken } = await this.authModel.getAuthentication();\n    const { id } = await this.getTaskId(idToken);\n    const response = await this.httpService.axiosRef.put(\n      `${this.configService.get('wombo-dream.api.url')}/tasks/${id}`,\n      {\n        input_spec: {\n          prompt,\n          style: style.value,\n          display_freq: frequency,\n        },\n      },\n      {\n        headers: this.defineWomboHeaders(idToken),\n      },\n    );\n    response.data.token = idToken;\n    return response.data;\n  }\n\n  public async checkArtStatus(\n    id: string,\n    token: string,\n  ): Promise {\n    const { data } = await this.httpService.axiosRef.get(\n      `${this.configService.get('wombo-dream.api.url')}/tasks/${id}`,\n      {\n        headers: this.defineWomboHeaders(token),\n      },\n    );\n    data.token = token;\n    return data;\n  }\n\n  private defineWomboHeaders(token: string): any {\n    return {\n      Origin: 'https://app.wombo.art',\n      Referer: 'https://app.wombo.art/',\n      Authorization: 'bearer ' + token,\n      'Content-Type': 'text/plain;charset=UTF-8',\n      service: 'Dream',\n    };\n  }\n\n  private async getTaskId(token: string): Promise {\n    const response = await this.httpService.axiosRef.post(\n      `${this.configService.get('wombo-dream.api.url')}/tasks/`,\n      { premium: false },\n      {\n        headers: this.defineWomboHeaders(token),\n      },\n    );\n    return response.data;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WomboDreamService.html":{"url":"injectables/WomboDreamService.html","title":"injectable - WomboDreamService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WomboDreamService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/services/commands/art/wombo-dream/wombo-dream.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for generation of images using WomboDream model.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                generateArt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(womboDreamModel: WomboDreamModel)\n                    \n                \n                        \n                            \n                                Defined in src/services/commands/art/wombo-dream/wombo-dream.service.ts:14\n                            \n                        \n\n                \n                    \n                            DI constructor for womboDream service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        womboDreamModel\n                                                  \n                                                        \n                                                                        WomboDreamModel\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                model for handling wombo dream requests\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        generateArt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateArt(prompt: string, style: WomboDreamStyle)\n                \n            \n\n\n            \n                \n                    Defined in src/services/commands/art/wombo-dream/wombo-dream.service.ts:34\n                \n            \n\n\n            \n                \n                    Generates images from given prompt and style based on WomboDream model.\nThis functions acts as async generator retuning new image until Wombo\nsays image generation is finished or that it has failed in 1.1s intervals\nSee WomboDreamStyle\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    prompt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        prompt describing image\n\n                                    \n                                \n                                \n                                    style\n                                    \n                                                WomboDreamStyle\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        WomboDreamStyle.No_Style\n                                    \n\n                                    \n                                        style of image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(WomboDreamService.name)\n                    \n                \n                    \n                        \n                                Defined in src/services/commands/art/wombo-dream/wombo-dream.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { WomboDreamModel } from '../../../../models/wombo-dream/wombo-dream.model';\nimport { WomboDreamStyle } from '../../../../types/api/wombo-dream';\nimport { CouldNotGenerateWomboArtException } from '../../../../exceptions/CouldNotGenerateWomboArtException';\n\n/**\n * Service for generation of images using WomboDream model.\n *\n * @author Karafra\n * @since 2.1.5\n */\n@Injectable()\nexport class WomboDreamService {\n  private readonly logger = new Logger(WomboDreamService.name);\n\n  /**\n   * DI constructor for womboDream service.\n   *\n   * @param womboDreamModel model for handling wombo dream requests\n   */\n  public constructor(private readonly womboDreamModel: WomboDreamModel) {}\n\n  /**\n   * Generates images from given prompt and style based on WomboDream model.\n   *\n   * This functions acts as async generator retuning new image until Wombo\n   * says image generation is finished or that it has failed in **1.1s** intervals\n   *\n   * @param prompt prompt describing image\n   * @param style style of image\n   *\n   * @see WomboDreamStyle\n   */\n  public async *generateArt(\n    prompt: string,\n    style: WomboDreamStyle = WomboDreamStyle.No_Style,\n  ) {\n    let jobStatusResponse = await this.womboDreamModel.createArt(prompt, style);\n    this.logger.log(`Created task for art ${prompt} in style ${style}`);\n    while (jobStatusResponse.state !== 'completed') {\n      await new Promise((res) => setTimeout(res, 1_100));\n      jobStatusResponse = await this.womboDreamModel.checkArtStatus(\n        jobStatusResponse.id,\n        jobStatusResponse.token,\n      );\n      if (jobStatusResponse.state === 'failed') {\n        this.logger.error(`Image generation failed`);\n        throw new CouldNotGenerateWomboArtException(\n          'Wombo art processing failed',\n        );\n      }\n      yield jobStatusResponse;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WomboDreamStyle.html":{"url":"classes/WomboDreamStyle.html","title":"class - WomboDreamStyle","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WomboDreamStyle\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            IWomboDreamStyle\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                Arcane\n                            \n                            \n                                    Static\n                                    Readonly\n                                Baroque\n                            \n                            \n                                    Static\n                                    Readonly\n                                Blacklight\n                            \n                            \n                                    Static\n                                    Readonly\n                                Dark_Fantasy\n                            \n                            \n                                    Static\n                                    Readonly\n                                Etching\n                            \n                            \n                                    Static\n                                    Readonly\n                                Fantasy_Art\n                            \n                            \n                                    Static\n                                    Readonly\n                                Festive\n                            \n                            \n                                    Static\n                                    Readonly\n                                Ghibli\n                            \n                            \n                                    Static\n                                    Readonly\n                                Hd\n                            \n                            \n                                    Static\n                                    Readonly\n                                Moonwalker\n                            \n                            \n                                    Static\n                                    Readonly\n                                Mystical\n                            \n                            \n                                    Public\n                                    Readonly\n                                name\n                            \n                            \n                                    Static\n                                    Readonly\n                                No_Style\n                            \n                            \n                                    Static\n                                    Readonly\n                                Pastel\n                            \n                            \n                                    Static\n                                    Readonly\n                                Provenance\n                            \n                            \n                                    Static\n                                    Readonly\n                                Psychedelic\n                            \n                            \n                                    Static\n                                    Readonly\n                                Psychic\n                            \n                            \n                                    Static\n                                    Readonly\n                                Radioactive\n                            \n                            \n                                    Static\n                                    Readonly\n                                Rose_Gold\n                            \n                            \n                                    Static\n                                    Readonly\n                                S_Dali\n                            \n                            \n                                    Static\n                                    Readonly\n                                Steampunk\n                            \n                            \n                                    Static\n                                    Readonly\n                                Styles\n                            \n                            \n                                    Static\n                                    Readonly\n                                Sureal\n                            \n                            \n                                    Static\n                                    Readonly\n                                Synthwave\n                            \n                            \n                                    Static\n                                    Readonly\n                                Ukiyoe\n                            \n                            \n                                    Public\n                                    Readonly\n                                value\n                            \n                            \n                                    Static\n                                    Readonly\n                                Vibrant\n                            \n                            \n                                    Static\n                                    Readonly\n                                Wuhtercuhler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getByName\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    styles\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Private\n                        constructor(value: number, name: string)\n                    \n                \n                        \n                            \n                                Defined in src/types/api/wombo-dream.ts:55\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Arcane\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(28, 'Arcane')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Baroque\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(13, 'Baroque')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Blacklight\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(20, 'Blacklight')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Dark_Fantasy\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(10, 'Dark_fantasy')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Etching\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(14, 'Etching')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Fantasy_Art\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(5, 'Fantasy_Art')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Festive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(12, 'Festive')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Ghibli\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(22, 'Ghibli')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Hd\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(7, 'Hd')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Moonwalker\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(19, 'Moonwalker')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Mystical\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(11, 'Mystical')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:59\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        No_Style\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(3, 'No_Style')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Pastel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(8, 'Pastel')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Provenance\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(17, 'Provenance')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Psychedelic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(21, 'Psychedelic')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Psychic\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(9, 'Psychic')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Radioactive\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(27, 'Radioactive')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Rose_Gold\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(18, 'Rose_Gold')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        S_Dali\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(15, 'S_Dali')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Steampunk\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(4, 'Steampunk')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Styles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Sureal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(23, 'Sureal')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Synthwave\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(1, 'Synthwave')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Ukiyoe\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(2, 'Ukiyoe')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Vibrant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(6, 'Vibrant')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        Wuhtercuhler\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new WomboDreamStyle(16, 'Wuhtercuhler')\n                    \n                \n                    \n                        \n                                Defined in src/types/api/wombo-dream.ts:46\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        getByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getByName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/types/api/wombo-dream.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        styles\n                    \n                \n\n                \n                    \n                        getstyles()\n                    \n                \n                            \n                                \n                                    Defined in src/types/api/wombo-dream.ts:64\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WomboDreamTaskResponse.html":{"url":"interfaces/WomboDreamTaskResponse.html","title":"interface - WomboDreamTaskResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WomboDreamTaskResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            generated_photo_keys\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            input_spec\n                                        \n                                \n                                \n                                        \n                                            photo_url_list\n                                        \n                                \n                                \n                                        \n                                            premium\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generated_photo_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generated_photo_keys:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_spec:         WomboDreamInputSpec\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WomboDreamInputSpec\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo_url_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        premium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        premium:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         WomboDreamTaskState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WomboDreamTaskState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WomboTaskIdResponse.html":{"url":"interfaces/WomboTaskIdResponse.html","title":"interface - WomboTaskIdResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WomboTaskIdResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/api/wombo-dream.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            created_at\n                                        \n                                \n                                \n                                        \n                                            generated_photo_keys\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            input_spec\n                                        \n                                \n                                \n                                        \n                                            photo_url_list\n                                        \n                                \n                                \n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token\n                                        \n                                \n                                \n                                        \n                                            updated_at\n                                        \n                                \n                                \n                                        \n                                            user_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        created_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        created_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        generated_photo_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        generated_photo_keys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        input_spec\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        input_spec:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo_url_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo_url_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         WomboDreamTaskState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WomboDreamTaskState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updated_at\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updated_at:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GoogleApiAuthResponse {\n  kind: string;\n  idToken: string;\n  expiresIn: number;\n  localId: string;\n}\n\nexport interface WomboTaskIdResponse {\n  created_at: string;\n  generated_photo_keys: string;\n  id: string;\n  input_spec: string | null;\n  photo_url_list: string[];\n  result: string | null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\nexport interface IWomboDreamStyle {\n  value: number;\n  name: string;\n}\n\nexport class WomboDreamStyle implements IWomboDreamStyle {\n  public static readonly Styles: Map = new Map();\n  public static readonly Synthwave = new WomboDreamStyle(1, 'Synthwave');\n  public static readonly Ukiyoe = new WomboDreamStyle(2, 'Ukiyoe');\n  public static readonly No_Style = new WomboDreamStyle(3, 'No_Style');\n  public static readonly Steampunk = new WomboDreamStyle(4, 'Steampunk');\n  public static readonly Fantasy_Art = new WomboDreamStyle(5, 'Fantasy_Art');\n  public static readonly Vibrant = new WomboDreamStyle(6, 'Vibrant');\n  public static readonly Hd = new WomboDreamStyle(7, 'Hd');\n  public static readonly Pastel = new WomboDreamStyle(8, 'Pastel');\n  public static readonly Psychic = new WomboDreamStyle(9, 'Psychic');\n  public static readonly Dark_Fantasy = new WomboDreamStyle(10, 'Dark_fantasy');\n  public static readonly Mystical = new WomboDreamStyle(11, 'Mystical');\n  public static readonly Festive = new WomboDreamStyle(12, 'Festive');\n  public static readonly Baroque = new WomboDreamStyle(13, 'Baroque');\n  public static readonly Etching = new WomboDreamStyle(14, 'Etching');\n  public static readonly S_Dali = new WomboDreamStyle(15, 'S_Dali');\n  public static readonly Wuhtercuhler = new WomboDreamStyle(16, 'Wuhtercuhler');\n  public static readonly Provenance = new WomboDreamStyle(17, 'Provenance');\n  public static readonly Rose_Gold = new WomboDreamStyle(18, 'Rose_Gold');\n  public static readonly Moonwalker = new WomboDreamStyle(19, 'Moonwalker');\n  public static readonly Blacklight = new WomboDreamStyle(20, 'Blacklight');\n  public static readonly Psychedelic = new WomboDreamStyle(21, 'Psychedelic');\n  public static readonly Ghibli = new WomboDreamStyle(22, 'Ghibli');\n  public static readonly Sureal = new WomboDreamStyle(23, 'Sureal');\n  public static readonly Radioactive = new WomboDreamStyle(27, 'Radioactive');\n  public static readonly Arcane = new WomboDreamStyle(28, 'Arcane');\n\n  private constructor(\n    public readonly value: number,\n    public readonly name: string,\n  ) {\n    WomboDreamStyle.Styles.set(name, this);\n  }\n\n  public static get styles() {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    return new Map(Array.from(this.Styles, ([k, _]) => [k, k]));\n  }\n\n  public static getByName(name: string) {\n    return this.Styles.get(name);\n  }\n}\n\nexport interface WomboDreamInputSpec {\n  prompt: string;\n  style: number;\n  display_freq: number;\n  input_image?: {\n    mediastore_id: string;\n    weight: 'LOW' | 'MEDIUM' | 'HIGH';\n  };\n}\n\nexport type WomboDreamTaskState = 'pending' | 'failed' | 'completed';\n\nexport interface WomboDreamTaskResponse {\n  createdAt: string;\n  generated_photo_keys: string[];\n  id: string;\n  input_spec: WomboDreamInputSpec;\n  photo_url_list: string[];\n  premium: boolean;\n  result: null;\n  state: WomboDreamTaskState;\n  updated_at: string;\n  user_id: string;\n  token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAiArt changelog\n2.1.4 --26th July, 2022\n\n:envelope: When you add reaction \":envelope\" to any message with images bot will them to you in DM\n\n:card_file_box: Add mongo database\n\n:monocle_face: Add graphql for data exploration\n\n:whale: Update docker files\n\n:bug: Fix bug wih command scoping\n\n\n2.0.0 -- 18th July, 2022\n\n:bricks: Switched to NestJs framework\n\n:white_check_mark: Added tests\n\n:white_check_mark: Added codecov coverage reporter\n\n:white_check_mark: Added automated testing workflow\n\n:goal_net: Added support for sentry.io error reporter\n\n:whale: Fixed docked files\n\n:art: Switched documentatin generation engine to compodoc\n\n:necktie: Created custom amqp client wrapper for Nestjs\n\n:memo: Added ToS and Privacy policy files for github bot verification process\n\n:wrench: Switch configuration from .env file to yaml file with environment variable substitution\n\n\n1.6.0 -- 11t July, 2022\n\n:necktie: Fully containerized deployment \n\n:rabbit: RabbitMQ channels are now being closed automatically\n\n:rabbit: RabbitMQ connection is started before in started class.\n\n:art: Graceful shutdown\n\n\n1.5.0 -- 4th July, 2022\n\n:necktie: Added command queueing\n\n1.4.5 -- 27th June, 2022\n\n\n\n:robot: Add /help command showing all other commands\n  \n      \n  \n\n\n\n1.4.0 -- 27th June, 2022\n\n\n\n:whale: Add Dockerfile and docker-compose.yml\n\n\n\n\n\n\n:robot: Add /cog-view-2 command for generating images using CogView2 model\n\n\n\n\n\n\n:capital_abcd: Add command categorization\n  \n      \n  \n\n\n\n\n\n\n:bulb: Improve comments\n\n\n\n\n\n\n\n:bulb: Improve comments\n\n\n\n\n\n\n:loud_sound: Improve logging\n\n\n\n\n\n\n\n:wastebasket: General code cleanup\n\n\n\n1.3.0 -- 20th June, 2022\n\n* Add `/story command`\n\n\n1.2.0 -- 16th June, 2022\n\n    * Bot does not mention user when processing of command fails (produced ugly output)\n\n\n    * Bot loads commands automatically after joining guild, no need for restart anymore. \n         \n\n\n* Fix frequent timeout from dall-e mini\n\n\n* Improve code readability\n\n* Add canvas library build as it was not triggering\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/createCappedJobsCollection1661353047612.html":{"url":"classes/createCappedJobsCollection1661353047612.html","title":"class - createCappedJobsCollection1661353047612","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  createCappedJobsCollection1661353047612\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1661353047612-create-capped-jobs-collection.migration.ts\n        \n\n\n            \n                Description\n            \n            \n                Creates capped Jobs collection if it does not exist.\n\n            \n\n\n            \n                Implements\n            \n            \n                            MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Private\n                                    Readonly\n                                size\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(\n    createCappedJobsCollection1661353047612.name,\n  )\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Create capped Jobs collection 1661353047612'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 400_000_000\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:15\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down()\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:43\n                \n            \n\n\n            \n                \n                    This migration is starting migration. It cannot be reverted.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: MongoQueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1661353047612-create-capped-jobs-collection.migration.ts:26\n                \n            \n\n\n            \n                \n                    Creates capped Job collection.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                                MongoQueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        runner executing query\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MongoQueryRunner } from 'typeorm/driver/mongodb/MongoQueryRunner';\nimport { Logger } from '@nestjs/common';\nimport { MigrationInterface } from 'typeorm';\n\n/**\n * Creates capped Jobs collection if it does not exist.\n * @classdesc Database migration creating Collection \"Job\" and capping its size, so it does not overflow during runtime\n * @since 2.1.5\n * @author Karafra\n */\nexport class createCappedJobsCollection1661353047612\n  implements MigrationInterface\n{\n  public name = 'Create capped Jobs collection 1661353047612';\n  private readonly size = 400_000_000;\n\n  private readonly logger = new Logger(\n    createCappedJobsCollection1661353047612.name,\n  );\n\n  /**\n   * Creates capped Job collection.\n   *\n   * @param queryRunner runner executing query\n   */\n  public async up(queryRunner: MongoQueryRunner): Promise {\n    this.logger.log(`Running migration ${this.name}`);\n    this.logger.debug(\n      `Creating capped collection \"Jobs\" with size ${this.size}B`,\n    );\n    await queryRunner.databaseConnection.db().createCollection('Job', {\n      capped: true,\n      size: this.size,\n    });\n    this.logger.debug('Collection \"Jobs\" created');\n  }\n\n  /**\n   * This migration is starting migration. It cannot be reverted.\n   *\n   * @throws Error error is always thrown, this migration can not be undone\n   */\n  public async down(): Promise {\n    this.logger.log(`Reverting migration ${this.name}`);\n    throw new Error('This is starting migration, it cannot be turned back');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @discord-nestjs/common : ^3.4.2\n        \n            @discord-nestjs/core : ^3.6.0\n        \n            @elastic/ecs-winston-format : ^1.3.1\n        \n            @karafra/nestjs-amqp : github:karafra/nestjs-amqp\n        \n            @nestjs/apollo : ^10.0.19\n        \n            @nestjs/axios : ^0.1.0\n        \n            @nestjs/cli : ^8.2.8\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/graphql : ^10.0.21\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/typeorm : ^9.0.0\n        \n            @settlin/collage : ^2.0.1\n        \n            apollo-server-express : ^3.10.0\n        \n            axios : ^0.27.2\n        \n            discord.js : ^13.8.1\n        \n            graphql : ^15.8.0\n        \n            graphql-tools : ^8.3.0\n        \n            import : ^0.0.6\n        \n            mongodb : ^5.5.0\n        \n            nestjs-dynamic-providers : ^0.1.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.7\n        \n            winston : ^3.8.2\n        \n            winston-elasticsearch : ^0.17.2\n        \n            yaml-env-defaults : ^1.1.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Model   (src/.../open-ai.dto.ts)\n                        \n                        \n                            Style   (src/.../cog-view-2.dto.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/commands/ai-story/open-ai/open-ai.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Model\n                    \n                \n                        \n                            \n                                 DAVINCI\n                            \n                        \n                        \n                            \n                                Value : davinci\n                            \n                        \n                        \n                            \n                                 DAVINCI_INSTRUCT_BETA\n                            \n                        \n                        \n                            \n                                Value : davinci-instruct-beta\n                            \n                        \n                        \n                            \n                                 TEXT_DAVINCI_001\n                            \n                        \n                        \n                            \n                                Value : text-davinci-001\n                            \n                        \n                        \n                            \n                                 TEXT_DAVINCI_002\n                            \n                        \n                        \n                            \n                                Value : text-davinci-002\n                            \n                        \n                        \n                            \n                                 TEXT_CURIE_001\n                            \n                        \n                        \n                            \n                                Value : text-curie-001\n                            \n                        \n                        \n                            \n                                 TEXT_BABAGE_001\n                            \n                        \n                        \n                            \n                                Value : text-babage-001\n                            \n                        \n                        \n                            \n                                 TEXT_ADA_001\n                            \n                        \n                        \n                            \n                                Value : text-ada-001\n                            \n                        \n            \n        \n\n    src/commands/ai-art/cog-view-2/cog-view-2.dto.ts\n    \n        \n            \n                \n                    \n                        \n                        Style\n                    \n                \n                    \n                        \n                            Enum for style supported by cog-view-2\n\n                        \n                    \n                        \n                            \n                                 NONE\n                            \n                        \n                        \n                            \n                                Value : none\n                            \n                        \n                        \n                            \n                                 MAINBODY\n                            \n                        \n                        \n                            \n                                Value : mainbody\n                            \n                        \n                        \n                            \n                                 PHOTO\n                            \n                        \n                        \n                            \n                                Value : photo\n                            \n                        \n                        \n                            \n                                 FLAT\n                            \n                        \n                        \n                            \n                                Value : flat\n                            \n                        \n                        \n                            \n                                 COMICS\n                            \n                        \n                        \n                            \n                                Value : comics\n                            \n                        \n                        \n                            \n                                 OIL\n                            \n                        \n                        \n                            \n                                Value : oil\n                            \n                        \n                        \n                            \n                                 SKETCH\n                            \n                        \n                        \n                            \n                                Value : sketch\n                            \n                        \n                        \n                            \n                                 ISOMETRIC\n                            \n                        \n                        \n                            \n                                Value : isometric\n                            \n                        \n                        \n                            \n                                 WATERCOLOR\n                            \n                        \n                        \n                            \n                                Value : watercolor\n                            \n                        \n                        \n                            \n                                 CHINESE\n                            \n                        \n                        \n                            \n                                Value : chinese\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IncludeInHelp   (src/.../includeInHelp.decorator.ts)\n                        \n                        \n                            Queued   (src/.../queued.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/decorators/includeInHelp.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IncludeInHelp\n                        \n                    \n                \n            \n            \n                \nIncludeInHelp(help: ICommandHelp)\n                \n            \n\n\n\n\n            \n                \n                    Tells bot to include given command in help\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    help\n                                    \n                                                ICommandHelp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/decorators/queued.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Queued\n                        \n                    \n                \n            \n            \n                \nQueued(queueName: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queueName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n    \n  \n\nAI Art\n\n  \n    Discord bot generating AI art collages\n    \n    Explore the docs »\n    \n    \n    View Demo\n    ·\n    Report Bug\n    ·\n    Request Feature\n  \n\n\n\n\n  Table of Contents\n  \n    \n      About The Project\n      \n        Built With\n      \n    \n    \n      Getting Started\n      \n        Prerequisites\n        Installation\n      \n    \n    Deployment\n    Usage\n    Contributing\n    License\n    Contact\n    Acknowledgments\n  \n\n\n\n\nAbout The Project\n\n\n  \n\n\nSimple discord bot which generates collages based on any query you give it (most of the time). This bot uses model which you can find here\n(back to top)\n\nBuilt With\n\nTypescript\nDiscord.js\nCollage\nCanvas\namqp-client.js\nSentry.io\nJest\nCodecov\nDocker\nNestJs\nCompodoc\nMongo\nTypeORM\nGraphQl\n\n(back to top)\n\n\n\nGetting Started\nPrerequisites\nThis is an example of how to list things you need to use the software and how to install them.\n\nnpmnpm install npm@latest -g\n\nInstallation\n\nCreate Discord application on a free API Key at https://discord.com/developers/\n\nClick on Bot tab and save your token.\n\nClone the repo\ngit clone https://github.com/karafra/ai-art.git\nInstall NPM packages\nnpm install\nEnter your API key and bot id into config.yml. \nsentry:\n  dsn: \"{SENTRY_DSN}\"\n# This one is optional ... only if you want to use ai-story command\nopenAi:\n  token: ...\namqp:\n  url: \"{AMQP_URL}\"\ndiscord:\n    token: \"{DISCORD_TOKEN}\"\ndeploy:\n  port: \"{PORT}\" Configuration file supports simple environment variable substitution in format \"{VARIABLE_NAME}\", where parentheses are required.\n\n\n(back to top)\n\n\n\nDeployment\nMethod 1: Deployment to Heroku\nRecommended method of deploying this bot is deployment on Heroku. To deploy to Heroku please click on button bellow.\n\n\n  \n\n\n\nIMPORTANT\nAfter successful deployment you will have to switch dyno from web to worker. If you do not do this, app will not bind to port and fail. \n\n  \n\n\nAfter successful deployment you can invite bot to your server by clicking on this link https://discord.com/api/oauth2/authorize?client_id={CLIENT_ID}&permissions=34816&scope=applications.commands%20bot, where CLIENT_ID is your bots client id. Link already contains minimal scopes (bot, application.commands) and minimal bot permissions (send messages, attach files)\nMethod 2: Containerized deployment:\nAnother even easier method of deployment is deployment via docker container.\n\nVerify docker-compose installation\n A] Type docker-compose -v into terminal. if output looks similar to docker-compose version 1.29.2, build 5becea4c then you can continue to the next step.\n B] If this command throws an error, you have to follow docker-compose installation guide\n\nSet required variables\n\nOnly required variables is TOKEN, this can be set as environment variables using export ENV_NAME=VALUE on linux based OS or $env:VARIABLE_NAME=VALUE on Windows based OS\n\n\nBuilding Docker containers\n\n\n\nType docker-compose -f \"docker/deploy/docker-compose.yml\" build into terminal, this will automatically build all required docker images.\n\n\nStart container\nType docker-compose -f \"docker/deploy/docker-compose.yml\" up into terminal. This will start all services needed. RabbitMQ management console will be accessible here with login credentials being:\n\nusername:   \nguest\n\n\npassword:\nguest\n\n\n\n\nMongoDb management console will be accessible here without any login credentials\n\n\n\n\nThis network is not external, so it will not be accessible from outside.\n(back to top)\n\n\n\nUsage\nCommands are separated into 2 command groups\n\nhelp - Help command \n\n/ai-art\n\ncog-view-2 - Generates collage of 9 images using CogView2 model\ndalle-mini - Generates collage of 9 images using Dall-e mini model\nwombo-dream - Generartes one image based on WomboDream model\n\n\n/ai-story\n\nstory - Generates story from given headline (Requires OpenAi API) token\n\n\nReact with :envelope: to any collage and bot will dm it to you.\n\n\nDiscord offers autocompletion so all you need is to start typing name of the command or group in which command is, discord will then guide you through all the required parameters using its autocompletion.\n\n  \n\n\nFor more examples, please refer to the Documentation\n(back to top)\n\n\n\nContributing\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are greatly appreciated.\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\nDon't forget to give the project a star! Thanks again!\n\nFork the Project\nCreate your Feature Branch (git checkout -b feature/AmazingFeature)\nCommit your Changes (git commit -m 'Add some AmazingFeature')\nPush to the Branch (git push origin feature/AmazingFeature)\nOpen a Pull Request\n\n(back to top)\n\n\n\nLicense\nDistributed under the Apache2.0 License. See LICENSE for more information.\n(back to top)\n\n\n\nContact\nYour Name - @Karafro - dariusKralovic@protonmail.com\nProject Link: https://github.com/karafra/ai-art\n(back to top)\n\n\n\nAcknowledgments\n\nDALL·E Mini\nImage generation model for /ai-art dalle-mini\n\n\nCogView2\nImage generation model for /ai-art cog-view-2\n\n\nOpen Ai\nStory generation model for /ai-story story\n\n\nWomboDream\nArt generation model for ai-art wombo-art\n\n\n\n(back to top)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\n                             Apache License\n                       Version 2.0, January 2004\n                    http://www.apache.org/licenses/   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\nDefinitions.\n\"License\" shall mean the terms and conditions for use, reproduction,\nand distribution as defined by Sections 1 through 9 of this document.\n\"Licensor\" shall mean the copyright owner or entity authorized by\nthe copyright owner that is granting the License.\n\"Legal Entity\" shall mean the union of the acting entity and all\nother entities that control, are controlled by, or are under common\ncontrol with that entity. For the purposes of this definition,\n\"control\" means (i) the power, direct or indirect, to cause the\ndirection or management of such entity, whether by contract or\notherwise, or (ii) ownership of fifty percent (50%) or more of the\noutstanding shares, or (iii) beneficial ownership of such entity.\n\"You\" (or \"Your\") shall mean an individual or Legal Entity\nexercising permissions granted by this License.\n\"Source\" form shall mean the preferred form for making modifications,\nincluding but not limited to software source code, documentation\nsource, and configuration files.\n\"Object\" form shall mean any form resulting from mechanical\ntransformation or translation of a Source form, including but\nnot limited to compiled object code, generated documentation,\nand conversions to other media types.\n\"Work\" shall mean the work of authorship, whether in Source or\nObject form, made available under the License, as indicated by a\ncopyright notice that is included in or attached to the work\n(an example is provided in the Appendix below).\n\"Derivative Works\" shall mean any work, whether in Source or Object\nform, that is based on (or derived from) the Work and for which the\neditorial revisions, annotations, elaborations, or other modifications\nrepresent, as a whole, an original work of authorship. For the purposes\nof this License, Derivative Works shall not include works that remain\nseparable from, or merely link (or bind by name) to the interfaces of,\nthe Work and Derivative Works thereof.\n\"Contribution\" shall mean any work of authorship, including\nthe original version of the Work and any modifications or additions\nto that Work or Derivative Works thereof, that is intentionally\nsubmitted to Licensor for inclusion in the Work by the copyright owner\nor by an individual or Legal Entity authorized to submit on behalf of\nthe copyright owner. For the purposes of this definition, \"submitted\"\nmeans any form of electronic, verbal, or written communication sent\nto the Licensor or its representatives, including but not limited to\ncommunication on electronic mailing lists, source code control systems,\nand issue tracking systems that are managed by, or on behalf of, the\nLicensor for the purpose of discussing and improving the Work, but\nexcluding communication that is conspicuously marked or otherwise\ndesignated in writing by the copyright owner as \"Not a Contribution.\"\n\"Contributor\" shall mean Licensor and any individual or Legal Entity\non behalf of whom a Contribution has been received by Licensor and\nsubsequently incorporated within the Work.\n\nGrant of Copyright License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\ncopyright license to reproduce, prepare Derivative Works of,\npublicly display, publicly perform, sublicense, and distribute the\nWork and such Derivative Works in Source or Object form.\n\nGrant of Patent License. Subject to the terms and conditions of\nthis License, each Contributor hereby grants to You a perpetual,\nworldwide, non-exclusive, no-charge, royalty-free, irrevocable\n(except as stated in this section) patent license to make, have made,\nuse, offer to sell, sell, import, and otherwise transfer the Work,\nwhere such license applies only to those patent claims licensable\nby such Contributor that are necessarily infringed by their\nContribution(s) alone or by combination of their Contribution(s)\nwith the Work to which such Contribution(s) was submitted. If You\ninstitute patent litigation against any entity (including a\ncross-claim or counterclaim in a lawsuit) alleging that the Work\nor a Contribution incorporated within the Work constitutes direct\nor contributory patent infringement, then any patent licenses\ngranted to You under this License for that Work shall terminate\nas of the date such litigation is filed.\n\nRedistribution. You may reproduce and distribute copies of the\nWork or Derivative Works thereof in any medium, with or without\nmodifications, and in Source or Object form, provided that You\nmeet the following conditions:\n(a) You must give any other recipients of the Work or\nDerivative Works a copy of this License; and\n(b) You must cause any modified files to carry prominent notices\nstating that You changed the files; and\n(c) You must retain, in the Source form of any Derivative Works\nthat You distribute, all copyright, patent, trademark, and\nattribution notices from the Source form of the Work,\nexcluding those notices that do not pertain to any part of\nthe Derivative Works; and\n(d) If the Work includes a \"NOTICE\" text file as part of its\ndistribution, then any Derivative Works that You distribute must\ninclude a readable copy of the attribution notices contained\nwithin such NOTICE file, excluding those notices that do not\npertain to any part of the Derivative Works, in at least one\nof the following places: within a NOTICE text file distributed\nas part of the Derivative Works; within the Source form or\ndocumentation, if provided along with the Derivative Works; or,\nwithin a display generated by the Derivative Works, if and\nwherever such third-party notices normally appear. The contents\nof the NOTICE file are for informational purposes only and\ndo not modify the License. You may add Your own attribution\nnotices within Derivative Works that You distribute, alongside\nor as an addendum to the NOTICE text from the Work, provided\nthat such additional attribution notices cannot be construed\nas modifying the License.\nYou may add Your own copyright statement to Your modifications and\nmay provide additional or different license terms and conditions\nfor use, reproduction, or distribution of Your modifications, or\nfor any such Derivative Works as a whole, provided Your use,\nreproduction, and distribution of the Work otherwise complies with\nthe conditions stated in this License.\n\nSubmission of Contributions. Unless You explicitly state otherwise,\nany Contribution intentionally submitted for inclusion in the Work\nby You to the Licensor shall be under the terms and conditions of\nthis License, without any additional terms or conditions.\nNotwithstanding the above, nothing herein shall supersede or modify\nthe terms of any separate license agreement you may have executed\nwith Licensor regarding such Contributions.\n\nTrademarks. This License does not grant permission to use the trade\nnames, trademarks, service marks, or product names of the Licensor,\nexcept as required for reasonable and customary use in describing the\norigin of the Work and reproducing the content of the NOTICE file.\n\nDisclaimer of Warranty. Unless required by applicable law or\nagreed to in writing, Licensor provides the Work (and each\nContributor provides its Contributions) on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\nimplied, including, without limitation, any warranties or conditions\nof TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\nPARTICULAR PURPOSE. You are solely responsible for determining the\nappropriateness of using or redistributing the Work and assume any\nrisks associated with Your exercise of permissions under this License.\n\nLimitation of Liability. In no event and under no legal theory,\nwhether in tort (including negligence), contract, or otherwise,\nunless required by applicable law (such as deliberate and grossly\nnegligent acts) or agreed to in writing, shall any Contributor be\nliable to You for damages, including any direct, indirect, special,\nincidental, or consequential damages of any character arising as a\nresult of this License or out of the use or inability to use the\nWork (including but not limited to damages for loss of goodwill,\nwork stoppage, computer failure or malfunction, or any and all\nother commercial damages or losses), even if such Contributor\nhas been advised of the possibility of such damages.\n\nAccepting Warranty or Additional Liability. While redistributing\nthe Work or Derivative Works thereof, You may choose to offer,\nand charge a fee for, acceptance of support, warranty, indemnity,\nor other liability obligations and/or rights consistent with this\nLicense. However, in accepting such obligations, You may act only\non Your own behalf and on Your sole responsibility, not on behalf\nof any other Contributor, and only if You agree to indemnify,\ndefend, and hold each Contributor harmless for any liability\nincurred by, or claims asserted against, such Contributor by reason\nof your accepting any such warranty or additional liability.\n\n\n   END OF TERMS AND CONDITIONS\n   APPENDIX: How to apply the Apache License to your work.\n  To apply the Apache License to your work, attach the following\n  boilerplate notice, with the fields enclosed by brackets \"[]\"\n  replaced with your own identifying information. (Don't include\n  the brackets!)  The text should be enclosed in the appropriate\n  comment syntax for the file format. We also recommend that a\n  file or class name and description of purpose be included on the\n  same \"printed page\" as the copyright notice for easier\n  identification within third-party archives.   Copyright 2022 Karafra\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n   http://www.apache.org/licenses/LICENSE-2.0   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommandsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EntityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GatewayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JobModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModelsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ServicesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilitiesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_EntityModule\n\n\n\ncluster_EntityModule_imports\n\n\n\ncluster_EntityModule_exports\n\n\n\ncluster_GatewayModule\n\n\n\ncluster_GatewayModule_exports\n\n\n\ncluster_JobModule\n\n\n\ncluster_JobModule_exports\n\n\n\ncluster_JobModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_ModelsModule\n\n\n\ncluster_ModelsModule_exports\n\n\n\ncluster_ModelsModule_providers\n\n\n\ncluster_ServicesModule\n\n\n\ncluster_ServicesModule_exports\n\n\n\ncluster_ServicesModule_providers\n\n\n\ncluster_UtilitiesModule\n\n\n\ncluster_UtilitiesModule_exports\n\n\n\ncluster_UtilitiesModule_providers\n\n\n\n\nCommandsModule\n\nCommandsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nCommandsModule->AppModule\n\n\n\n\n\nEntityModule\n\nEntityModule\n\nCommandsModule -->\n\nEntityModule->CommandsModule\n\n\n\n\n\nServicesModule\n\nServicesModule\n\nServicesModule -->\n\nEntityModule->ServicesModule\n\n\n\nAppModule -->\n\nEntityModule->AppModule\n\n\n\n\n\nJobModule \n\nJobModule \n\nJobModule  -->\n\nEntityModule->JobModule \n\n\n\n\n\nGatewayModule\n\nGatewayModule\n\nGatewayModule -->\n\nEntityModule->GatewayModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nCommandsModule -->\n\nLoggerModule->CommandsModule\n\n\n\n\n\nModelsModule\n\nModelsModule\n\nModelsModule -->\n\nLoggerModule->ModelsModule\n\n\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nAiArtLoggerService \n\nAiArtLoggerService \n\nAiArtLoggerService  -->\n\nLoggerModule->AiArtLoggerService \n\n\n\nServicesModule -->\n\nModelsModule->ServicesModule\n\n\n\nAppModule -->\n\nModelsModule->AppModule\n\n\n\n\n\nAiArtModel \n\nAiArtModel \n\nAiArtModel  -->\n\nModelsModule->AiArtModel \n\n\n\n\n\nAiStoryModel \n\nAiStoryModel \n\nAiStoryModel  -->\n\nModelsModule->AiStoryModel \n\n\n\n\n\nCogView2Model \n\nCogView2Model \n\nCogView2Model  -->\n\nModelsModule->CogView2Model \n\n\n\n\n\nWomboDreamModel \n\nWomboDreamModel \n\nWomboDreamModel  -->\n\nModelsModule->WomboDreamModel \n\n\n\nCommandsModule -->\n\nServicesModule->CommandsModule\n\n\n\nAppModule -->\n\nServicesModule->AppModule\n\n\n\n\n\nAiStoryService \n\nAiStoryService \n\nAiStoryService  -->\n\nServicesModule->AiStoryService \n\n\n\n\n\nAmqpService \n\nAmqpService \n\nAmqpService  -->\n\nServicesModule->AmqpService \n\n\n\n\n\nCogView2Service \n\nCogView2Service \n\nCogView2Service  -->\n\nServicesModule->CogView2Service \n\n\n\n\n\nDalleMiniService \n\nDalleMiniService \n\nDalleMiniService  -->\n\nServicesModule->DalleMiniService \n\n\n\n\n\nHelpService \n\nHelpService \n\nHelpService  -->\n\nServicesModule->HelpService \n\n\n\n\n\nWomboDreamService \n\nWomboDreamService \n\nWomboDreamService  -->\n\nServicesModule->WomboDreamService \n\n\n\n\n\nUtilitiesModule\n\nUtilitiesModule\n\nServicesModule -->\n\nUtilitiesModule->ServicesModule\n\n\n\nAppModule -->\n\nUtilitiesModule->AppModule\n\n\n\n\n\nCollage \n\nCollage \n\nCollage  -->\n\nUtilitiesModule->Collage \n\n\n\n\n\nBotGateway\n\nBotGateway\n\nAppModule -->\n\nBotGateway->AppModule\n\n\n\nGatewayModule -->\n\nBotGateway->GatewayModule\n\n\n\n\n\nJobModule\n\nJobModule\n\nEntityModule -->\n\nJobModule->EntityModule\n\n\n\n\n\nJobResolver \n\nJobResolver \n\nJobResolver  -->\n\nJobModule->JobResolver \n\n\n\n\n\nJobService \n\nJobService \n\nJobService  -->\n\nJobModule->JobService \n\n\n\n\n\nBotGateway \n\nBotGateway \n\nBotGateway  -->\n\nGatewayModule->BotGateway \n\n\n\n\n\nJobService\n\nJobService\n\nJobModule -->\n\nJobService->JobModule\n\n\n\n\n\nAiArtLoggerService\n\nAiArtLoggerService\n\nLoggerModule -->\n\nAiArtLoggerService->LoggerModule\n\n\n\n\n\nAiArtModel\n\nAiArtModel\n\nModelsModule -->\n\nAiArtModel->ModelsModule\n\n\n\n\n\nAiStoryModel\n\nAiStoryModel\n\nModelsModule -->\n\nAiStoryModel->ModelsModule\n\n\n\n\n\nAuthModel\n\nAuthModel\n\nModelsModule -->\n\nAuthModel->ModelsModule\n\n\n\n\n\nCogView2Model\n\nCogView2Model\n\nModelsModule -->\n\nCogView2Model->ModelsModule\n\n\n\n\n\nWomboDreamModel\n\nWomboDreamModel\n\nModelsModule -->\n\nWomboDreamModel->ModelsModule\n\n\n\n\n\nAiStoryService\n\nAiStoryService\n\nServicesModule -->\n\nAiStoryService->ServicesModule\n\n\n\n\n\nAmqpService\n\nAmqpService\n\nServicesModule -->\n\nAmqpService->ServicesModule\n\n\n\n\n\nCogView2Service\n\nCogView2Service\n\nServicesModule -->\n\nCogView2Service->ServicesModule\n\n\n\n\n\nDalleMiniService\n\nDalleMiniService\n\nServicesModule -->\n\nDalleMiniService->ServicesModule\n\n\n\n\n\nHelpService\n\nHelpService\n\nServicesModule -->\n\nHelpService->ServicesModule\n\n\n\n\n\nWomboDreamService\n\nWomboDreamService\n\nServicesModule -->\n\nWomboDreamService->ServicesModule\n\n\n\n\n\nCollage\n\nCollage\n\nUtilitiesModule -->\n\nCollage->UtilitiesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        9 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.1.5\n        \n            Description : Simple discord bot generating art from various AI models\n        \n            License : Apache 2.0\n        \n            Author : Karafra\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionType   (src/.../cogView2.ts)\n                        \n                        \n                            AiArtImageArray   (src/.../ai-art.ts)\n                        \n                        \n                            AiArtResponse   (src/.../ai-art.ts)\n                        \n                        \n                            M   (src/.../open-ai.dto.ts)\n                        \n                        \n                            Model   (src/.../ai-story.ts)\n                        \n                        \n                            Status   (src/.../cogView2.ts)\n                        \n                        \n                            Style   (src/.../cogView2.ts)\n                        \n                        \n                            WomboDreamTaskState   (src/.../wombo-dream.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/api/cogView2.ts\n    \n    \n        \n            \n                \n                    \n                    ActionType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Status\n                \n            \n            \n                \n                            \"COMPLETE\" | \"PENDING\" | \"QUEUED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Style\n                \n            \n            \n                \n                        \"none\" | \"mainbody\" | \"photo\" | \"flat\" | \"comics\" | \"oil\" | \"sketch\" | \"isometric\" | \"watercolor\" | \"chinese\"\n\n                \n            \n        \n    \n    src/types/api/ai-art.ts\n    \n    \n        \n            \n                \n                    \n                    AiArtImageArray\n                \n            \n            \n                \n                        [string, string, string, string, string, string, string, string, string]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AiArtResponse\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    src/commands/ai-story/open-ai/open-ai.dto.ts\n    \n    \n        \n            \n                \n                    \n                    M\n                \n            \n            \n                \n                        \"davinci\" | \"davinci-instruct-beta\" | \"text-davinci-001\" | \"text-davinci-002\" | \"text-curie-001\" | \"text-babage-001\" | \"text-ada-001\"\n\n                \n            \n        \n    \n    src/types/api/ai-story.ts\n    \n    \n        \n            \n                \n                    \n                    Model\n                \n            \n            \n                \n                        \"davinci\" | \"davinci-instruct-beta\" | \"text-davinci-001\" | \"text-davinci-002\" | \"text-curie-001\" | \"text-babage-001\" | \"text-ada-001\"\n\n                \n            \n        \n    \n    src/types/api/wombo-dream.ts\n    \n    \n        \n            \n                \n                    \n                    WomboDreamTaskState\n                \n            \n            \n                \n                        \"pending\" | \"failed\" | \"completed\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            __INCLUDE_IN_HELP   (src/.../includeInHelp.decorator.ts)\n                        \n                        \n                            getEnvVarValue   (src/.../yamlConfigurationLoader.ts)\n                        \n                        \n                            purgedQueues   (src/.../queued.decorator.ts)\n                        \n                        \n                            replaceEnvVars   (src/.../yamlConfigurationLoader.ts)\n                        \n                        \n                            YAML_CONFIG_FILENAME   (src/.../yamlConfigurationLoader.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/decorators/includeInHelp.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        __INCLUDE_IN_HELP\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ICommandHelp[]\n\n                    \n                \n                \n                    \n                        Default value : [] as ICommandHelp[]\n                    \n                \n\n\n        \n    \n\n    src/config/yamlConfigurationLoader.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getEnvVarValue\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (value: string): string | undefined => {\n  const paramsPattern = /{(.*?)}/;\n  const param = String(value).match(paramsPattern);\n  if (param !== null) {\n    return process.env[param[1]];\n  }\n  return null;\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceEnvVars\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (obj: any): void => {\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'object') {\n      const value = getEnvVarValue(obj[key]);\n      if (value !== null) {\n        obj[key] = value;\n      }\n    }\n    if (typeof obj[key] === 'object' && obj[key] !== null) {\n      replaceEnvVars(obj[key]);\n    }\n  });\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        YAML_CONFIG_FILENAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'config.yml'\n                    \n                \n\n\n        \n    \n\n    src/decorators/queued.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        purgedQueues\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [] as string[]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/commands.html":{"url":"additional-documentation/commands.html","title":"additional-page - Commands","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n     Available commands \n\n\n\n\n\n\n     List of all commands \n    \n        \n            /help\n        \n        \n            /ai-story\n            \n                open-ai            \n            \n        \n        \n            /ai-art\n            \n                dalle-mini\n                wombo-dream\n                cog-view2\n            \n        \n    \n\n\n\n     /help \n    This command is used for displaying inside any Discord client. Help can be scrolled through by clicking buttons in the bottom part of Help embed\n     \n\n\n\n     /ai-story \n    Container holding all commands related to text based art generation, where text based does not mean ASCII art or similar things but story like forms of art instead    \n    \n    \n        open-ai\n         This command uses Open Ai models to generate short \"stories\" in given style and matching your short description \n        Parameters:\n        \n            \n                headline: headline you would give to your story\n            \n            \n                model: model from OpenAI model collection you want to use (defaults to davinci-instruct2)\n            \n        \n        ⚠️ This command is currently not available in main deployment, in order to use it you have to deploy bot yourself., ⚠️\n    \n    \n\n\n\n\n\n     /ai-art \n    Container holding all command related to visual art generators such as images or NFTs\n    \n    \n        dalle-mini\n         This command uses DalleMini model to generate images based on given prompt\n        Parameters:\n        \n            \n                prompt: prompt describing image you want to generate\n            \n        \n        \n    \n    \n    \n        wombo-dream\n         This command uses Wombo Dream model to generate images based on given prompt and style\n        Parameters:\n        \n            \n                prompt: prompt describing image you want to generate\n            \n            \n                style: style of image you want to generate. List of all styles can be seen here.   \n            \n        \n        \n    \n    \n    \n        cog-view2\n         This command uses CogView2 model to generate images based on given prompt and style\n        Parameters:\n        \n            \n                prompt: prompt describing image you want to generate\n            \n            \n                style: style of image you want to generate..   \n            \n        \n        ⚠️ This command is currently being considered for removal as it was very unstable lately ⚠️\n    \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

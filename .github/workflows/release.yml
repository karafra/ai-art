name: Docker CI

on:
  release:
    types:
      - published
  workflow_dispatch:
  

jobs:
  release-sentry:
    name: Release sentry
    needs: build-and-push-to-ghcr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Create sentry release for main application
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
      - name: Create sentry release for self hosted application
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG_SELF_HOSTED }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT_SELF_HOSTED }}
        with:
          environment: production

  build-and-push-to-ghcr:
    name: Build and push Docker image to GitHub Container registry
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
    - name: Checkout the repository
      uses: actions/checkout@v2

    - name: Login to GitHub Container registry
      uses: docker/login-action@v1
      env:
        GITHUB_USER: ${{ github.actor }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        registry: ghcr.io
        username: $GITHUB_USER
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Docker Image
      env:
        SENTRY_RELEASE_NAME: ${{ github.sha }}
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.repository }}
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./docker/build/Dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} , ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
        build-args: |
          ENVIRONMENT=production

  deploy-to-server:
    name: Deploy bot to karafra.dev server 
    runs-on: ubuntu-latest
    steps:
    - name: install ssh key
      run: |
        install -m 600 -D /dev/null ~/.ssh/id_rsa
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        ssh-keyscan -H karafra.dev > ~/.ssh/known_hosts
    - name: connect and pull and start
      run: ssh root@$karafra.dev "cd releases/ai-arts && git checkout main && git pull && npm start:prod && exit"
    - name: cleanup
      run: rm -rf ~/.ssh
